/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/
"use strict";

var $protobuf = require("protobufjs/minimal");

// Common aliases
var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;

// Exported root namespace
var $root = $protobuf.roots["default"] || ($protobuf.roots["default"] = {});

$root.discord_protos = (function() {

    /**
     * Namespace discord_protos.
     * @exports discord_protos
     * @namespace
     */
    var discord_protos = {};

    discord_protos.discord_users = (function() {

        /**
         * Namespace discord_users.
         * @memberof discord_protos
         * @namespace
         */
        var discord_users = {};

        discord_users.v1 = (function() {

            /**
             * Namespace v1.
             * @memberof discord_protos.discord_users
             * @namespace
             */
            var v1 = {};

            v1.FrecencyUserSettings = (function() {

                /**
                 * Namespace FrecencyUserSettings.
                 * @memberof discord_protos.discord_users.v1
                 * @namespace
                 */
                var FrecencyUserSettings = {};

                FrecencyUserSettings.FrecencyUserSettings = (function() {

                    /**
                     * Properties of a FrecencyUserSettings.
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings
                     * @interface IFrecencyUserSettings
                     * @property {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IVersions|null} [versions] FrecencyUserSettings versions
                     * @property {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIFs|null} [favorite_gifs] FrecencyUserSettings favorite_gifs
                     * @property {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteStickers|null} [favorite_stickers] FrecencyUserSettings favorite_stickers
                     * @property {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IStickerFrecency|null} [sticker_frecency] FrecencyUserSettings sticker_frecency
                     * @property {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteEmojis|null} [favorite_emojis] FrecencyUserSettings favorite_emojis
                     * @property {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IEmojiFrecency|null} [emoji_frecency] FrecencyUserSettings emoji_frecency
                     * @property {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IApplicationCommandFrecency|null} [application_command_frecency] FrecencyUserSettings application_command_frecency
                     */

                    /**
                     * Constructs a new FrecencyUserSettings.
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings
                     * @classdesc Represents a FrecencyUserSettings.
                     * @implements IFrecencyUserSettings
                     * @constructor
                     * @param {discord_protos.discord_users.v1.FrecencyUserSettings.IFrecencyUserSettings=} [properties] Properties to set
                     */
                    function FrecencyUserSettings(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * FrecencyUserSettings versions.
                     * @member {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IVersions|null|undefined} versions
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    FrecencyUserSettings.prototype.versions = null;

                    /**
                     * FrecencyUserSettings favorite_gifs.
                     * @member {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIFs|null|undefined} favorite_gifs
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    FrecencyUserSettings.prototype.favorite_gifs = null;

                    /**
                     * FrecencyUserSettings favorite_stickers.
                     * @member {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteStickers|null|undefined} favorite_stickers
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    FrecencyUserSettings.prototype.favorite_stickers = null;

                    /**
                     * FrecencyUserSettings sticker_frecency.
                     * @member {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IStickerFrecency|null|undefined} sticker_frecency
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    FrecencyUserSettings.prototype.sticker_frecency = null;

                    /**
                     * FrecencyUserSettings favorite_emojis.
                     * @member {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteEmojis|null|undefined} favorite_emojis
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    FrecencyUserSettings.prototype.favorite_emojis = null;

                    /**
                     * FrecencyUserSettings emoji_frecency.
                     * @member {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IEmojiFrecency|null|undefined} emoji_frecency
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    FrecencyUserSettings.prototype.emoji_frecency = null;

                    /**
                     * FrecencyUserSettings application_command_frecency.
                     * @member {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IApplicationCommandFrecency|null|undefined} application_command_frecency
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    FrecencyUserSettings.prototype.application_command_frecency = null;

                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;

                    /**
                     * FrecencyUserSettings _versions.
                     * @member {"versions"|undefined} _versions
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    Object.defineProperty(FrecencyUserSettings.prototype, "_versions", {
                        get: $util.oneOfGetter($oneOfFields = ["versions"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * FrecencyUserSettings _favorite_gifs.
                     * @member {"favorite_gifs"|undefined} _favorite_gifs
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    Object.defineProperty(FrecencyUserSettings.prototype, "_favorite_gifs", {
                        get: $util.oneOfGetter($oneOfFields = ["favorite_gifs"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * FrecencyUserSettings _favorite_stickers.
                     * @member {"favorite_stickers"|undefined} _favorite_stickers
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    Object.defineProperty(FrecencyUserSettings.prototype, "_favorite_stickers", {
                        get: $util.oneOfGetter($oneOfFields = ["favorite_stickers"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * FrecencyUserSettings _sticker_frecency.
                     * @member {"sticker_frecency"|undefined} _sticker_frecency
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    Object.defineProperty(FrecencyUserSettings.prototype, "_sticker_frecency", {
                        get: $util.oneOfGetter($oneOfFields = ["sticker_frecency"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * FrecencyUserSettings _favorite_emojis.
                     * @member {"favorite_emojis"|undefined} _favorite_emojis
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    Object.defineProperty(FrecencyUserSettings.prototype, "_favorite_emojis", {
                        get: $util.oneOfGetter($oneOfFields = ["favorite_emojis"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * FrecencyUserSettings _emoji_frecency.
                     * @member {"emoji_frecency"|undefined} _emoji_frecency
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    Object.defineProperty(FrecencyUserSettings.prototype, "_emoji_frecency", {
                        get: $util.oneOfGetter($oneOfFields = ["emoji_frecency"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * FrecencyUserSettings _application_command_frecency.
                     * @member {"application_command_frecency"|undefined} _application_command_frecency
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     */
                    Object.defineProperty(FrecencyUserSettings.prototype, "_application_command_frecency", {
                        get: $util.oneOfGetter($oneOfFields = ["application_command_frecency"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * Creates a new FrecencyUserSettings instance using the specified properties.
                     * @function create
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @static
                     * @param {discord_protos.discord_users.v1.FrecencyUserSettings.IFrecencyUserSettings=} [properties] Properties to set
                     * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings} FrecencyUserSettings instance
                     */
                    FrecencyUserSettings.create = function create(properties) {
                        return new FrecencyUserSettings(properties);
                    };

                    /**
                     * Encodes the specified FrecencyUserSettings message. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.verify|verify} messages.
                     * @function encode
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @static
                     * @param {discord_protos.discord_users.v1.FrecencyUserSettings.IFrecencyUserSettings} message FrecencyUserSettings message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    FrecencyUserSettings.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.versions != null && Object.hasOwnProperty.call(message, "versions"))
                            $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions.encode(message.versions, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.favorite_gifs != null && Object.hasOwnProperty.call(message, "favorite_gifs"))
                            $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs.encode(message.favorite_gifs, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.favorite_stickers != null && Object.hasOwnProperty.call(message, "favorite_stickers"))
                            $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers.encode(message.favorite_stickers, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.sticker_frecency != null && Object.hasOwnProperty.call(message, "sticker_frecency"))
                            $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency.encode(message.sticker_frecency, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.favorite_emojis != null && Object.hasOwnProperty.call(message, "favorite_emojis"))
                            $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis.encode(message.favorite_emojis, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.emoji_frecency != null && Object.hasOwnProperty.call(message, "emoji_frecency"))
                            $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency.encode(message.emoji_frecency, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.application_command_frecency != null && Object.hasOwnProperty.call(message, "application_command_frecency"))
                            $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency.encode(message.application_command_frecency, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        return writer;
                    };

                    /**
                     * Encodes the specified FrecencyUserSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @static
                     * @param {discord_protos.discord_users.v1.FrecencyUserSettings.IFrecencyUserSettings} message FrecencyUserSettings message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    FrecencyUserSettings.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a FrecencyUserSettings message from the specified reader or buffer.
                     * @function decode
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings} FrecencyUserSettings
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    FrecencyUserSettings.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.versions = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.favorite_gifs = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.favorite_stickers = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.sticker_frecency = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.favorite_emojis = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.emoji_frecency = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.application_command_frecency = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a FrecencyUserSettings message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings} FrecencyUserSettings
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    FrecencyUserSettings.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a FrecencyUserSettings message.
                     * @function verify
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    FrecencyUserSettings.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.versions != null && message.hasOwnProperty("versions")) {
                            properties._versions = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions.verify(message.versions);
                                if (error)
                                    return "versions." + error;
                            }
                        }
                        if (message.favorite_gifs != null && message.hasOwnProperty("favorite_gifs")) {
                            properties._favorite_gifs = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs.verify(message.favorite_gifs);
                                if (error)
                                    return "favorite_gifs." + error;
                            }
                        }
                        if (message.favorite_stickers != null && message.hasOwnProperty("favorite_stickers")) {
                            properties._favorite_stickers = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers.verify(message.favorite_stickers);
                                if (error)
                                    return "favorite_stickers." + error;
                            }
                        }
                        if (message.sticker_frecency != null && message.hasOwnProperty("sticker_frecency")) {
                            properties._sticker_frecency = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency.verify(message.sticker_frecency);
                                if (error)
                                    return "sticker_frecency." + error;
                            }
                        }
                        if (message.favorite_emojis != null && message.hasOwnProperty("favorite_emojis")) {
                            properties._favorite_emojis = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis.verify(message.favorite_emojis);
                                if (error)
                                    return "favorite_emojis." + error;
                            }
                        }
                        if (message.emoji_frecency != null && message.hasOwnProperty("emoji_frecency")) {
                            properties._emoji_frecency = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency.verify(message.emoji_frecency);
                                if (error)
                                    return "emoji_frecency." + error;
                            }
                        }
                        if (message.application_command_frecency != null && message.hasOwnProperty("application_command_frecency")) {
                            properties._application_command_frecency = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency.verify(message.application_command_frecency);
                                if (error)
                                    return "application_command_frecency." + error;
                            }
                        }
                        return null;
                    };

                    /**
                     * Creates a FrecencyUserSettings message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings} FrecencyUserSettings
                     */
                    FrecencyUserSettings.fromObject = function fromObject(object) {
                        if (object instanceof $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings)
                            return object;
                        var message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings();
                        if (object.versions != null) {
                            if (typeof object.versions !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.versions: object expected");
                            message.versions = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions.fromObject(object.versions);
                        }
                        if (object.favorite_gifs != null) {
                            if (typeof object.favorite_gifs !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.favorite_gifs: object expected");
                            message.favorite_gifs = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs.fromObject(object.favorite_gifs);
                        }
                        if (object.favorite_stickers != null) {
                            if (typeof object.favorite_stickers !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.favorite_stickers: object expected");
                            message.favorite_stickers = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers.fromObject(object.favorite_stickers);
                        }
                        if (object.sticker_frecency != null) {
                            if (typeof object.sticker_frecency !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.sticker_frecency: object expected");
                            message.sticker_frecency = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency.fromObject(object.sticker_frecency);
                        }
                        if (object.favorite_emojis != null) {
                            if (typeof object.favorite_emojis !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.favorite_emojis: object expected");
                            message.favorite_emojis = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis.fromObject(object.favorite_emojis);
                        }
                        if (object.emoji_frecency != null) {
                            if (typeof object.emoji_frecency !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.emoji_frecency: object expected");
                            message.emoji_frecency = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency.fromObject(object.emoji_frecency);
                        }
                        if (object.application_command_frecency != null) {
                            if (typeof object.application_command_frecency !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.application_command_frecency: object expected");
                            message.application_command_frecency = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency.fromObject(object.application_command_frecency);
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a FrecencyUserSettings message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @static
                     * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings} message FrecencyUserSettings
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    FrecencyUserSettings.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.versions != null && message.hasOwnProperty("versions")) {
                            object.versions = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions.toObject(message.versions, options);
                            if (options.oneofs)
                                object._versions = "versions";
                        }
                        if (message.favorite_gifs != null && message.hasOwnProperty("favorite_gifs")) {
                            object.favorite_gifs = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs.toObject(message.favorite_gifs, options);
                            if (options.oneofs)
                                object._favorite_gifs = "favorite_gifs";
                        }
                        if (message.favorite_stickers != null && message.hasOwnProperty("favorite_stickers")) {
                            object.favorite_stickers = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers.toObject(message.favorite_stickers, options);
                            if (options.oneofs)
                                object._favorite_stickers = "favorite_stickers";
                        }
                        if (message.sticker_frecency != null && message.hasOwnProperty("sticker_frecency")) {
                            object.sticker_frecency = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency.toObject(message.sticker_frecency, options);
                            if (options.oneofs)
                                object._sticker_frecency = "sticker_frecency";
                        }
                        if (message.favorite_emojis != null && message.hasOwnProperty("favorite_emojis")) {
                            object.favorite_emojis = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis.toObject(message.favorite_emojis, options);
                            if (options.oneofs)
                                object._favorite_emojis = "favorite_emojis";
                        }
                        if (message.emoji_frecency != null && message.hasOwnProperty("emoji_frecency")) {
                            object.emoji_frecency = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency.toObject(message.emoji_frecency, options);
                            if (options.oneofs)
                                object._emoji_frecency = "emoji_frecency";
                        }
                        if (message.application_command_frecency != null && message.hasOwnProperty("application_command_frecency")) {
                            object.application_command_frecency = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency.toObject(message.application_command_frecency, options);
                            if (options.oneofs)
                                object._application_command_frecency = "application_command_frecency";
                        }
                        return object;
                    };

                    /**
                     * Converts this FrecencyUserSettings to JSON.
                     * @function toJSON
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    FrecencyUserSettings.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    /**
                     * Gets the default type url for FrecencyUserSettings
                     * @function getTypeUrl
                     * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    FrecencyUserSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings";
                    };

                    FrecencyUserSettings.Versions = (function() {

                        /**
                         * Properties of a Versions.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @interface IVersions
                         * @property {number|null} [client_version] Versions client_version
                         * @property {number|null} [server_version] Versions server_version
                         * @property {number|null} [data_version] Versions data_version
                         */

                        /**
                         * Constructs a new Versions.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @classdesc Represents a Versions.
                         * @implements IVersions
                         * @constructor
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IVersions=} [properties] Properties to set
                         */
                        function Versions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * Versions client_version.
                         * @member {number} client_version
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @instance
                         */
                        Versions.prototype.client_version = 0;

                        /**
                         * Versions server_version.
                         * @member {number} server_version
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @instance
                         */
                        Versions.prototype.server_version = 0;

                        /**
                         * Versions data_version.
                         * @member {number} data_version
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @instance
                         */
                        Versions.prototype.data_version = 0;

                        /**
                         * Creates a new Versions instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IVersions=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions} Versions instance
                         */
                        Versions.create = function create(properties) {
                            return new Versions(properties);
                        };

                        /**
                         * Encodes the specified Versions message. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IVersions} message Versions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Versions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.client_version != null && Object.hasOwnProperty.call(message, "client_version"))
                                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.client_version);
                            if (message.server_version != null && Object.hasOwnProperty.call(message, "server_version"))
                                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.server_version);
                            if (message.data_version != null && Object.hasOwnProperty.call(message, "data_version"))
                                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.data_version);
                            return writer;
                        };

                        /**
                         * Encodes the specified Versions message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IVersions} message Versions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Versions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a Versions message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions} Versions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Versions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.client_version = reader.uint32();
                                        break;
                                    }
                                case 2: {
                                        message.server_version = reader.uint32();
                                        break;
                                    }
                                case 3: {
                                        message.data_version = reader.uint32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a Versions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions} Versions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Versions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a Versions message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Versions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.client_version != null && message.hasOwnProperty("client_version"))
                                if (!$util.isInteger(message.client_version))
                                    return "client_version: integer expected";
                            if (message.server_version != null && message.hasOwnProperty("server_version"))
                                if (!$util.isInteger(message.server_version))
                                    return "server_version: integer expected";
                            if (message.data_version != null && message.hasOwnProperty("data_version"))
                                if (!$util.isInteger(message.data_version))
                                    return "data_version: integer expected";
                            return null;
                        };

                        /**
                         * Creates a Versions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions} Versions
                         */
                        Versions.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions();
                            if (object.client_version != null)
                                message.client_version = object.client_version >>> 0;
                            if (object.server_version != null)
                                message.server_version = object.server_version >>> 0;
                            if (object.data_version != null)
                                message.data_version = object.data_version >>> 0;
                            return message;
                        };

                        /**
                         * Creates a plain object from a Versions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions} message Versions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Versions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.client_version = 0;
                                object.server_version = 0;
                                object.data_version = 0;
                            }
                            if (message.client_version != null && message.hasOwnProperty("client_version"))
                                object.client_version = message.client_version;
                            if (message.server_version != null && message.hasOwnProperty("server_version"))
                                object.server_version = message.server_version;
                            if (message.data_version != null && message.hasOwnProperty("data_version"))
                                object.data_version = message.data_version;
                            return object;
                        };

                        /**
                         * Converts this Versions to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Versions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for Versions
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Versions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.Versions";
                        };

                        return Versions;
                    })();

                    /**
                     * GIFType enum.
                     * @name discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.GIFType
                     * @enum {number}
                     * @property {number} NONE=0 NONE value
                     * @property {number} IMAGE=1 IMAGE value
                     * @property {number} VIDEO=2 VIDEO value
                     */
                    FrecencyUserSettings.GIFType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "NONE"] = 0;
                        values[valuesById[1] = "IMAGE"] = 1;
                        values[valuesById[2] = "VIDEO"] = 2;
                        return values;
                    })();

                    FrecencyUserSettings.FavoriteGIF = (function() {

                        /**
                         * Properties of a FavoriteGIF.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @interface IFavoriteGIF
                         * @property {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.GIFType|null} [format] FavoriteGIF format
                         * @property {string|null} [src] FavoriteGIF src
                         * @property {number|null} [width] FavoriteGIF width
                         * @property {number|null} [height] FavoriteGIF height
                         * @property {number|null} [order] FavoriteGIF order
                         */

                        /**
                         * Constructs a new FavoriteGIF.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @classdesc Represents a FavoriteGIF.
                         * @implements IFavoriteGIF
                         * @constructor
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIF=} [properties] Properties to set
                         */
                        function FavoriteGIF(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * FavoriteGIF format.
                         * @member {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.GIFType} format
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @instance
                         */
                        FavoriteGIF.prototype.format = 0;

                        /**
                         * FavoriteGIF src.
                         * @member {string} src
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @instance
                         */
                        FavoriteGIF.prototype.src = "";

                        /**
                         * FavoriteGIF width.
                         * @member {number} width
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @instance
                         */
                        FavoriteGIF.prototype.width = 0;

                        /**
                         * FavoriteGIF height.
                         * @member {number} height
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @instance
                         */
                        FavoriteGIF.prototype.height = 0;

                        /**
                         * FavoriteGIF order.
                         * @member {number} order
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @instance
                         */
                        FavoriteGIF.prototype.order = 0;

                        /**
                         * Creates a new FavoriteGIF instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIF=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF} FavoriteGIF instance
                         */
                        FavoriteGIF.create = function create(properties) {
                            return new FavoriteGIF(properties);
                        };

                        /**
                         * Encodes the specified FavoriteGIF message. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIF} message FavoriteGIF message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FavoriteGIF.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.format != null && Object.hasOwnProperty.call(message, "format"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.format);
                            if (message.src != null && Object.hasOwnProperty.call(message, "src"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.src);
                            if (message.width != null && Object.hasOwnProperty.call(message, "width"))
                                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.width);
                            if (message.height != null && Object.hasOwnProperty.call(message, "height"))
                                writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.height);
                            if (message.order != null && Object.hasOwnProperty.call(message, "order"))
                                writer.uint32(/* id 5, wireType 0 =*/40).uint32(message.order);
                            return writer;
                        };

                        /**
                         * Encodes the specified FavoriteGIF message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIF} message FavoriteGIF message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FavoriteGIF.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a FavoriteGIF message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF} FavoriteGIF
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FavoriteGIF.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.format = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.src = reader.string();
                                        break;
                                    }
                                case 3: {
                                        message.width = reader.uint32();
                                        break;
                                    }
                                case 4: {
                                        message.height = reader.uint32();
                                        break;
                                    }
                                case 5: {
                                        message.order = reader.uint32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a FavoriteGIF message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF} FavoriteGIF
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FavoriteGIF.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a FavoriteGIF message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FavoriteGIF.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.format != null && message.hasOwnProperty("format"))
                                switch (message.format) {
                                default:
                                    return "format: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.src != null && message.hasOwnProperty("src"))
                                if (!$util.isString(message.src))
                                    return "src: string expected";
                            if (message.width != null && message.hasOwnProperty("width"))
                                if (!$util.isInteger(message.width))
                                    return "width: integer expected";
                            if (message.height != null && message.hasOwnProperty("height"))
                                if (!$util.isInteger(message.height))
                                    return "height: integer expected";
                            if (message.order != null && message.hasOwnProperty("order"))
                                if (!$util.isInteger(message.order))
                                    return "order: integer expected";
                            return null;
                        };

                        /**
                         * Creates a FavoriteGIF message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF} FavoriteGIF
                         */
                        FavoriteGIF.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF();
                            switch (object.format) {
                            default:
                                if (typeof object.format === "number") {
                                    message.format = object.format;
                                    break;
                                }
                                break;
                            case "NONE":
                            case 0:
                                message.format = 0;
                                break;
                            case "IMAGE":
                            case 1:
                                message.format = 1;
                                break;
                            case "VIDEO":
                            case 2:
                                message.format = 2;
                                break;
                            }
                            if (object.src != null)
                                message.src = String(object.src);
                            if (object.width != null)
                                message.width = object.width >>> 0;
                            if (object.height != null)
                                message.height = object.height >>> 0;
                            if (object.order != null)
                                message.order = object.order >>> 0;
                            return message;
                        };

                        /**
                         * Creates a plain object from a FavoriteGIF message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF} message FavoriteGIF
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FavoriteGIF.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.format = options.enums === String ? "NONE" : 0;
                                object.src = "";
                                object.width = 0;
                                object.height = 0;
                                object.order = 0;
                            }
                            if (message.format != null && message.hasOwnProperty("format"))
                                object.format = options.enums === String ? $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.GIFType[message.format] === undefined ? message.format : $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.GIFType[message.format] : message.format;
                            if (message.src != null && message.hasOwnProperty("src"))
                                object.src = message.src;
                            if (message.width != null && message.hasOwnProperty("width"))
                                object.width = message.width;
                            if (message.height != null && message.hasOwnProperty("height"))
                                object.height = message.height;
                            if (message.order != null && message.hasOwnProperty("order"))
                                object.order = message.order;
                            return object;
                        };

                        /**
                         * Converts this FavoriteGIF to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FavoriteGIF.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for FavoriteGIF
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FavoriteGIF.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF";
                        };

                        return FavoriteGIF;
                    })();

                    FrecencyUserSettings.FavoriteGIFs = (function() {

                        /**
                         * Properties of a FavoriteGIFs.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @interface IFavoriteGIFs
                         * @property {Object.<string,discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIF>|null} [gifs] FavoriteGIFs gifs
                         * @property {boolean|null} [hide_tooltip] FavoriteGIFs hide_tooltip
                         */

                        /**
                         * Constructs a new FavoriteGIFs.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @classdesc Represents a FavoriteGIFs.
                         * @implements IFavoriteGIFs
                         * @constructor
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIFs=} [properties] Properties to set
                         */
                        function FavoriteGIFs(properties) {
                            this.gifs = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * FavoriteGIFs gifs.
                         * @member {Object.<string,discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIF>} gifs
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @instance
                         */
                        FavoriteGIFs.prototype.gifs = $util.emptyObject;

                        /**
                         * FavoriteGIFs hide_tooltip.
                         * @member {boolean} hide_tooltip
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @instance
                         */
                        FavoriteGIFs.prototype.hide_tooltip = false;

                        /**
                         * Creates a new FavoriteGIFs instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIFs=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs} FavoriteGIFs instance
                         */
                        FavoriteGIFs.create = function create(properties) {
                            return new FavoriteGIFs(properties);
                        };

                        /**
                         * Encodes the specified FavoriteGIFs message. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIFs} message FavoriteGIFs message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FavoriteGIFs.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.gifs != null && Object.hasOwnProperty.call(message, "gifs"))
                                for (var keys = Object.keys(message.gifs), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF.encode(message.gifs[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.hide_tooltip != null && Object.hasOwnProperty.call(message, "hide_tooltip"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.hide_tooltip);
                            return writer;
                        };

                        /**
                         * Encodes the specified FavoriteGIFs message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteGIFs} message FavoriteGIFs message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FavoriteGIFs.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a FavoriteGIFs message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs} FavoriteGIFs
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FavoriteGIFs.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.gifs === $util.emptyObject)
                                            message.gifs = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.gifs[key] = value;
                                        break;
                                    }
                                case 2: {
                                        message.hide_tooltip = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a FavoriteGIFs message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs} FavoriteGIFs
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FavoriteGIFs.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a FavoriteGIFs message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FavoriteGIFs.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.gifs != null && message.hasOwnProperty("gifs")) {
                                if (!$util.isObject(message.gifs))
                                    return "gifs: object expected";
                                var key = Object.keys(message.gifs);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF.verify(message.gifs[key[i]]);
                                    if (error)
                                        return "gifs." + error;
                                }
                            }
                            if (message.hide_tooltip != null && message.hasOwnProperty("hide_tooltip"))
                                if (typeof message.hide_tooltip !== "boolean")
                                    return "hide_tooltip: boolean expected";
                            return null;
                        };

                        /**
                         * Creates a FavoriteGIFs message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs} FavoriteGIFs
                         */
                        FavoriteGIFs.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs();
                            if (object.gifs) {
                                if (typeof object.gifs !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs.gifs: object expected");
                                message.gifs = {};
                                for (var keys = Object.keys(object.gifs), i = 0; i < keys.length; ++i) {
                                    if (typeof object.gifs[keys[i]] !== "object")
                                        throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs.gifs: object expected");
                                    message.gifs[keys[i]] = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF.fromObject(object.gifs[keys[i]]);
                                }
                            }
                            if (object.hide_tooltip != null)
                                message.hide_tooltip = Boolean(object.hide_tooltip);
                            return message;
                        };

                        /**
                         * Creates a plain object from a FavoriteGIFs message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs} message FavoriteGIFs
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FavoriteGIFs.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.gifs = {};
                            if (options.defaults)
                                object.hide_tooltip = false;
                            var keys2;
                            if (message.gifs && (keys2 = Object.keys(message.gifs)).length) {
                                object.gifs = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.gifs[keys2[j]] = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIF.toObject(message.gifs[keys2[j]], options);
                            }
                            if (message.hide_tooltip != null && message.hasOwnProperty("hide_tooltip"))
                                object.hide_tooltip = message.hide_tooltip;
                            return object;
                        };

                        /**
                         * Converts this FavoriteGIFs to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FavoriteGIFs.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for FavoriteGIFs
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FavoriteGIFs.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteGIFs";
                        };

                        return FavoriteGIFs;
                    })();

                    FrecencyUserSettings.FavoriteStickers = (function() {

                        /**
                         * Properties of a FavoriteStickers.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @interface IFavoriteStickers
                         * @property {Array.<number|Long>|null} [sticker_ids] FavoriteStickers sticker_ids
                         */

                        /**
                         * Constructs a new FavoriteStickers.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @classdesc Represents a FavoriteStickers.
                         * @implements IFavoriteStickers
                         * @constructor
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteStickers=} [properties] Properties to set
                         */
                        function FavoriteStickers(properties) {
                            this.sticker_ids = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * FavoriteStickers sticker_ids.
                         * @member {Array.<number|Long>} sticker_ids
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @instance
                         */
                        FavoriteStickers.prototype.sticker_ids = $util.emptyArray;

                        /**
                         * Creates a new FavoriteStickers instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteStickers=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers} FavoriteStickers instance
                         */
                        FavoriteStickers.create = function create(properties) {
                            return new FavoriteStickers(properties);
                        };

                        /**
                         * Encodes the specified FavoriteStickers message. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteStickers} message FavoriteStickers message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FavoriteStickers.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.sticker_ids != null && message.sticker_ids.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.sticker_ids.length; ++i)
                                    writer.fixed64(message.sticker_ids[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };

                        /**
                         * Encodes the specified FavoriteStickers message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteStickers} message FavoriteStickers message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FavoriteStickers.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a FavoriteStickers message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers} FavoriteStickers
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FavoriteStickers.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.sticker_ids && message.sticker_ids.length))
                                            message.sticker_ids = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.sticker_ids.push(reader.fixed64());
                                        } else
                                            message.sticker_ids.push(reader.fixed64());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a FavoriteStickers message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers} FavoriteStickers
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FavoriteStickers.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a FavoriteStickers message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FavoriteStickers.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.sticker_ids != null && message.hasOwnProperty("sticker_ids")) {
                                if (!Array.isArray(message.sticker_ids))
                                    return "sticker_ids: array expected";
                                for (var i = 0; i < message.sticker_ids.length; ++i)
                                    if (!$util.isInteger(message.sticker_ids[i]) && !(message.sticker_ids[i] && $util.isInteger(message.sticker_ids[i].low) && $util.isInteger(message.sticker_ids[i].high)))
                                        return "sticker_ids: integer|Long[] expected";
                            }
                            return null;
                        };

                        /**
                         * Creates a FavoriteStickers message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers} FavoriteStickers
                         */
                        FavoriteStickers.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers();
                            if (object.sticker_ids) {
                                if (!Array.isArray(object.sticker_ids))
                                    throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers.sticker_ids: array expected");
                                message.sticker_ids = [];
                                for (var i = 0; i < object.sticker_ids.length; ++i)
                                    if ($util.Long)
                                        (message.sticker_ids[i] = $util.Long.fromValue(object.sticker_ids[i])).unsigned = false;
                                    else if (typeof object.sticker_ids[i] === "string")
                                        message.sticker_ids[i] = parseInt(object.sticker_ids[i], 10);
                                    else if (typeof object.sticker_ids[i] === "number")
                                        message.sticker_ids[i] = object.sticker_ids[i];
                                    else if (typeof object.sticker_ids[i] === "object")
                                        message.sticker_ids[i] = new $util.LongBits(object.sticker_ids[i].low >>> 0, object.sticker_ids[i].high >>> 0).toNumber();
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a FavoriteStickers message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers} message FavoriteStickers
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FavoriteStickers.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.sticker_ids = [];
                            if (message.sticker_ids && message.sticker_ids.length) {
                                object.sticker_ids = [];
                                for (var j = 0; j < message.sticker_ids.length; ++j)
                                    if (typeof message.sticker_ids[j] === "number")
                                        object.sticker_ids[j] = options.longs === String ? String(message.sticker_ids[j]) : message.sticker_ids[j];
                                    else
                                        object.sticker_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.sticker_ids[j]) : options.longs === Number ? new $util.LongBits(message.sticker_ids[j].low >>> 0, message.sticker_ids[j].high >>> 0).toNumber() : message.sticker_ids[j];
                            }
                            return object;
                        };

                        /**
                         * Converts this FavoriteStickers to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FavoriteStickers.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for FavoriteStickers
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FavoriteStickers.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteStickers";
                        };

                        return FavoriteStickers;
                    })();

                    FrecencyUserSettings.FrecencyItem = (function() {

                        /**
                         * Properties of a FrecencyItem.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @interface IFrecencyItem
                         * @property {number|null} [total_uses] FrecencyItem total_uses
                         * @property {Array.<number|Long>|null} [recent_uses] FrecencyItem recent_uses
                         * @property {number|null} [frecency] FrecencyItem frecency
                         * @property {number|null} [score] FrecencyItem score
                         */

                        /**
                         * Constructs a new FrecencyItem.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @classdesc Represents a FrecencyItem.
                         * @implements IFrecencyItem
                         * @constructor
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFrecencyItem=} [properties] Properties to set
                         */
                        function FrecencyItem(properties) {
                            this.recent_uses = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * FrecencyItem total_uses.
                         * @member {number} total_uses
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @instance
                         */
                        FrecencyItem.prototype.total_uses = 0;

                        /**
                         * FrecencyItem recent_uses.
                         * @member {Array.<number|Long>} recent_uses
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @instance
                         */
                        FrecencyItem.prototype.recent_uses = $util.emptyArray;

                        /**
                         * FrecencyItem frecency.
                         * @member {number} frecency
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @instance
                         */
                        FrecencyItem.prototype.frecency = 0;

                        /**
                         * FrecencyItem score.
                         * @member {number} score
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @instance
                         */
                        FrecencyItem.prototype.score = 0;

                        /**
                         * Creates a new FrecencyItem instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFrecencyItem=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem} FrecencyItem instance
                         */
                        FrecencyItem.create = function create(properties) {
                            return new FrecencyItem(properties);
                        };

                        /**
                         * Encodes the specified FrecencyItem message. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFrecencyItem} message FrecencyItem message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FrecencyItem.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.total_uses != null && Object.hasOwnProperty.call(message, "total_uses"))
                                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.total_uses);
                            if (message.recent_uses != null && message.recent_uses.length) {
                                writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                for (var i = 0; i < message.recent_uses.length; ++i)
                                    writer.uint64(message.recent_uses[i]);
                                writer.ldelim();
                            }
                            if (message.frecency != null && Object.hasOwnProperty.call(message, "frecency"))
                                writer.uint32(/* id 3, wireType 0 =*/24).int32(message.frecency);
                            if (message.score != null && Object.hasOwnProperty.call(message, "score"))
                                writer.uint32(/* id 4, wireType 0 =*/32).int32(message.score);
                            return writer;
                        };

                        /**
                         * Encodes the specified FrecencyItem message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFrecencyItem} message FrecencyItem message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FrecencyItem.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a FrecencyItem message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem} FrecencyItem
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FrecencyItem.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.total_uses = reader.uint32();
                                        break;
                                    }
                                case 2: {
                                        if (!(message.recent_uses && message.recent_uses.length))
                                            message.recent_uses = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.recent_uses.push(reader.uint64());
                                        } else
                                            message.recent_uses.push(reader.uint64());
                                        break;
                                    }
                                case 3: {
                                        message.frecency = reader.int32();
                                        break;
                                    }
                                case 4: {
                                        message.score = reader.int32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a FrecencyItem message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem} FrecencyItem
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FrecencyItem.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a FrecencyItem message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FrecencyItem.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.total_uses != null && message.hasOwnProperty("total_uses"))
                                if (!$util.isInteger(message.total_uses))
                                    return "total_uses: integer expected";
                            if (message.recent_uses != null && message.hasOwnProperty("recent_uses")) {
                                if (!Array.isArray(message.recent_uses))
                                    return "recent_uses: array expected";
                                for (var i = 0; i < message.recent_uses.length; ++i)
                                    if (!$util.isInteger(message.recent_uses[i]) && !(message.recent_uses[i] && $util.isInteger(message.recent_uses[i].low) && $util.isInteger(message.recent_uses[i].high)))
                                        return "recent_uses: integer|Long[] expected";
                            }
                            if (message.frecency != null && message.hasOwnProperty("frecency"))
                                if (!$util.isInteger(message.frecency))
                                    return "frecency: integer expected";
                            if (message.score != null && message.hasOwnProperty("score"))
                                if (!$util.isInteger(message.score))
                                    return "score: integer expected";
                            return null;
                        };

                        /**
                         * Creates a FrecencyItem message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem} FrecencyItem
                         */
                        FrecencyItem.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem();
                            if (object.total_uses != null)
                                message.total_uses = object.total_uses >>> 0;
                            if (object.recent_uses) {
                                if (!Array.isArray(object.recent_uses))
                                    throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.recent_uses: array expected");
                                message.recent_uses = [];
                                for (var i = 0; i < object.recent_uses.length; ++i)
                                    if ($util.Long)
                                        (message.recent_uses[i] = $util.Long.fromValue(object.recent_uses[i])).unsigned = true;
                                    else if (typeof object.recent_uses[i] === "string")
                                        message.recent_uses[i] = parseInt(object.recent_uses[i], 10);
                                    else if (typeof object.recent_uses[i] === "number")
                                        message.recent_uses[i] = object.recent_uses[i];
                                    else if (typeof object.recent_uses[i] === "object")
                                        message.recent_uses[i] = new $util.LongBits(object.recent_uses[i].low >>> 0, object.recent_uses[i].high >>> 0).toNumber(true);
                            }
                            if (object.frecency != null)
                                message.frecency = object.frecency | 0;
                            if (object.score != null)
                                message.score = object.score | 0;
                            return message;
                        };

                        /**
                         * Creates a plain object from a FrecencyItem message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem} message FrecencyItem
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FrecencyItem.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.recent_uses = [];
                            if (options.defaults) {
                                object.total_uses = 0;
                                object.frecency = 0;
                                object.score = 0;
                            }
                            if (message.total_uses != null && message.hasOwnProperty("total_uses"))
                                object.total_uses = message.total_uses;
                            if (message.recent_uses && message.recent_uses.length) {
                                object.recent_uses = [];
                                for (var j = 0; j < message.recent_uses.length; ++j)
                                    if (typeof message.recent_uses[j] === "number")
                                        object.recent_uses[j] = options.longs === String ? String(message.recent_uses[j]) : message.recent_uses[j];
                                    else
                                        object.recent_uses[j] = options.longs === String ? $util.Long.prototype.toString.call(message.recent_uses[j]) : options.longs === Number ? new $util.LongBits(message.recent_uses[j].low >>> 0, message.recent_uses[j].high >>> 0).toNumber(true) : message.recent_uses[j];
                            }
                            if (message.frecency != null && message.hasOwnProperty("frecency"))
                                object.frecency = message.frecency;
                            if (message.score != null && message.hasOwnProperty("score"))
                                object.score = message.score;
                            return object;
                        };

                        /**
                         * Converts this FrecencyItem to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FrecencyItem.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for FrecencyItem
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FrecencyItem.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem";
                        };

                        return FrecencyItem;
                    })();

                    FrecencyUserSettings.StickerFrecency = (function() {

                        /**
                         * Properties of a StickerFrecency.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @interface IStickerFrecency
                         * @property {Object.<string,discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFrecencyItem>|null} [stickers] StickerFrecency stickers
                         */

                        /**
                         * Constructs a new StickerFrecency.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @classdesc Represents a StickerFrecency.
                         * @implements IStickerFrecency
                         * @constructor
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IStickerFrecency=} [properties] Properties to set
                         */
                        function StickerFrecency(properties) {
                            this.stickers = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * StickerFrecency stickers.
                         * @member {Object.<string,discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFrecencyItem>} stickers
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @instance
                         */
                        StickerFrecency.prototype.stickers = $util.emptyObject;

                        /**
                         * Creates a new StickerFrecency instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IStickerFrecency=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency} StickerFrecency instance
                         */
                        StickerFrecency.create = function create(properties) {
                            return new StickerFrecency(properties);
                        };

                        /**
                         * Encodes the specified StickerFrecency message. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IStickerFrecency} message StickerFrecency message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StickerFrecency.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.stickers != null && Object.hasOwnProperty.call(message, "stickers"))
                                for (var keys = Object.keys(message.stickers), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 1 =*/9).fixed64(keys[i]);
                                    $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.encode(message.stickers[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };

                        /**
                         * Encodes the specified StickerFrecency message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IStickerFrecency} message StickerFrecency message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StickerFrecency.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a StickerFrecency message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency} StickerFrecency
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StickerFrecency.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.stickers === $util.emptyObject)
                                            message.stickers = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = 0;
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.fixed64();
                                                break;
                                            case 2:
                                                value = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.stickers[typeof key === "object" ? $util.longToHash(key) : key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a StickerFrecency message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency} StickerFrecency
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StickerFrecency.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a StickerFrecency message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StickerFrecency.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.stickers != null && message.hasOwnProperty("stickers")) {
                                if (!$util.isObject(message.stickers))
                                    return "stickers: object expected";
                                var key = Object.keys(message.stickers);
                                for (var i = 0; i < key.length; ++i) {
                                    if (!$util.key64Re.test(key[i]))
                                        return "stickers: integer|Long key{k:fixed64} expected";
                                    {
                                        var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.verify(message.stickers[key[i]]);
                                        if (error)
                                            return "stickers." + error;
                                    }
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a StickerFrecency message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency} StickerFrecency
                         */
                        StickerFrecency.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency();
                            if (object.stickers) {
                                if (typeof object.stickers !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency.stickers: object expected");
                                message.stickers = {};
                                for (var keys = Object.keys(object.stickers), i = 0; i < keys.length; ++i) {
                                    if (typeof object.stickers[keys[i]] !== "object")
                                        throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency.stickers: object expected");
                                    message.stickers[keys[i]] = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.fromObject(object.stickers[keys[i]]);
                                }
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a StickerFrecency message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency} message StickerFrecency
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StickerFrecency.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.stickers = {};
                            var keys2;
                            if (message.stickers && (keys2 = Object.keys(message.stickers)).length) {
                                object.stickers = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.stickers[keys2[j]] = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.toObject(message.stickers[keys2[j]], options);
                            }
                            return object;
                        };

                        /**
                         * Converts this StickerFrecency to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StickerFrecency.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for StickerFrecency
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StickerFrecency.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.StickerFrecency";
                        };

                        return StickerFrecency;
                    })();

                    FrecencyUserSettings.FavoriteEmojis = (function() {

                        /**
                         * Properties of a FavoriteEmojis.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @interface IFavoriteEmojis
                         * @property {Array.<string>|null} [emojis] FavoriteEmojis emojis
                         */

                        /**
                         * Constructs a new FavoriteEmojis.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @classdesc Represents a FavoriteEmojis.
                         * @implements IFavoriteEmojis
                         * @constructor
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteEmojis=} [properties] Properties to set
                         */
                        function FavoriteEmojis(properties) {
                            this.emojis = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * FavoriteEmojis emojis.
                         * @member {Array.<string>} emojis
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @instance
                         */
                        FavoriteEmojis.prototype.emojis = $util.emptyArray;

                        /**
                         * Creates a new FavoriteEmojis instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteEmojis=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis} FavoriteEmojis instance
                         */
                        FavoriteEmojis.create = function create(properties) {
                            return new FavoriteEmojis(properties);
                        };

                        /**
                         * Encodes the specified FavoriteEmojis message. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteEmojis} message FavoriteEmojis message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FavoriteEmojis.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.emojis != null && message.emojis.length)
                                for (var i = 0; i < message.emojis.length; ++i)
                                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.emojis[i]);
                            return writer;
                        };

                        /**
                         * Encodes the specified FavoriteEmojis message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFavoriteEmojis} message FavoriteEmojis message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FavoriteEmojis.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a FavoriteEmojis message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis} FavoriteEmojis
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FavoriteEmojis.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.emojis && message.emojis.length))
                                            message.emojis = [];
                                        message.emojis.push(reader.string());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a FavoriteEmojis message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis} FavoriteEmojis
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FavoriteEmojis.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a FavoriteEmojis message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FavoriteEmojis.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.emojis != null && message.hasOwnProperty("emojis")) {
                                if (!Array.isArray(message.emojis))
                                    return "emojis: array expected";
                                for (var i = 0; i < message.emojis.length; ++i)
                                    if (!$util.isString(message.emojis[i]))
                                        return "emojis: string[] expected";
                            }
                            return null;
                        };

                        /**
                         * Creates a FavoriteEmojis message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis} FavoriteEmojis
                         */
                        FavoriteEmojis.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis();
                            if (object.emojis) {
                                if (!Array.isArray(object.emojis))
                                    throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis.emojis: array expected");
                                message.emojis = [];
                                for (var i = 0; i < object.emojis.length; ++i)
                                    message.emojis[i] = String(object.emojis[i]);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a FavoriteEmojis message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis} message FavoriteEmojis
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FavoriteEmojis.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.emojis = [];
                            if (message.emojis && message.emojis.length) {
                                object.emojis = [];
                                for (var j = 0; j < message.emojis.length; ++j)
                                    object.emojis[j] = message.emojis[j];
                            }
                            return object;
                        };

                        /**
                         * Converts this FavoriteEmojis to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FavoriteEmojis.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for FavoriteEmojis
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FavoriteEmojis.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FavoriteEmojis";
                        };

                        return FavoriteEmojis;
                    })();

                    FrecencyUserSettings.EmojiFrecency = (function() {

                        /**
                         * Properties of an EmojiFrecency.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @interface IEmojiFrecency
                         * @property {Object.<string,discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFrecencyItem>|null} [emojis] EmojiFrecency emojis
                         */

                        /**
                         * Constructs a new EmojiFrecency.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @classdesc Represents an EmojiFrecency.
                         * @implements IEmojiFrecency
                         * @constructor
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IEmojiFrecency=} [properties] Properties to set
                         */
                        function EmojiFrecency(properties) {
                            this.emojis = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * EmojiFrecency emojis.
                         * @member {Object.<string,discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFrecencyItem>} emojis
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @instance
                         */
                        EmojiFrecency.prototype.emojis = $util.emptyObject;

                        /**
                         * Creates a new EmojiFrecency instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IEmojiFrecency=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency} EmojiFrecency instance
                         */
                        EmojiFrecency.create = function create(properties) {
                            return new EmojiFrecency(properties);
                        };

                        /**
                         * Encodes the specified EmojiFrecency message. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IEmojiFrecency} message EmojiFrecency message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EmojiFrecency.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.emojis != null && Object.hasOwnProperty.call(message, "emojis"))
                                for (var keys = Object.keys(message.emojis), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.encode(message.emojis[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };

                        /**
                         * Encodes the specified EmojiFrecency message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IEmojiFrecency} message EmojiFrecency message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        EmojiFrecency.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes an EmojiFrecency message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency} EmojiFrecency
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EmojiFrecency.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.emojis === $util.emptyObject)
                                            message.emojis = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.emojis[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes an EmojiFrecency message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency} EmojiFrecency
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        EmojiFrecency.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies an EmojiFrecency message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        EmojiFrecency.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.emojis != null && message.hasOwnProperty("emojis")) {
                                if (!$util.isObject(message.emojis))
                                    return "emojis: object expected";
                                var key = Object.keys(message.emojis);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.verify(message.emojis[key[i]]);
                                    if (error)
                                        return "emojis." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates an EmojiFrecency message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency} EmojiFrecency
                         */
                        EmojiFrecency.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency();
                            if (object.emojis) {
                                if (typeof object.emojis !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency.emojis: object expected");
                                message.emojis = {};
                                for (var keys = Object.keys(object.emojis), i = 0; i < keys.length; ++i) {
                                    if (typeof object.emojis[keys[i]] !== "object")
                                        throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency.emojis: object expected");
                                    message.emojis[keys[i]] = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.fromObject(object.emojis[keys[i]]);
                                }
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from an EmojiFrecency message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency} message EmojiFrecency
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        EmojiFrecency.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.emojis = {};
                            var keys2;
                            if (message.emojis && (keys2 = Object.keys(message.emojis)).length) {
                                object.emojis = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.emojis[keys2[j]] = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.toObject(message.emojis[keys2[j]], options);
                            }
                            return object;
                        };

                        /**
                         * Converts this EmojiFrecency to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        EmojiFrecency.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for EmojiFrecency
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        EmojiFrecency.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.EmojiFrecency";
                        };

                        return EmojiFrecency;
                    })();

                    FrecencyUserSettings.ApplicationCommandFrecency = (function() {

                        /**
                         * Properties of an ApplicationCommandFrecency.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @interface IApplicationCommandFrecency
                         * @property {Object.<string,discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFrecencyItem>|null} [application_commands] ApplicationCommandFrecency application_commands
                         */

                        /**
                         * Constructs a new ApplicationCommandFrecency.
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings
                         * @classdesc Represents an ApplicationCommandFrecency.
                         * @implements IApplicationCommandFrecency
                         * @constructor
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IApplicationCommandFrecency=} [properties] Properties to set
                         */
                        function ApplicationCommandFrecency(properties) {
                            this.application_commands = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * ApplicationCommandFrecency application_commands.
                         * @member {Object.<string,discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IFrecencyItem>} application_commands
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @instance
                         */
                        ApplicationCommandFrecency.prototype.application_commands = $util.emptyObject;

                        /**
                         * Creates a new ApplicationCommandFrecency instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IApplicationCommandFrecency=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency} ApplicationCommandFrecency instance
                         */
                        ApplicationCommandFrecency.create = function create(properties) {
                            return new ApplicationCommandFrecency(properties);
                        };

                        /**
                         * Encodes the specified ApplicationCommandFrecency message. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IApplicationCommandFrecency} message ApplicationCommandFrecency message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApplicationCommandFrecency.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.application_commands != null && Object.hasOwnProperty.call(message, "application_commands"))
                                for (var keys = Object.keys(message.application_commands), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 2 =*/10).string(keys[i]);
                                    $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.encode(message.application_commands[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };

                        /**
                         * Encodes the specified ApplicationCommandFrecency message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.IApplicationCommandFrecency} message ApplicationCommandFrecency message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ApplicationCommandFrecency.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes an ApplicationCommandFrecency message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency} ApplicationCommandFrecency
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApplicationCommandFrecency.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.application_commands === $util.emptyObject)
                                            message.application_commands = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = "";
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.string();
                                                break;
                                            case 2:
                                                value = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.application_commands[key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes an ApplicationCommandFrecency message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency} ApplicationCommandFrecency
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ApplicationCommandFrecency.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies an ApplicationCommandFrecency message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ApplicationCommandFrecency.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.application_commands != null && message.hasOwnProperty("application_commands")) {
                                if (!$util.isObject(message.application_commands))
                                    return "application_commands: object expected";
                                var key = Object.keys(message.application_commands);
                                for (var i = 0; i < key.length; ++i) {
                                    var error = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.verify(message.application_commands[key[i]]);
                                    if (error)
                                        return "application_commands." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates an ApplicationCommandFrecency message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency} ApplicationCommandFrecency
                         */
                        ApplicationCommandFrecency.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency();
                            if (object.application_commands) {
                                if (typeof object.application_commands !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency.application_commands: object expected");
                                message.application_commands = {};
                                for (var keys = Object.keys(object.application_commands), i = 0; i < keys.length; ++i) {
                                    if (typeof object.application_commands[keys[i]] !== "object")
                                        throw TypeError(".discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency.application_commands: object expected");
                                    message.application_commands[keys[i]] = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.fromObject(object.application_commands[keys[i]]);
                                }
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from an ApplicationCommandFrecency message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @static
                         * @param {discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency} message ApplicationCommandFrecency
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ApplicationCommandFrecency.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.application_commands = {};
                            var keys2;
                            if (message.application_commands && (keys2 = Object.keys(message.application_commands)).length) {
                                object.application_commands = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.application_commands[keys2[j]] = $root.discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.FrecencyItem.toObject(message.application_commands[keys2[j]], options);
                            }
                            return object;
                        };

                        /**
                         * Converts this ApplicationCommandFrecency to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ApplicationCommandFrecency.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for ApplicationCommandFrecency
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ApplicationCommandFrecency.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.FrecencyUserSettings.FrecencyUserSettings.ApplicationCommandFrecency";
                        };

                        return ApplicationCommandFrecency;
                    })();

                    return FrecencyUserSettings;
                })();

                return FrecencyUserSettings;
            })();

            v1.PreloadedUserSettings = (function() {

                /**
                 * Namespace PreloadedUserSettings.
                 * @memberof discord_protos.discord_users.v1
                 * @namespace
                 */
                var PreloadedUserSettings = {};

                PreloadedUserSettings.PreloadedUserSettings = (function() {

                    /**
                     * Properties of a PreloadedUserSettings.
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings
                     * @interface IPreloadedUserSettings
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVersions|null} [versions] PreloadedUserSettings versions
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IInboxSettings|null} [inbox] PreloadedUserSettings inbox
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAllGuildSettings|null} [guilds] PreloadedUserSettings guilds
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IUserContentSettings|null} [user_content] PreloadedUserSettings user_content
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVoiceAndVideoSettings|null} [voice_and_video] PreloadedUserSettings voice_and_video
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ITextAndImagesSettings|null} [text_and_images] PreloadedUserSettings text_and_images
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.INotificationSettings|null} [notifications] PreloadedUserSettings notifications
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IPrivacySettings|null} [privacy] PreloadedUserSettings privacy
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IDebugSettings|null} [debug] PreloadedUserSettings debug
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGameLibrarySettings|null} [game_library] PreloadedUserSettings game_library
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IStatusSettings|null} [status] PreloadedUserSettings status
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ILocalizationSettings|null} [localization] PreloadedUserSettings localization
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAppearanceSettings|null} [appearance] PreloadedUserSettings appearance
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolders|null} [guild_folders] PreloadedUserSettings guild_folders
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavorites|null} [favorites] PreloadedUserSettings favorites
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioSettings|null} [audio_context_settings] PreloadedUserSettings audio_context_settings
                     * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICommunitiesSettings|null} [communities] PreloadedUserSettings communities
                     */

                    /**
                     * Constructs a new PreloadedUserSettings.
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings
                     * @classdesc Represents a PreloadedUserSettings.
                     * @implements IPreloadedUserSettings
                     * @constructor
                     * @param {discord_protos.discord_users.v1.PreloadedUserSettings.IPreloadedUserSettings=} [properties] Properties to set
                     */
                    function PreloadedUserSettings(properties) {
                        if (properties)
                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                if (properties[keys[i]] != null)
                                    this[keys[i]] = properties[keys[i]];
                    }

                    /**
                     * PreloadedUserSettings versions.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVersions|null|undefined} versions
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.versions = null;

                    /**
                     * PreloadedUserSettings inbox.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IInboxSettings|null|undefined} inbox
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.inbox = null;

                    /**
                     * PreloadedUserSettings guilds.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAllGuildSettings|null|undefined} guilds
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.guilds = null;

                    /**
                     * PreloadedUserSettings user_content.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IUserContentSettings|null|undefined} user_content
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.user_content = null;

                    /**
                     * PreloadedUserSettings voice_and_video.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVoiceAndVideoSettings|null|undefined} voice_and_video
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.voice_and_video = null;

                    /**
                     * PreloadedUserSettings text_and_images.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ITextAndImagesSettings|null|undefined} text_and_images
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.text_and_images = null;

                    /**
                     * PreloadedUserSettings notifications.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.INotificationSettings|null|undefined} notifications
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.notifications = null;

                    /**
                     * PreloadedUserSettings privacy.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IPrivacySettings|null|undefined} privacy
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.privacy = null;

                    /**
                     * PreloadedUserSettings debug.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IDebugSettings|null|undefined} debug
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.debug = null;

                    /**
                     * PreloadedUserSettings game_library.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGameLibrarySettings|null|undefined} game_library
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.game_library = null;

                    /**
                     * PreloadedUserSettings status.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IStatusSettings|null|undefined} status
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.status = null;

                    /**
                     * PreloadedUserSettings localization.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ILocalizationSettings|null|undefined} localization
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.localization = null;

                    /**
                     * PreloadedUserSettings appearance.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAppearanceSettings|null|undefined} appearance
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.appearance = null;

                    /**
                     * PreloadedUserSettings guild_folders.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolders|null|undefined} guild_folders
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.guild_folders = null;

                    /**
                     * PreloadedUserSettings favorites.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavorites|null|undefined} favorites
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.favorites = null;

                    /**
                     * PreloadedUserSettings audio_context_settings.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioSettings|null|undefined} audio_context_settings
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.audio_context_settings = null;

                    /**
                     * PreloadedUserSettings communities.
                     * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICommunitiesSettings|null|undefined} communities
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    PreloadedUserSettings.prototype.communities = null;

                    // OneOf field names bound to virtual getters and setters
                    var $oneOfFields;

                    /**
                     * PreloadedUserSettings _versions.
                     * @member {"versions"|undefined} _versions
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_versions", {
                        get: $util.oneOfGetter($oneOfFields = ["versions"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _inbox.
                     * @member {"inbox"|undefined} _inbox
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_inbox", {
                        get: $util.oneOfGetter($oneOfFields = ["inbox"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _guilds.
                     * @member {"guilds"|undefined} _guilds
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_guilds", {
                        get: $util.oneOfGetter($oneOfFields = ["guilds"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _user_content.
                     * @member {"user_content"|undefined} _user_content
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_user_content", {
                        get: $util.oneOfGetter($oneOfFields = ["user_content"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _voice_and_video.
                     * @member {"voice_and_video"|undefined} _voice_and_video
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_voice_and_video", {
                        get: $util.oneOfGetter($oneOfFields = ["voice_and_video"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _text_and_images.
                     * @member {"text_and_images"|undefined} _text_and_images
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_text_and_images", {
                        get: $util.oneOfGetter($oneOfFields = ["text_and_images"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _notifications.
                     * @member {"notifications"|undefined} _notifications
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_notifications", {
                        get: $util.oneOfGetter($oneOfFields = ["notifications"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _privacy.
                     * @member {"privacy"|undefined} _privacy
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_privacy", {
                        get: $util.oneOfGetter($oneOfFields = ["privacy"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _debug.
                     * @member {"debug"|undefined} _debug
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_debug", {
                        get: $util.oneOfGetter($oneOfFields = ["debug"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _game_library.
                     * @member {"game_library"|undefined} _game_library
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_game_library", {
                        get: $util.oneOfGetter($oneOfFields = ["game_library"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _status.
                     * @member {"status"|undefined} _status
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_status", {
                        get: $util.oneOfGetter($oneOfFields = ["status"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _localization.
                     * @member {"localization"|undefined} _localization
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_localization", {
                        get: $util.oneOfGetter($oneOfFields = ["localization"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _appearance.
                     * @member {"appearance"|undefined} _appearance
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_appearance", {
                        get: $util.oneOfGetter($oneOfFields = ["appearance"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _guild_folders.
                     * @member {"guild_folders"|undefined} _guild_folders
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_guild_folders", {
                        get: $util.oneOfGetter($oneOfFields = ["guild_folders"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _favorites.
                     * @member {"favorites"|undefined} _favorites
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_favorites", {
                        get: $util.oneOfGetter($oneOfFields = ["favorites"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _audio_context_settings.
                     * @member {"audio_context_settings"|undefined} _audio_context_settings
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_audio_context_settings", {
                        get: $util.oneOfGetter($oneOfFields = ["audio_context_settings"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * PreloadedUserSettings _communities.
                     * @member {"communities"|undefined} _communities
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     */
                    Object.defineProperty(PreloadedUserSettings.prototype, "_communities", {
                        get: $util.oneOfGetter($oneOfFields = ["communities"]),
                        set: $util.oneOfSetter($oneOfFields)
                    });

                    /**
                     * Creates a new PreloadedUserSettings instance using the specified properties.
                     * @function create
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @static
                     * @param {discord_protos.discord_users.v1.PreloadedUserSettings.IPreloadedUserSettings=} [properties] Properties to set
                     * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings} PreloadedUserSettings instance
                     */
                    PreloadedUserSettings.create = function create(properties) {
                        return new PreloadedUserSettings(properties);
                    };

                    /**
                     * Encodes the specified PreloadedUserSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.verify|verify} messages.
                     * @function encode
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @static
                     * @param {discord_protos.discord_users.v1.PreloadedUserSettings.IPreloadedUserSettings} message PreloadedUserSettings message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PreloadedUserSettings.encode = function encode(message, writer) {
                        if (!writer)
                            writer = $Writer.create();
                        if (message.versions != null && Object.hasOwnProperty.call(message, "versions"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions.encode(message.versions, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                        if (message.inbox != null && Object.hasOwnProperty.call(message, "inbox"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings.encode(message.inbox, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                        if (message.guilds != null && Object.hasOwnProperty.call(message, "guilds"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings.encode(message.guilds, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                        if (message.user_content != null && Object.hasOwnProperty.call(message, "user_content"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings.encode(message.user_content, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                        if (message.voice_and_video != null && Object.hasOwnProperty.call(message, "voice_and_video"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.encode(message.voice_and_video, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                        if (message.text_and_images != null && Object.hasOwnProperty.call(message, "text_and_images"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.encode(message.text_and_images, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                        if (message.notifications != null && Object.hasOwnProperty.call(message, "notifications"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings.encode(message.notifications, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                        if (message.privacy != null && Object.hasOwnProperty.call(message, "privacy"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.encode(message.privacy, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                        if (message.debug != null && Object.hasOwnProperty.call(message, "debug"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings.encode(message.debug, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                        if (message.game_library != null && Object.hasOwnProperty.call(message, "game_library"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings.encode(message.game_library, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                        if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings.encode(message.status, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                        if (message.localization != null && Object.hasOwnProperty.call(message, "localization"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings.encode(message.localization, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                        if (message.appearance != null && Object.hasOwnProperty.call(message, "appearance"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings.encode(message.appearance, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                        if (message.guild_folders != null && Object.hasOwnProperty.call(message, "guild_folders"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders.encode(message.guild_folders, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                        if (message.favorites != null && Object.hasOwnProperty.call(message, "favorites"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites.encode(message.favorites, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                        if (message.audio_context_settings != null && Object.hasOwnProperty.call(message, "audio_context_settings"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.encode(message.audio_context_settings, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                        if (message.communities != null && Object.hasOwnProperty.call(message, "communities"))
                            $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings.encode(message.communities, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                        return writer;
                    };

                    /**
                     * Encodes the specified PreloadedUserSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.verify|verify} messages.
                     * @function encodeDelimited
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @static
                     * @param {discord_protos.discord_users.v1.PreloadedUserSettings.IPreloadedUserSettings} message PreloadedUserSettings message or plain object to encode
                     * @param {$protobuf.Writer} [writer] Writer to encode to
                     * @returns {$protobuf.Writer} Writer
                     */
                    PreloadedUserSettings.encodeDelimited = function encodeDelimited(message, writer) {
                        return this.encode(message, writer).ldelim();
                    };

                    /**
                     * Decodes a PreloadedUserSettings message from the specified reader or buffer.
                     * @function decode
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @param {number} [length] Message length if known beforehand
                     * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings} PreloadedUserSettings
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PreloadedUserSettings.decode = function decode(reader, length) {
                        if (!(reader instanceof $Reader))
                            reader = $Reader.create(reader);
                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings();
                        while (reader.pos < end) {
                            var tag = reader.uint32();
                            switch (tag >>> 3) {
                            case 1: {
                                    message.versions = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions.decode(reader, reader.uint32());
                                    break;
                                }
                            case 2: {
                                    message.inbox = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 3: {
                                    message.guilds = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 4: {
                                    message.user_content = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 5: {
                                    message.voice_and_video = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 6: {
                                    message.text_and_images = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 7: {
                                    message.notifications = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 8: {
                                    message.privacy = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 9: {
                                    message.debug = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 10: {
                                    message.game_library = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 11: {
                                    message.status = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 12: {
                                    message.localization = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 13: {
                                    message.appearance = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 14: {
                                    message.guild_folders = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders.decode(reader, reader.uint32());
                                    break;
                                }
                            case 15: {
                                    message.favorites = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites.decode(reader, reader.uint32());
                                    break;
                                }
                            case 16: {
                                    message.audio_context_settings = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            case 17: {
                                    message.communities = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings.decode(reader, reader.uint32());
                                    break;
                                }
                            default:
                                reader.skipType(tag & 7);
                                break;
                            }
                        }
                        return message;
                    };

                    /**
                     * Decodes a PreloadedUserSettings message from the specified reader or buffer, length delimited.
                     * @function decodeDelimited
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @static
                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                     * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings} PreloadedUserSettings
                     * @throws {Error} If the payload is not a reader or valid buffer
                     * @throws {$protobuf.util.ProtocolError} If required fields are missing
                     */
                    PreloadedUserSettings.decodeDelimited = function decodeDelimited(reader) {
                        if (!(reader instanceof $Reader))
                            reader = new $Reader(reader);
                        return this.decode(reader, reader.uint32());
                    };

                    /**
                     * Verifies a PreloadedUserSettings message.
                     * @function verify
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @static
                     * @param {Object.<string,*>} message Plain object to verify
                     * @returns {string|null} `null` if valid, otherwise the reason why it is not
                     */
                    PreloadedUserSettings.verify = function verify(message) {
                        if (typeof message !== "object" || message === null)
                            return "object expected";
                        var properties = {};
                        if (message.versions != null && message.hasOwnProperty("versions")) {
                            properties._versions = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions.verify(message.versions);
                                if (error)
                                    return "versions." + error;
                            }
                        }
                        if (message.inbox != null && message.hasOwnProperty("inbox")) {
                            properties._inbox = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings.verify(message.inbox);
                                if (error)
                                    return "inbox." + error;
                            }
                        }
                        if (message.guilds != null && message.hasOwnProperty("guilds")) {
                            properties._guilds = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings.verify(message.guilds);
                                if (error)
                                    return "guilds." + error;
                            }
                        }
                        if (message.user_content != null && message.hasOwnProperty("user_content")) {
                            properties._user_content = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings.verify(message.user_content);
                                if (error)
                                    return "user_content." + error;
                            }
                        }
                        if (message.voice_and_video != null && message.hasOwnProperty("voice_and_video")) {
                            properties._voice_and_video = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.verify(message.voice_and_video);
                                if (error)
                                    return "voice_and_video." + error;
                            }
                        }
                        if (message.text_and_images != null && message.hasOwnProperty("text_and_images")) {
                            properties._text_and_images = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.verify(message.text_and_images);
                                if (error)
                                    return "text_and_images." + error;
                            }
                        }
                        if (message.notifications != null && message.hasOwnProperty("notifications")) {
                            properties._notifications = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings.verify(message.notifications);
                                if (error)
                                    return "notifications." + error;
                            }
                        }
                        if (message.privacy != null && message.hasOwnProperty("privacy")) {
                            properties._privacy = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.verify(message.privacy);
                                if (error)
                                    return "privacy." + error;
                            }
                        }
                        if (message.debug != null && message.hasOwnProperty("debug")) {
                            properties._debug = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings.verify(message.debug);
                                if (error)
                                    return "debug." + error;
                            }
                        }
                        if (message.game_library != null && message.hasOwnProperty("game_library")) {
                            properties._game_library = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings.verify(message.game_library);
                                if (error)
                                    return "game_library." + error;
                            }
                        }
                        if (message.status != null && message.hasOwnProperty("status")) {
                            properties._status = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings.verify(message.status);
                                if (error)
                                    return "status." + error;
                            }
                        }
                        if (message.localization != null && message.hasOwnProperty("localization")) {
                            properties._localization = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings.verify(message.localization);
                                if (error)
                                    return "localization." + error;
                            }
                        }
                        if (message.appearance != null && message.hasOwnProperty("appearance")) {
                            properties._appearance = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings.verify(message.appearance);
                                if (error)
                                    return "appearance." + error;
                            }
                        }
                        if (message.guild_folders != null && message.hasOwnProperty("guild_folders")) {
                            properties._guild_folders = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders.verify(message.guild_folders);
                                if (error)
                                    return "guild_folders." + error;
                            }
                        }
                        if (message.favorites != null && message.hasOwnProperty("favorites")) {
                            properties._favorites = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites.verify(message.favorites);
                                if (error)
                                    return "favorites." + error;
                            }
                        }
                        if (message.audio_context_settings != null && message.hasOwnProperty("audio_context_settings")) {
                            properties._audio_context_settings = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.verify(message.audio_context_settings);
                                if (error)
                                    return "audio_context_settings." + error;
                            }
                        }
                        if (message.communities != null && message.hasOwnProperty("communities")) {
                            properties._communities = 1;
                            {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings.verify(message.communities);
                                if (error)
                                    return "communities." + error;
                            }
                        }
                        return null;
                    };

                    /**
                     * Creates a PreloadedUserSettings message from a plain object. Also converts values to their respective internal types.
                     * @function fromObject
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @static
                     * @param {Object.<string,*>} object Plain object
                     * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings} PreloadedUserSettings
                     */
                    PreloadedUserSettings.fromObject = function fromObject(object) {
                        if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings)
                            return object;
                        var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings();
                        if (object.versions != null) {
                            if (typeof object.versions !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.versions: object expected");
                            message.versions = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions.fromObject(object.versions);
                        }
                        if (object.inbox != null) {
                            if (typeof object.inbox !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.inbox: object expected");
                            message.inbox = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings.fromObject(object.inbox);
                        }
                        if (object.guilds != null) {
                            if (typeof object.guilds !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.guilds: object expected");
                            message.guilds = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings.fromObject(object.guilds);
                        }
                        if (object.user_content != null) {
                            if (typeof object.user_content !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.user_content: object expected");
                            message.user_content = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings.fromObject(object.user_content);
                        }
                        if (object.voice_and_video != null) {
                            if (typeof object.voice_and_video !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.voice_and_video: object expected");
                            message.voice_and_video = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.fromObject(object.voice_and_video);
                        }
                        if (object.text_and_images != null) {
                            if (typeof object.text_and_images !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.text_and_images: object expected");
                            message.text_and_images = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.fromObject(object.text_and_images);
                        }
                        if (object.notifications != null) {
                            if (typeof object.notifications !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.notifications: object expected");
                            message.notifications = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings.fromObject(object.notifications);
                        }
                        if (object.privacy != null) {
                            if (typeof object.privacy !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.privacy: object expected");
                            message.privacy = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.fromObject(object.privacy);
                        }
                        if (object.debug != null) {
                            if (typeof object.debug !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.debug: object expected");
                            message.debug = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings.fromObject(object.debug);
                        }
                        if (object.game_library != null) {
                            if (typeof object.game_library !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.game_library: object expected");
                            message.game_library = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings.fromObject(object.game_library);
                        }
                        if (object.status != null) {
                            if (typeof object.status !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.status: object expected");
                            message.status = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings.fromObject(object.status);
                        }
                        if (object.localization != null) {
                            if (typeof object.localization !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.localization: object expected");
                            message.localization = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings.fromObject(object.localization);
                        }
                        if (object.appearance != null) {
                            if (typeof object.appearance !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.appearance: object expected");
                            message.appearance = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings.fromObject(object.appearance);
                        }
                        if (object.guild_folders != null) {
                            if (typeof object.guild_folders !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.guild_folders: object expected");
                            message.guild_folders = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders.fromObject(object.guild_folders);
                        }
                        if (object.favorites != null) {
                            if (typeof object.favorites !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.favorites: object expected");
                            message.favorites = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites.fromObject(object.favorites);
                        }
                        if (object.audio_context_settings != null) {
                            if (typeof object.audio_context_settings !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.audio_context_settings: object expected");
                            message.audio_context_settings = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.fromObject(object.audio_context_settings);
                        }
                        if (object.communities != null) {
                            if (typeof object.communities !== "object")
                                throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.communities: object expected");
                            message.communities = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings.fromObject(object.communities);
                        }
                        return message;
                    };

                    /**
                     * Creates a plain object from a PreloadedUserSettings message. Also converts values to other types if specified.
                     * @function toObject
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @static
                     * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings} message PreloadedUserSettings
                     * @param {$protobuf.IConversionOptions} [options] Conversion options
                     * @returns {Object.<string,*>} Plain object
                     */
                    PreloadedUserSettings.toObject = function toObject(message, options) {
                        if (!options)
                            options = {};
                        var object = {};
                        if (message.versions != null && message.hasOwnProperty("versions")) {
                            object.versions = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions.toObject(message.versions, options);
                            if (options.oneofs)
                                object._versions = "versions";
                        }
                        if (message.inbox != null && message.hasOwnProperty("inbox")) {
                            object.inbox = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings.toObject(message.inbox, options);
                            if (options.oneofs)
                                object._inbox = "inbox";
                        }
                        if (message.guilds != null && message.hasOwnProperty("guilds")) {
                            object.guilds = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings.toObject(message.guilds, options);
                            if (options.oneofs)
                                object._guilds = "guilds";
                        }
                        if (message.user_content != null && message.hasOwnProperty("user_content")) {
                            object.user_content = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings.toObject(message.user_content, options);
                            if (options.oneofs)
                                object._user_content = "user_content";
                        }
                        if (message.voice_and_video != null && message.hasOwnProperty("voice_and_video")) {
                            object.voice_and_video = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.toObject(message.voice_and_video, options);
                            if (options.oneofs)
                                object._voice_and_video = "voice_and_video";
                        }
                        if (message.text_and_images != null && message.hasOwnProperty("text_and_images")) {
                            object.text_and_images = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.toObject(message.text_and_images, options);
                            if (options.oneofs)
                                object._text_and_images = "text_and_images";
                        }
                        if (message.notifications != null && message.hasOwnProperty("notifications")) {
                            object.notifications = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings.toObject(message.notifications, options);
                            if (options.oneofs)
                                object._notifications = "notifications";
                        }
                        if (message.privacy != null && message.hasOwnProperty("privacy")) {
                            object.privacy = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.toObject(message.privacy, options);
                            if (options.oneofs)
                                object._privacy = "privacy";
                        }
                        if (message.debug != null && message.hasOwnProperty("debug")) {
                            object.debug = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings.toObject(message.debug, options);
                            if (options.oneofs)
                                object._debug = "debug";
                        }
                        if (message.game_library != null && message.hasOwnProperty("game_library")) {
                            object.game_library = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings.toObject(message.game_library, options);
                            if (options.oneofs)
                                object._game_library = "game_library";
                        }
                        if (message.status != null && message.hasOwnProperty("status")) {
                            object.status = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings.toObject(message.status, options);
                            if (options.oneofs)
                                object._status = "status";
                        }
                        if (message.localization != null && message.hasOwnProperty("localization")) {
                            object.localization = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings.toObject(message.localization, options);
                            if (options.oneofs)
                                object._localization = "localization";
                        }
                        if (message.appearance != null && message.hasOwnProperty("appearance")) {
                            object.appearance = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings.toObject(message.appearance, options);
                            if (options.oneofs)
                                object._appearance = "appearance";
                        }
                        if (message.guild_folders != null && message.hasOwnProperty("guild_folders")) {
                            object.guild_folders = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders.toObject(message.guild_folders, options);
                            if (options.oneofs)
                                object._guild_folders = "guild_folders";
                        }
                        if (message.favorites != null && message.hasOwnProperty("favorites")) {
                            object.favorites = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites.toObject(message.favorites, options);
                            if (options.oneofs)
                                object._favorites = "favorites";
                        }
                        if (message.audio_context_settings != null && message.hasOwnProperty("audio_context_settings")) {
                            object.audio_context_settings = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.toObject(message.audio_context_settings, options);
                            if (options.oneofs)
                                object._audio_context_settings = "audio_context_settings";
                        }
                        if (message.communities != null && message.hasOwnProperty("communities")) {
                            object.communities = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings.toObject(message.communities, options);
                            if (options.oneofs)
                                object._communities = "communities";
                        }
                        return object;
                    };

                    /**
                     * Converts this PreloadedUserSettings to JSON.
                     * @function toJSON
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @instance
                     * @returns {Object.<string,*>} JSON object
                     */
                    PreloadedUserSettings.prototype.toJSON = function toJSON() {
                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                    };

                    /**
                     * Gets the default type url for PreloadedUserSettings
                     * @function getTypeUrl
                     * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                     * @static
                     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                     * @returns {string} The default type url
                     */
                    PreloadedUserSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                        if (typeUrlPrefix === undefined) {
                            typeUrlPrefix = "type.googleapis.com";
                        }
                        return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings";
                    };

                    PreloadedUserSettings.Versions = (function() {

                        /**
                         * Properties of a Versions.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IVersions
                         * @property {number|null} [client_version] Versions client_version
                         * @property {number|null} [server_version] Versions server_version
                         * @property {number|null} [data_version] Versions data_version
                         */

                        /**
                         * Constructs a new Versions.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a Versions.
                         * @implements IVersions
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVersions=} [properties] Properties to set
                         */
                        function Versions(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * Versions client_version.
                         * @member {number} client_version
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @instance
                         */
                        Versions.prototype.client_version = 0;

                        /**
                         * Versions server_version.
                         * @member {number} server_version
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @instance
                         */
                        Versions.prototype.server_version = 0;

                        /**
                         * Versions data_version.
                         * @member {number} data_version
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @instance
                         */
                        Versions.prototype.data_version = 0;

                        /**
                         * Creates a new Versions instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVersions=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions} Versions instance
                         */
                        Versions.create = function create(properties) {
                            return new Versions(properties);
                        };

                        /**
                         * Encodes the specified Versions message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVersions} message Versions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Versions.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.client_version != null && Object.hasOwnProperty.call(message, "client_version"))
                                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.client_version);
                            if (message.server_version != null && Object.hasOwnProperty.call(message, "server_version"))
                                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.server_version);
                            if (message.data_version != null && Object.hasOwnProperty.call(message, "data_version"))
                                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.data_version);
                            return writer;
                        };

                        /**
                         * Encodes the specified Versions message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVersions} message Versions message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Versions.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a Versions message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions} Versions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Versions.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.client_version = reader.uint32();
                                        break;
                                    }
                                case 2: {
                                        message.server_version = reader.uint32();
                                        break;
                                    }
                                case 3: {
                                        message.data_version = reader.uint32();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a Versions message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions} Versions
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Versions.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a Versions message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Versions.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.client_version != null && message.hasOwnProperty("client_version"))
                                if (!$util.isInteger(message.client_version))
                                    return "client_version: integer expected";
                            if (message.server_version != null && message.hasOwnProperty("server_version"))
                                if (!$util.isInteger(message.server_version))
                                    return "server_version: integer expected";
                            if (message.data_version != null && message.hasOwnProperty("data_version"))
                                if (!$util.isInteger(message.data_version))
                                    return "data_version: integer expected";
                            return null;
                        };

                        /**
                         * Creates a Versions message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions} Versions
                         */
                        Versions.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions();
                            if (object.client_version != null)
                                message.client_version = object.client_version >>> 0;
                            if (object.server_version != null)
                                message.server_version = object.server_version >>> 0;
                            if (object.data_version != null)
                                message.data_version = object.data_version >>> 0;
                            return message;
                        };

                        /**
                         * Creates a plain object from a Versions message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions} message Versions
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Versions.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.client_version = 0;
                                object.server_version = 0;
                                object.data_version = 0;
                            }
                            if (message.client_version != null && message.hasOwnProperty("client_version"))
                                object.client_version = message.client_version;
                            if (message.server_version != null && message.hasOwnProperty("server_version"))
                                object.server_version = message.server_version;
                            if (message.data_version != null && message.hasOwnProperty("data_version"))
                                object.data_version = message.data_version;
                            return object;
                        };

                        /**
                         * Converts this Versions to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Versions.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for Versions
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Versions.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Versions";
                        };

                        return Versions;
                    })();

                    /**
                     * InboxTab enum.
                     * @name discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxTab
                     * @enum {number}
                     * @property {number} UNSPECIFIED=0 UNSPECIFIED value
                     * @property {number} MENTIONS=1 MENTIONS value
                     * @property {number} UNREADS=2 UNREADS value
                     * @property {number} TODOS=3 TODOS value
                     * @property {number} FOR_YOU=4 FOR_YOU value
                     */
                    PreloadedUserSettings.InboxTab = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNSPECIFIED"] = 0;
                        values[valuesById[1] = "MENTIONS"] = 1;
                        values[valuesById[2] = "UNREADS"] = 2;
                        values[valuesById[3] = "TODOS"] = 3;
                        values[valuesById[4] = "FOR_YOU"] = 4;
                        return values;
                    })();

                    PreloadedUserSettings.InboxSettings = (function() {

                        /**
                         * Properties of an InboxSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IInboxSettings
                         * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxTab|null} [current_tab] InboxSettings current_tab
                         * @property {boolean|null} [viewed_tutorial] InboxSettings viewed_tutorial
                         */

                        /**
                         * Constructs a new InboxSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents an InboxSettings.
                         * @implements IInboxSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IInboxSettings=} [properties] Properties to set
                         */
                        function InboxSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * InboxSettings current_tab.
                         * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxTab} current_tab
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @instance
                         */
                        InboxSettings.prototype.current_tab = 0;

                        /**
                         * InboxSettings viewed_tutorial.
                         * @member {boolean} viewed_tutorial
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @instance
                         */
                        InboxSettings.prototype.viewed_tutorial = false;

                        /**
                         * Creates a new InboxSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IInboxSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings} InboxSettings instance
                         */
                        InboxSettings.create = function create(properties) {
                            return new InboxSettings(properties);
                        };

                        /**
                         * Encodes the specified InboxSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IInboxSettings} message InboxSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InboxSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.current_tab != null && Object.hasOwnProperty.call(message, "current_tab"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.current_tab);
                            if (message.viewed_tutorial != null && Object.hasOwnProperty.call(message, "viewed_tutorial"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.viewed_tutorial);
                            return writer;
                        };

                        /**
                         * Encodes the specified InboxSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IInboxSettings} message InboxSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        InboxSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes an InboxSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings} InboxSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InboxSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.current_tab = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.viewed_tutorial = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes an InboxSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings} InboxSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        InboxSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies an InboxSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        InboxSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.current_tab != null && message.hasOwnProperty("current_tab"))
                                switch (message.current_tab) {
                                default:
                                    return "current_tab: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                case 3:
                                case 4:
                                    break;
                                }
                            if (message.viewed_tutorial != null && message.hasOwnProperty("viewed_tutorial"))
                                if (typeof message.viewed_tutorial !== "boolean")
                                    return "viewed_tutorial: boolean expected";
                            return null;
                        };

                        /**
                         * Creates an InboxSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings} InboxSettings
                         */
                        InboxSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings();
                            switch (object.current_tab) {
                            default:
                                if (typeof object.current_tab === "number") {
                                    message.current_tab = object.current_tab;
                                    break;
                                }
                                break;
                            case "UNSPECIFIED":
                            case 0:
                                message.current_tab = 0;
                                break;
                            case "MENTIONS":
                            case 1:
                                message.current_tab = 1;
                                break;
                            case "UNREADS":
                            case 2:
                                message.current_tab = 2;
                                break;
                            case "TODOS":
                            case 3:
                                message.current_tab = 3;
                                break;
                            case "FOR_YOU":
                            case 4:
                                message.current_tab = 4;
                                break;
                            }
                            if (object.viewed_tutorial != null)
                                message.viewed_tutorial = Boolean(object.viewed_tutorial);
                            return message;
                        };

                        /**
                         * Creates a plain object from an InboxSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings} message InboxSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        InboxSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.current_tab = options.enums === String ? "UNSPECIFIED" : 0;
                                object.viewed_tutorial = false;
                            }
                            if (message.current_tab != null && message.hasOwnProperty("current_tab"))
                                object.current_tab = options.enums === String ? $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxTab[message.current_tab] === undefined ? message.current_tab : $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxTab[message.current_tab] : message.current_tab;
                            if (message.viewed_tutorial != null && message.hasOwnProperty("viewed_tutorial"))
                                object.viewed_tutorial = message.viewed_tutorial;
                            return object;
                        };

                        /**
                         * Converts this InboxSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        InboxSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for InboxSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        InboxSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.InboxSettings";
                        };

                        return InboxSettings;
                    })();

                    PreloadedUserSettings.ChannelSettings = (function() {

                        /**
                         * Properties of a ChannelSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IChannelSettings
                         * @property {boolean|null} [collapsed_in_inbox] ChannelSettings collapsed_in_inbox
                         */

                        /**
                         * Constructs a new ChannelSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a ChannelSettings.
                         * @implements IChannelSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IChannelSettings=} [properties] Properties to set
                         */
                        function ChannelSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * ChannelSettings collapsed_in_inbox.
                         * @member {boolean} collapsed_in_inbox
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @instance
                         */
                        ChannelSettings.prototype.collapsed_in_inbox = false;

                        /**
                         * Creates a new ChannelSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IChannelSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings} ChannelSettings instance
                         */
                        ChannelSettings.create = function create(properties) {
                            return new ChannelSettings(properties);
                        };

                        /**
                         * Encodes the specified ChannelSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IChannelSettings} message ChannelSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChannelSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.collapsed_in_inbox != null && Object.hasOwnProperty.call(message, "collapsed_in_inbox"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.collapsed_in_inbox);
                            return writer;
                        };

                        /**
                         * Encodes the specified ChannelSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IChannelSettings} message ChannelSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ChannelSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a ChannelSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings} ChannelSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChannelSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.collapsed_in_inbox = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a ChannelSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings} ChannelSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ChannelSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a ChannelSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ChannelSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.collapsed_in_inbox != null && message.hasOwnProperty("collapsed_in_inbox"))
                                if (typeof message.collapsed_in_inbox !== "boolean")
                                    return "collapsed_in_inbox: boolean expected";
                            return null;
                        };

                        /**
                         * Creates a ChannelSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings} ChannelSettings
                         */
                        ChannelSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings();
                            if (object.collapsed_in_inbox != null)
                                message.collapsed_in_inbox = Boolean(object.collapsed_in_inbox);
                            return message;
                        };

                        /**
                         * Creates a plain object from a ChannelSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings} message ChannelSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ChannelSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.collapsed_in_inbox = false;
                            if (message.collapsed_in_inbox != null && message.hasOwnProperty("collapsed_in_inbox"))
                                object.collapsed_in_inbox = message.collapsed_in_inbox;
                            return object;
                        };

                        /**
                         * Converts this ChannelSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ChannelSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for ChannelSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ChannelSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings";
                        };

                        return ChannelSettings;
                    })();

                    PreloadedUserSettings.GuildSettings = (function() {

                        /**
                         * Properties of a GuildSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IGuildSettings
                         * @property {Object.<string,discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IChannelSettings>|null} [channels] GuildSettings channels
                         * @property {number|null} [hub_progress] GuildSettings hub_progress
                         * @property {number|null} [guild_onboarding_progress] GuildSettings guild_onboarding_progress
                         * @property {google.protobuf.ITimestamp|null} [guild_recents_dismissed_at] GuildSettings guild_recents_dismissed_at
                         * @property {Uint8Array|null} [dismissed_guild_content] GuildSettings dismissed_guild_content
                         */

                        /**
                         * Constructs a new GuildSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a GuildSettings.
                         * @implements IGuildSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildSettings=} [properties] Properties to set
                         */
                        function GuildSettings(properties) {
                            this.channels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * GuildSettings channels.
                         * @member {Object.<string,discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IChannelSettings>} channels
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @instance
                         */
                        GuildSettings.prototype.channels = $util.emptyObject;

                        /**
                         * GuildSettings hub_progress.
                         * @member {number} hub_progress
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @instance
                         */
                        GuildSettings.prototype.hub_progress = 0;

                        /**
                         * GuildSettings guild_onboarding_progress.
                         * @member {number} guild_onboarding_progress
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @instance
                         */
                        GuildSettings.prototype.guild_onboarding_progress = 0;

                        /**
                         * GuildSettings guild_recents_dismissed_at.
                         * @member {google.protobuf.ITimestamp|null|undefined} guild_recents_dismissed_at
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @instance
                         */
                        GuildSettings.prototype.guild_recents_dismissed_at = null;

                        /**
                         * GuildSettings dismissed_guild_content.
                         * @member {Uint8Array} dismissed_guild_content
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @instance
                         */
                        GuildSettings.prototype.dismissed_guild_content = $util.newBuffer([]);

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * GuildSettings _guild_recents_dismissed_at.
                         * @member {"guild_recents_dismissed_at"|undefined} _guild_recents_dismissed_at
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @instance
                         */
                        Object.defineProperty(GuildSettings.prototype, "_guild_recents_dismissed_at", {
                            get: $util.oneOfGetter($oneOfFields = ["guild_recents_dismissed_at"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new GuildSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings} GuildSettings instance
                         */
                        GuildSettings.create = function create(properties) {
                            return new GuildSettings(properties);
                        };

                        /**
                         * Encodes the specified GuildSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildSettings} message GuildSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GuildSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.channels != null && Object.hasOwnProperty.call(message, "channels"))
                                for (var keys = Object.keys(message.channels), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 1 =*/9).fixed64(keys[i]);
                                    $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings.encode(message.channels[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.hub_progress != null && Object.hasOwnProperty.call(message, "hub_progress"))
                                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.hub_progress);
                            if (message.guild_onboarding_progress != null && Object.hasOwnProperty.call(message, "guild_onboarding_progress"))
                                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.guild_onboarding_progress);
                            if (message.guild_recents_dismissed_at != null && Object.hasOwnProperty.call(message, "guild_recents_dismissed_at"))
                                $root.google.protobuf.Timestamp.encode(message.guild_recents_dismissed_at, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.dismissed_guild_content != null && Object.hasOwnProperty.call(message, "dismissed_guild_content"))
                                writer.uint32(/* id 5, wireType 2 =*/42).bytes(message.dismissed_guild_content);
                            return writer;
                        };

                        /**
                         * Encodes the specified GuildSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildSettings} message GuildSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GuildSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a GuildSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings} GuildSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GuildSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.channels === $util.emptyObject)
                                            message.channels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = 0;
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.fixed64();
                                                break;
                                            case 2:
                                                value = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.channels[typeof key === "object" ? $util.longToHash(key) : key] = value;
                                        break;
                                    }
                                case 2: {
                                        message.hub_progress = reader.uint32();
                                        break;
                                    }
                                case 3: {
                                        message.guild_onboarding_progress = reader.uint32();
                                        break;
                                    }
                                case 4: {
                                        message.guild_recents_dismissed_at = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.dismissed_guild_content = reader.bytes();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a GuildSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings} GuildSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GuildSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a GuildSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GuildSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.channels != null && message.hasOwnProperty("channels")) {
                                if (!$util.isObject(message.channels))
                                    return "channels: object expected";
                                var key = Object.keys(message.channels);
                                for (var i = 0; i < key.length; ++i) {
                                    if (!$util.key64Re.test(key[i]))
                                        return "channels: integer|Long key{k:fixed64} expected";
                                    {
                                        var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings.verify(message.channels[key[i]]);
                                        if (error)
                                            return "channels." + error;
                                    }
                                }
                            }
                            if (message.hub_progress != null && message.hasOwnProperty("hub_progress"))
                                if (!$util.isInteger(message.hub_progress))
                                    return "hub_progress: integer expected";
                            if (message.guild_onboarding_progress != null && message.hasOwnProperty("guild_onboarding_progress"))
                                if (!$util.isInteger(message.guild_onboarding_progress))
                                    return "guild_onboarding_progress: integer expected";
                            if (message.guild_recents_dismissed_at != null && message.hasOwnProperty("guild_recents_dismissed_at")) {
                                properties._guild_recents_dismissed_at = 1;
                                {
                                    var error = $root.google.protobuf.Timestamp.verify(message.guild_recents_dismissed_at);
                                    if (error)
                                        return "guild_recents_dismissed_at." + error;
                                }
                            }
                            if (message.dismissed_guild_content != null && message.hasOwnProperty("dismissed_guild_content"))
                                if (!(message.dismissed_guild_content && typeof message.dismissed_guild_content.length === "number" || $util.isString(message.dismissed_guild_content)))
                                    return "dismissed_guild_content: buffer expected";
                            return null;
                        };

                        /**
                         * Creates a GuildSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings} GuildSettings
                         */
                        GuildSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings();
                            if (object.channels) {
                                if (typeof object.channels !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings.channels: object expected");
                                message.channels = {};
                                for (var keys = Object.keys(object.channels), i = 0; i < keys.length; ++i) {
                                    if (typeof object.channels[keys[i]] !== "object")
                                        throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings.channels: object expected");
                                    message.channels[keys[i]] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings.fromObject(object.channels[keys[i]]);
                                }
                            }
                            if (object.hub_progress != null)
                                message.hub_progress = object.hub_progress >>> 0;
                            if (object.guild_onboarding_progress != null)
                                message.guild_onboarding_progress = object.guild_onboarding_progress >>> 0;
                            if (object.guild_recents_dismissed_at != null) {
                                if (typeof object.guild_recents_dismissed_at !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings.guild_recents_dismissed_at: object expected");
                                message.guild_recents_dismissed_at = $root.google.protobuf.Timestamp.fromObject(object.guild_recents_dismissed_at);
                            }
                            if (object.dismissed_guild_content != null)
                                if (typeof object.dismissed_guild_content === "string")
                                    $util.base64.decode(object.dismissed_guild_content, message.dismissed_guild_content = $util.newBuffer($util.base64.length(object.dismissed_guild_content)), 0);
                                else if (object.dismissed_guild_content.length >= 0)
                                    message.dismissed_guild_content = object.dismissed_guild_content;
                            return message;
                        };

                        /**
                         * Creates a plain object from a GuildSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings} message GuildSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GuildSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.channels = {};
                            if (options.defaults) {
                                object.hub_progress = 0;
                                object.guild_onboarding_progress = 0;
                                if (options.bytes === String)
                                    object.dismissed_guild_content = "";
                                else {
                                    object.dismissed_guild_content = [];
                                    if (options.bytes !== Array)
                                        object.dismissed_guild_content = $util.newBuffer(object.dismissed_guild_content);
                                }
                            }
                            var keys2;
                            if (message.channels && (keys2 = Object.keys(message.channels)).length) {
                                object.channels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.channels[keys2[j]] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ChannelSettings.toObject(message.channels[keys2[j]], options);
                            }
                            if (message.hub_progress != null && message.hasOwnProperty("hub_progress"))
                                object.hub_progress = message.hub_progress;
                            if (message.guild_onboarding_progress != null && message.hasOwnProperty("guild_onboarding_progress"))
                                object.guild_onboarding_progress = message.guild_onboarding_progress;
                            if (message.guild_recents_dismissed_at != null && message.hasOwnProperty("guild_recents_dismissed_at")) {
                                object.guild_recents_dismissed_at = $root.google.protobuf.Timestamp.toObject(message.guild_recents_dismissed_at, options);
                                if (options.oneofs)
                                    object._guild_recents_dismissed_at = "guild_recents_dismissed_at";
                            }
                            if (message.dismissed_guild_content != null && message.hasOwnProperty("dismissed_guild_content"))
                                object.dismissed_guild_content = options.bytes === String ? $util.base64.encode(message.dismissed_guild_content, 0, message.dismissed_guild_content.length) : options.bytes === Array ? Array.prototype.slice.call(message.dismissed_guild_content) : message.dismissed_guild_content;
                            return object;
                        };

                        /**
                         * Converts this GuildSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GuildSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for GuildSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GuildSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings";
                        };

                        return GuildSettings;
                    })();

                    PreloadedUserSettings.AllGuildSettings = (function() {

                        /**
                         * Properties of an AllGuildSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IAllGuildSettings
                         * @property {Object.<string,discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildSettings>|null} [guilds] AllGuildSettings guilds
                         */

                        /**
                         * Constructs a new AllGuildSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents an AllGuildSettings.
                         * @implements IAllGuildSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAllGuildSettings=} [properties] Properties to set
                         */
                        function AllGuildSettings(properties) {
                            this.guilds = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * AllGuildSettings guilds.
                         * @member {Object.<string,discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildSettings>} guilds
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @instance
                         */
                        AllGuildSettings.prototype.guilds = $util.emptyObject;

                        /**
                         * Creates a new AllGuildSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAllGuildSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings} AllGuildSettings instance
                         */
                        AllGuildSettings.create = function create(properties) {
                            return new AllGuildSettings(properties);
                        };

                        /**
                         * Encodes the specified AllGuildSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAllGuildSettings} message AllGuildSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AllGuildSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.guilds != null && Object.hasOwnProperty.call(message, "guilds"))
                                for (var keys = Object.keys(message.guilds), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 1 =*/9).fixed64(keys[i]);
                                    $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings.encode(message.guilds[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };

                        /**
                         * Encodes the specified AllGuildSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAllGuildSettings} message AllGuildSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AllGuildSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes an AllGuildSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings} AllGuildSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AllGuildSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.guilds === $util.emptyObject)
                                            message.guilds = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = 0;
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.fixed64();
                                                break;
                                            case 2:
                                                value = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.guilds[typeof key === "object" ? $util.longToHash(key) : key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes an AllGuildSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings} AllGuildSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AllGuildSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies an AllGuildSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AllGuildSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.guilds != null && message.hasOwnProperty("guilds")) {
                                if (!$util.isObject(message.guilds))
                                    return "guilds: object expected";
                                var key = Object.keys(message.guilds);
                                for (var i = 0; i < key.length; ++i) {
                                    if (!$util.key64Re.test(key[i]))
                                        return "guilds: integer|Long key{k:fixed64} expected";
                                    {
                                        var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings.verify(message.guilds[key[i]]);
                                        if (error)
                                            return "guilds." + error;
                                    }
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates an AllGuildSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings} AllGuildSettings
                         */
                        AllGuildSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings();
                            if (object.guilds) {
                                if (typeof object.guilds !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings.guilds: object expected");
                                message.guilds = {};
                                for (var keys = Object.keys(object.guilds), i = 0; i < keys.length; ++i) {
                                    if (typeof object.guilds[keys[i]] !== "object")
                                        throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings.guilds: object expected");
                                    message.guilds[keys[i]] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings.fromObject(object.guilds[keys[i]]);
                                }
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from an AllGuildSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings} message AllGuildSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AllGuildSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.guilds = {};
                            var keys2;
                            if (message.guilds && (keys2 = Object.keys(message.guilds)).length) {
                                object.guilds = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.guilds[keys2[j]] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildSettings.toObject(message.guilds[keys2[j]], options);
                            }
                            return object;
                        };

                        /**
                         * Converts this AllGuildSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AllGuildSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for AllGuildSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AllGuildSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AllGuildSettings";
                        };

                        return AllGuildSettings;
                    })();

                    PreloadedUserSettings.UserContentSettings = (function() {

                        /**
                         * Properties of a UserContentSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IUserContentSettings
                         * @property {Uint8Array|null} [dismissed_contents] UserContentSettings dismissed_contents
                         * @property {google.protobuf.IStringValue|null} [last_dismissed_outbound_promotion_start_date] UserContentSettings last_dismissed_outbound_promotion_start_date
                         * @property {google.protobuf.ITimestamp|null} [premium_tier_0_modal_dismissed_at] UserContentSettings premium_tier_0_modal_dismissed_at
                         */

                        /**
                         * Constructs a new UserContentSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a UserContentSettings.
                         * @implements IUserContentSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IUserContentSettings=} [properties] Properties to set
                         */
                        function UserContentSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * UserContentSettings dismissed_contents.
                         * @member {Uint8Array} dismissed_contents
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @instance
                         */
                        UserContentSettings.prototype.dismissed_contents = $util.newBuffer([]);

                        /**
                         * UserContentSettings last_dismissed_outbound_promotion_start_date.
                         * @member {google.protobuf.IStringValue|null|undefined} last_dismissed_outbound_promotion_start_date
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @instance
                         */
                        UserContentSettings.prototype.last_dismissed_outbound_promotion_start_date = null;

                        /**
                         * UserContentSettings premium_tier_0_modal_dismissed_at.
                         * @member {google.protobuf.ITimestamp|null|undefined} premium_tier_0_modal_dismissed_at
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @instance
                         */
                        UserContentSettings.prototype.premium_tier_0_modal_dismissed_at = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * UserContentSettings _last_dismissed_outbound_promotion_start_date.
                         * @member {"last_dismissed_outbound_promotion_start_date"|undefined} _last_dismissed_outbound_promotion_start_date
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @instance
                         */
                        Object.defineProperty(UserContentSettings.prototype, "_last_dismissed_outbound_promotion_start_date", {
                            get: $util.oneOfGetter($oneOfFields = ["last_dismissed_outbound_promotion_start_date"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * UserContentSettings _premium_tier_0_modal_dismissed_at.
                         * @member {"premium_tier_0_modal_dismissed_at"|undefined} _premium_tier_0_modal_dismissed_at
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @instance
                         */
                        Object.defineProperty(UserContentSettings.prototype, "_premium_tier_0_modal_dismissed_at", {
                            get: $util.oneOfGetter($oneOfFields = ["premium_tier_0_modal_dismissed_at"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new UserContentSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IUserContentSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings} UserContentSettings instance
                         */
                        UserContentSettings.create = function create(properties) {
                            return new UserContentSettings(properties);
                        };

                        /**
                         * Encodes the specified UserContentSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IUserContentSettings} message UserContentSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserContentSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.dismissed_contents != null && Object.hasOwnProperty.call(message, "dismissed_contents"))
                                writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.dismissed_contents);
                            if (message.last_dismissed_outbound_promotion_start_date != null && Object.hasOwnProperty.call(message, "last_dismissed_outbound_promotion_start_date"))
                                $root.google.protobuf.StringValue.encode(message.last_dismissed_outbound_promotion_start_date, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.premium_tier_0_modal_dismissed_at != null && Object.hasOwnProperty.call(message, "premium_tier_0_modal_dismissed_at"))
                                $root.google.protobuf.Timestamp.encode(message.premium_tier_0_modal_dismissed_at, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified UserContentSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IUserContentSettings} message UserContentSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        UserContentSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a UserContentSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings} UserContentSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserContentSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.dismissed_contents = reader.bytes();
                                        break;
                                    }
                                case 2: {
                                        message.last_dismissed_outbound_promotion_start_date = $root.google.protobuf.StringValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.premium_tier_0_modal_dismissed_at = $root.google.protobuf.Timestamp.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a UserContentSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings} UserContentSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        UserContentSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a UserContentSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        UserContentSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.dismissed_contents != null && message.hasOwnProperty("dismissed_contents"))
                                if (!(message.dismissed_contents && typeof message.dismissed_contents.length === "number" || $util.isString(message.dismissed_contents)))
                                    return "dismissed_contents: buffer expected";
                            if (message.last_dismissed_outbound_promotion_start_date != null && message.hasOwnProperty("last_dismissed_outbound_promotion_start_date")) {
                                properties._last_dismissed_outbound_promotion_start_date = 1;
                                {
                                    var error = $root.google.protobuf.StringValue.verify(message.last_dismissed_outbound_promotion_start_date);
                                    if (error)
                                        return "last_dismissed_outbound_promotion_start_date." + error;
                                }
                            }
                            if (message.premium_tier_0_modal_dismissed_at != null && message.hasOwnProperty("premium_tier_0_modal_dismissed_at")) {
                                properties._premium_tier_0_modal_dismissed_at = 1;
                                {
                                    var error = $root.google.protobuf.Timestamp.verify(message.premium_tier_0_modal_dismissed_at);
                                    if (error)
                                        return "premium_tier_0_modal_dismissed_at." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a UserContentSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings} UserContentSettings
                         */
                        UserContentSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings();
                            if (object.dismissed_contents != null)
                                if (typeof object.dismissed_contents === "string")
                                    $util.base64.decode(object.dismissed_contents, message.dismissed_contents = $util.newBuffer($util.base64.length(object.dismissed_contents)), 0);
                                else if (object.dismissed_contents.length >= 0)
                                    message.dismissed_contents = object.dismissed_contents;
                            if (object.last_dismissed_outbound_promotion_start_date != null) {
                                if (typeof object.last_dismissed_outbound_promotion_start_date !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings.last_dismissed_outbound_promotion_start_date: object expected");
                                message.last_dismissed_outbound_promotion_start_date = $root.google.protobuf.StringValue.fromObject(object.last_dismissed_outbound_promotion_start_date);
                            }
                            if (object.premium_tier_0_modal_dismissed_at != null) {
                                if (typeof object.premium_tier_0_modal_dismissed_at !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings.premium_tier_0_modal_dismissed_at: object expected");
                                message.premium_tier_0_modal_dismissed_at = $root.google.protobuf.Timestamp.fromObject(object.premium_tier_0_modal_dismissed_at);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a UserContentSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings} message UserContentSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        UserContentSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                if (options.bytes === String)
                                    object.dismissed_contents = "";
                                else {
                                    object.dismissed_contents = [];
                                    if (options.bytes !== Array)
                                        object.dismissed_contents = $util.newBuffer(object.dismissed_contents);
                                }
                            if (message.dismissed_contents != null && message.hasOwnProperty("dismissed_contents"))
                                object.dismissed_contents = options.bytes === String ? $util.base64.encode(message.dismissed_contents, 0, message.dismissed_contents.length) : options.bytes === Array ? Array.prototype.slice.call(message.dismissed_contents) : message.dismissed_contents;
                            if (message.last_dismissed_outbound_promotion_start_date != null && message.hasOwnProperty("last_dismissed_outbound_promotion_start_date")) {
                                object.last_dismissed_outbound_promotion_start_date = $root.google.protobuf.StringValue.toObject(message.last_dismissed_outbound_promotion_start_date, options);
                                if (options.oneofs)
                                    object._last_dismissed_outbound_promotion_start_date = "last_dismissed_outbound_promotion_start_date";
                            }
                            if (message.premium_tier_0_modal_dismissed_at != null && message.hasOwnProperty("premium_tier_0_modal_dismissed_at")) {
                                object.premium_tier_0_modal_dismissed_at = $root.google.protobuf.Timestamp.toObject(message.premium_tier_0_modal_dismissed_at, options);
                                if (options.oneofs)
                                    object._premium_tier_0_modal_dismissed_at = "premium_tier_0_modal_dismissed_at";
                            }
                            return object;
                        };

                        /**
                         * Converts this UserContentSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        UserContentSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for UserContentSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        UserContentSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.UserContentSettings";
                        };

                        return UserContentSettings;
                    })();

                    PreloadedUserSettings.VideoFilterBackgroundBlur = (function() {

                        /**
                         * Properties of a VideoFilterBackgroundBlur.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IVideoFilterBackgroundBlur
                         * @property {boolean|null} [use_blur] VideoFilterBackgroundBlur use_blur
                         */

                        /**
                         * Constructs a new VideoFilterBackgroundBlur.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a VideoFilterBackgroundBlur.
                         * @implements IVideoFilterBackgroundBlur
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterBackgroundBlur=} [properties] Properties to set
                         */
                        function VideoFilterBackgroundBlur(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * VideoFilterBackgroundBlur use_blur.
                         * @member {boolean} use_blur
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @instance
                         */
                        VideoFilterBackgroundBlur.prototype.use_blur = false;

                        /**
                         * Creates a new VideoFilterBackgroundBlur instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterBackgroundBlur=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur} VideoFilterBackgroundBlur instance
                         */
                        VideoFilterBackgroundBlur.create = function create(properties) {
                            return new VideoFilterBackgroundBlur(properties);
                        };

                        /**
                         * Encodes the specified VideoFilterBackgroundBlur message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterBackgroundBlur} message VideoFilterBackgroundBlur message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VideoFilterBackgroundBlur.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.use_blur != null && Object.hasOwnProperty.call(message, "use_blur"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.use_blur);
                            return writer;
                        };

                        /**
                         * Encodes the specified VideoFilterBackgroundBlur message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterBackgroundBlur} message VideoFilterBackgroundBlur message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VideoFilterBackgroundBlur.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a VideoFilterBackgroundBlur message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur} VideoFilterBackgroundBlur
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VideoFilterBackgroundBlur.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.use_blur = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a VideoFilterBackgroundBlur message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur} VideoFilterBackgroundBlur
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VideoFilterBackgroundBlur.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a VideoFilterBackgroundBlur message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VideoFilterBackgroundBlur.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.use_blur != null && message.hasOwnProperty("use_blur"))
                                if (typeof message.use_blur !== "boolean")
                                    return "use_blur: boolean expected";
                            return null;
                        };

                        /**
                         * Creates a VideoFilterBackgroundBlur message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur} VideoFilterBackgroundBlur
                         */
                        VideoFilterBackgroundBlur.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur();
                            if (object.use_blur != null)
                                message.use_blur = Boolean(object.use_blur);
                            return message;
                        };

                        /**
                         * Creates a plain object from a VideoFilterBackgroundBlur message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur} message VideoFilterBackgroundBlur
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VideoFilterBackgroundBlur.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.use_blur = false;
                            if (message.use_blur != null && message.hasOwnProperty("use_blur"))
                                object.use_blur = message.use_blur;
                            return object;
                        };

                        /**
                         * Converts this VideoFilterBackgroundBlur to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VideoFilterBackgroundBlur.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for VideoFilterBackgroundBlur
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VideoFilterBackgroundBlur.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur";
                        };

                        return VideoFilterBackgroundBlur;
                    })();

                    PreloadedUserSettings.VideoFilterAsset = (function() {

                        /**
                         * Properties of a VideoFilterAsset.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IVideoFilterAsset
                         * @property {number|Long|null} [id] VideoFilterAsset id
                         * @property {string|null} [asset_hash] VideoFilterAsset asset_hash
                         */

                        /**
                         * Constructs a new VideoFilterAsset.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a VideoFilterAsset.
                         * @implements IVideoFilterAsset
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterAsset=} [properties] Properties to set
                         */
                        function VideoFilterAsset(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * VideoFilterAsset id.
                         * @member {number|Long} id
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @instance
                         */
                        VideoFilterAsset.prototype.id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                        /**
                         * VideoFilterAsset asset_hash.
                         * @member {string} asset_hash
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @instance
                         */
                        VideoFilterAsset.prototype.asset_hash = "";

                        /**
                         * Creates a new VideoFilterAsset instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterAsset=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset} VideoFilterAsset instance
                         */
                        VideoFilterAsset.create = function create(properties) {
                            return new VideoFilterAsset(properties);
                        };

                        /**
                         * Encodes the specified VideoFilterAsset message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterAsset} message VideoFilterAsset message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VideoFilterAsset.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                writer.uint32(/* id 1, wireType 1 =*/9).fixed64(message.id);
                            if (message.asset_hash != null && Object.hasOwnProperty.call(message, "asset_hash"))
                                writer.uint32(/* id 2, wireType 2 =*/18).string(message.asset_hash);
                            return writer;
                        };

                        /**
                         * Encodes the specified VideoFilterAsset message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterAsset} message VideoFilterAsset message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VideoFilterAsset.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a VideoFilterAsset message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset} VideoFilterAsset
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VideoFilterAsset.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.id = reader.fixed64();
                                        break;
                                    }
                                case 2: {
                                        message.asset_hash = reader.string();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a VideoFilterAsset message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset} VideoFilterAsset
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VideoFilterAsset.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a VideoFilterAsset message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VideoFilterAsset.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (!$util.isInteger(message.id) && !(message.id && $util.isInteger(message.id.low) && $util.isInteger(message.id.high)))
                                    return "id: integer|Long expected";
                            if (message.asset_hash != null && message.hasOwnProperty("asset_hash"))
                                if (!$util.isString(message.asset_hash))
                                    return "asset_hash: string expected";
                            return null;
                        };

                        /**
                         * Creates a VideoFilterAsset message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset} VideoFilterAsset
                         */
                        VideoFilterAsset.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset();
                            if (object.id != null)
                                if ($util.Long)
                                    (message.id = $util.Long.fromValue(object.id)).unsigned = false;
                                else if (typeof object.id === "string")
                                    message.id = parseInt(object.id, 10);
                                else if (typeof object.id === "number")
                                    message.id = object.id;
                                else if (typeof object.id === "object")
                                    message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber();
                            if (object.asset_hash != null)
                                message.asset_hash = String(object.asset_hash);
                            return message;
                        };

                        /**
                         * Creates a plain object from a VideoFilterAsset message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset} message VideoFilterAsset
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VideoFilterAsset.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.id = options.longs === String ? "0" : 0;
                                object.asset_hash = "";
                            }
                            if (message.id != null && message.hasOwnProperty("id"))
                                if (typeof message.id === "number")
                                    object.id = options.longs === String ? String(message.id) : message.id;
                                else
                                    object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber() : message.id;
                            if (message.asset_hash != null && message.hasOwnProperty("asset_hash"))
                                object.asset_hash = message.asset_hash;
                            return object;
                        };

                        /**
                         * Converts this VideoFilterAsset to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VideoFilterAsset.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for VideoFilterAsset
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VideoFilterAsset.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset";
                        };

                        return VideoFilterAsset;
                    })();

                    PreloadedUserSettings.SoundboardSettings = (function() {

                        /**
                         * Properties of a SoundboardSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface ISoundboardSettings
                         * @property {number|null} [volume] SoundboardSettings volume
                         */

                        /**
                         * Constructs a new SoundboardSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a SoundboardSettings.
                         * @implements ISoundboardSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ISoundboardSettings=} [properties] Properties to set
                         */
                        function SoundboardSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * SoundboardSettings volume.
                         * @member {number} volume
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @instance
                         */
                        SoundboardSettings.prototype.volume = 0;

                        /**
                         * Creates a new SoundboardSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ISoundboardSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings} SoundboardSettings instance
                         */
                        SoundboardSettings.create = function create(properties) {
                            return new SoundboardSettings(properties);
                        };

                        /**
                         * Encodes the specified SoundboardSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ISoundboardSettings} message SoundboardSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SoundboardSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.volume != null && Object.hasOwnProperty.call(message, "volume"))
                                writer.uint32(/* id 1, wireType 5 =*/13).float(message.volume);
                            return writer;
                        };

                        /**
                         * Encodes the specified SoundboardSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ISoundboardSettings} message SoundboardSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        SoundboardSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a SoundboardSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings} SoundboardSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SoundboardSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.volume = reader.float();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a SoundboardSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings} SoundboardSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        SoundboardSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a SoundboardSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        SoundboardSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.volume != null && message.hasOwnProperty("volume"))
                                if (typeof message.volume !== "number")
                                    return "volume: number expected";
                            return null;
                        };

                        /**
                         * Creates a SoundboardSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings} SoundboardSettings
                         */
                        SoundboardSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings();
                            if (object.volume != null)
                                message.volume = Number(object.volume);
                            return message;
                        };

                        /**
                         * Creates a plain object from a SoundboardSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings} message SoundboardSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        SoundboardSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                object.volume = 0;
                            if (message.volume != null && message.hasOwnProperty("volume"))
                                object.volume = options.json && !isFinite(message.volume) ? String(message.volume) : message.volume;
                            return object;
                        };

                        /**
                         * Converts this SoundboardSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        SoundboardSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for SoundboardSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        SoundboardSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings";
                        };

                        return SoundboardSettings;
                    })();

                    PreloadedUserSettings.VoiceAndVideoSettings = (function() {

                        /**
                         * Properties of a VoiceAndVideoSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IVoiceAndVideoSettings
                         * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterBackgroundBlur|null} [blur] VoiceAndVideoSettings blur
                         * @property {number|null} [preset_option] VoiceAndVideoSettings preset_option
                         * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterAsset|null} [custom_asset] VoiceAndVideoSettings custom_asset
                         * @property {google.protobuf.IBoolValue|null} [always_preview_video] VoiceAndVideoSettings always_preview_video
                         * @property {google.protobuf.IUInt32Value|null} [afk_timeout] VoiceAndVideoSettings afk_timeout
                         * @property {google.protobuf.IBoolValue|null} [stream_notifications_enabled] VoiceAndVideoSettings stream_notifications_enabled
                         * @property {google.protobuf.IBoolValue|null} [native_phone_integration_enabled] VoiceAndVideoSettings native_phone_integration_enabled
                         * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ISoundboardSettings|null} [soundboard_settings] VoiceAndVideoSettings soundboard_settings
                         */

                        /**
                         * Constructs a new VoiceAndVideoSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a VoiceAndVideoSettings.
                         * @implements IVoiceAndVideoSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVoiceAndVideoSettings=} [properties] Properties to set
                         */
                        function VoiceAndVideoSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * VoiceAndVideoSettings blur.
                         * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterBackgroundBlur|null|undefined} blur
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        VoiceAndVideoSettings.prototype.blur = null;

                        /**
                         * VoiceAndVideoSettings preset_option.
                         * @member {number} preset_option
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        VoiceAndVideoSettings.prototype.preset_option = 0;

                        /**
                         * VoiceAndVideoSettings custom_asset.
                         * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVideoFilterAsset|null|undefined} custom_asset
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        VoiceAndVideoSettings.prototype.custom_asset = null;

                        /**
                         * VoiceAndVideoSettings always_preview_video.
                         * @member {google.protobuf.IBoolValue|null|undefined} always_preview_video
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        VoiceAndVideoSettings.prototype.always_preview_video = null;

                        /**
                         * VoiceAndVideoSettings afk_timeout.
                         * @member {google.protobuf.IUInt32Value|null|undefined} afk_timeout
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        VoiceAndVideoSettings.prototype.afk_timeout = null;

                        /**
                         * VoiceAndVideoSettings stream_notifications_enabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} stream_notifications_enabled
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        VoiceAndVideoSettings.prototype.stream_notifications_enabled = null;

                        /**
                         * VoiceAndVideoSettings native_phone_integration_enabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} native_phone_integration_enabled
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        VoiceAndVideoSettings.prototype.native_phone_integration_enabled = null;

                        /**
                         * VoiceAndVideoSettings soundboard_settings.
                         * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ISoundboardSettings|null|undefined} soundboard_settings
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        VoiceAndVideoSettings.prototype.soundboard_settings = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * VoiceAndVideoSettings _always_preview_video.
                         * @member {"always_preview_video"|undefined} _always_preview_video
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        Object.defineProperty(VoiceAndVideoSettings.prototype, "_always_preview_video", {
                            get: $util.oneOfGetter($oneOfFields = ["always_preview_video"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * VoiceAndVideoSettings _afk_timeout.
                         * @member {"afk_timeout"|undefined} _afk_timeout
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        Object.defineProperty(VoiceAndVideoSettings.prototype, "_afk_timeout", {
                            get: $util.oneOfGetter($oneOfFields = ["afk_timeout"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * VoiceAndVideoSettings _stream_notifications_enabled.
                         * @member {"stream_notifications_enabled"|undefined} _stream_notifications_enabled
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        Object.defineProperty(VoiceAndVideoSettings.prototype, "_stream_notifications_enabled", {
                            get: $util.oneOfGetter($oneOfFields = ["stream_notifications_enabled"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * VoiceAndVideoSettings _native_phone_integration_enabled.
                         * @member {"native_phone_integration_enabled"|undefined} _native_phone_integration_enabled
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        Object.defineProperty(VoiceAndVideoSettings.prototype, "_native_phone_integration_enabled", {
                            get: $util.oneOfGetter($oneOfFields = ["native_phone_integration_enabled"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * VoiceAndVideoSettings _soundboard_settings.
                         * @member {"soundboard_settings"|undefined} _soundboard_settings
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         */
                        Object.defineProperty(VoiceAndVideoSettings.prototype, "_soundboard_settings", {
                            get: $util.oneOfGetter($oneOfFields = ["soundboard_settings"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new VoiceAndVideoSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVoiceAndVideoSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings} VoiceAndVideoSettings instance
                         */
                        VoiceAndVideoSettings.create = function create(properties) {
                            return new VoiceAndVideoSettings(properties);
                        };

                        /**
                         * Encodes the specified VoiceAndVideoSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVoiceAndVideoSettings} message VoiceAndVideoSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VoiceAndVideoSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.blur != null && Object.hasOwnProperty.call(message, "blur"))
                                $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur.encode(message.blur, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.preset_option != null && Object.hasOwnProperty.call(message, "preset_option"))
                                writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.preset_option);
                            if (message.custom_asset != null && Object.hasOwnProperty.call(message, "custom_asset"))
                                $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset.encode(message.custom_asset, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.always_preview_video != null && Object.hasOwnProperty.call(message, "always_preview_video"))
                                $root.google.protobuf.BoolValue.encode(message.always_preview_video, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();
                            if (message.afk_timeout != null && Object.hasOwnProperty.call(message, "afk_timeout"))
                                $root.google.protobuf.UInt32Value.encode(message.afk_timeout, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();
                            if (message.stream_notifications_enabled != null && Object.hasOwnProperty.call(message, "stream_notifications_enabled"))
                                $root.google.protobuf.BoolValue.encode(message.stream_notifications_enabled, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.native_phone_integration_enabled != null && Object.hasOwnProperty.call(message, "native_phone_integration_enabled"))
                                $root.google.protobuf.BoolValue.encode(message.native_phone_integration_enabled, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.soundboard_settings != null && Object.hasOwnProperty.call(message, "soundboard_settings"))
                                $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings.encode(message.soundboard_settings, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified VoiceAndVideoSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IVoiceAndVideoSettings} message VoiceAndVideoSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        VoiceAndVideoSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a VoiceAndVideoSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings} VoiceAndVideoSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VoiceAndVideoSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.blur = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.preset_option = reader.uint32();
                                        break;
                                    }
                                case 3: {
                                        message.custom_asset = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        message.always_preview_video = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 6: {
                                        message.afk_timeout = $root.google.protobuf.UInt32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 7: {
                                        message.stream_notifications_enabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.native_phone_integration_enabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.soundboard_settings = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a VoiceAndVideoSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings} VoiceAndVideoSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        VoiceAndVideoSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a VoiceAndVideoSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        VoiceAndVideoSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.blur != null && message.hasOwnProperty("blur")) {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur.verify(message.blur);
                                if (error)
                                    return "blur." + error;
                            }
                            if (message.preset_option != null && message.hasOwnProperty("preset_option"))
                                if (!$util.isInteger(message.preset_option))
                                    return "preset_option: integer expected";
                            if (message.custom_asset != null && message.hasOwnProperty("custom_asset")) {
                                var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset.verify(message.custom_asset);
                                if (error)
                                    return "custom_asset." + error;
                            }
                            if (message.always_preview_video != null && message.hasOwnProperty("always_preview_video")) {
                                properties._always_preview_video = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.always_preview_video);
                                    if (error)
                                        return "always_preview_video." + error;
                                }
                            }
                            if (message.afk_timeout != null && message.hasOwnProperty("afk_timeout")) {
                                properties._afk_timeout = 1;
                                {
                                    var error = $root.google.protobuf.UInt32Value.verify(message.afk_timeout);
                                    if (error)
                                        return "afk_timeout." + error;
                                }
                            }
                            if (message.stream_notifications_enabled != null && message.hasOwnProperty("stream_notifications_enabled")) {
                                properties._stream_notifications_enabled = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.stream_notifications_enabled);
                                    if (error)
                                        return "stream_notifications_enabled." + error;
                                }
                            }
                            if (message.native_phone_integration_enabled != null && message.hasOwnProperty("native_phone_integration_enabled")) {
                                properties._native_phone_integration_enabled = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.native_phone_integration_enabled);
                                    if (error)
                                        return "native_phone_integration_enabled." + error;
                                }
                            }
                            if (message.soundboard_settings != null && message.hasOwnProperty("soundboard_settings")) {
                                properties._soundboard_settings = 1;
                                {
                                    var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings.verify(message.soundboard_settings);
                                    if (error)
                                        return "soundboard_settings." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a VoiceAndVideoSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings} VoiceAndVideoSettings
                         */
                        VoiceAndVideoSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings();
                            if (object.blur != null) {
                                if (typeof object.blur !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.blur: object expected");
                                message.blur = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur.fromObject(object.blur);
                            }
                            if (object.preset_option != null)
                                message.preset_option = object.preset_option >>> 0;
                            if (object.custom_asset != null) {
                                if (typeof object.custom_asset !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.custom_asset: object expected");
                                message.custom_asset = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset.fromObject(object.custom_asset);
                            }
                            if (object.always_preview_video != null) {
                                if (typeof object.always_preview_video !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.always_preview_video: object expected");
                                message.always_preview_video = $root.google.protobuf.BoolValue.fromObject(object.always_preview_video);
                            }
                            if (object.afk_timeout != null) {
                                if (typeof object.afk_timeout !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.afk_timeout: object expected");
                                message.afk_timeout = $root.google.protobuf.UInt32Value.fromObject(object.afk_timeout);
                            }
                            if (object.stream_notifications_enabled != null) {
                                if (typeof object.stream_notifications_enabled !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.stream_notifications_enabled: object expected");
                                message.stream_notifications_enabled = $root.google.protobuf.BoolValue.fromObject(object.stream_notifications_enabled);
                            }
                            if (object.native_phone_integration_enabled != null) {
                                if (typeof object.native_phone_integration_enabled !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.native_phone_integration_enabled: object expected");
                                message.native_phone_integration_enabled = $root.google.protobuf.BoolValue.fromObject(object.native_phone_integration_enabled);
                            }
                            if (object.soundboard_settings != null) {
                                if (typeof object.soundboard_settings !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings.soundboard_settings: object expected");
                                message.soundboard_settings = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings.fromObject(object.soundboard_settings);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a VoiceAndVideoSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings} message VoiceAndVideoSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        VoiceAndVideoSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.blur = null;
                                object.preset_option = 0;
                                object.custom_asset = null;
                            }
                            if (message.blur != null && message.hasOwnProperty("blur"))
                                object.blur = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterBackgroundBlur.toObject(message.blur, options);
                            if (message.preset_option != null && message.hasOwnProperty("preset_option"))
                                object.preset_option = message.preset_option;
                            if (message.custom_asset != null && message.hasOwnProperty("custom_asset"))
                                object.custom_asset = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VideoFilterAsset.toObject(message.custom_asset, options);
                            if (message.always_preview_video != null && message.hasOwnProperty("always_preview_video")) {
                                object.always_preview_video = $root.google.protobuf.BoolValue.toObject(message.always_preview_video, options);
                                if (options.oneofs)
                                    object._always_preview_video = "always_preview_video";
                            }
                            if (message.afk_timeout != null && message.hasOwnProperty("afk_timeout")) {
                                object.afk_timeout = $root.google.protobuf.UInt32Value.toObject(message.afk_timeout, options);
                                if (options.oneofs)
                                    object._afk_timeout = "afk_timeout";
                            }
                            if (message.stream_notifications_enabled != null && message.hasOwnProperty("stream_notifications_enabled")) {
                                object.stream_notifications_enabled = $root.google.protobuf.BoolValue.toObject(message.stream_notifications_enabled, options);
                                if (options.oneofs)
                                    object._stream_notifications_enabled = "stream_notifications_enabled";
                            }
                            if (message.native_phone_integration_enabled != null && message.hasOwnProperty("native_phone_integration_enabled")) {
                                object.native_phone_integration_enabled = $root.google.protobuf.BoolValue.toObject(message.native_phone_integration_enabled, options);
                                if (options.oneofs)
                                    object._native_phone_integration_enabled = "native_phone_integration_enabled";
                            }
                            if (message.soundboard_settings != null && message.hasOwnProperty("soundboard_settings")) {
                                object.soundboard_settings = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.SoundboardSettings.toObject(message.soundboard_settings, options);
                                if (options.oneofs)
                                    object._soundboard_settings = "soundboard_settings";
                            }
                            return object;
                        };

                        /**
                         * Converts this VoiceAndVideoSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        VoiceAndVideoSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for VoiceAndVideoSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        VoiceAndVideoSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.VoiceAndVideoSettings";
                        };

                        return VoiceAndVideoSettings;
                    })();

                    PreloadedUserSettings.TextAndImagesSettings = (function() {

                        /**
                         * Properties of a TextAndImagesSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface ITextAndImagesSettings
                         * @property {google.protobuf.IStringValue|null} [diversity_surrogate] TextAndImagesSettings diversity_surrogate
                         * @property {google.protobuf.IBoolValue|null} [use_rich_chat_input] TextAndImagesSettings use_rich_chat_input
                         * @property {google.protobuf.IBoolValue|null} [use_thread_sidebar] TextAndImagesSettings use_thread_sidebar
                         * @property {google.protobuf.IStringValue|null} [render_spoilers] TextAndImagesSettings render_spoilers
                         * @property {Array.<string>|null} [emoji_picker_collapsed_sections] TextAndImagesSettings emoji_picker_collapsed_sections
                         * @property {Array.<string>|null} [sticker_picker_collapsed_sections] TextAndImagesSettings sticker_picker_collapsed_sections
                         * @property {google.protobuf.IBoolValue|null} [view_image_descriptions] TextAndImagesSettings view_image_descriptions
                         * @property {google.protobuf.IBoolValue|null} [show_command_suggestions] TextAndImagesSettings show_command_suggestions
                         * @property {google.protobuf.IBoolValue|null} [inline_attachment_media] TextAndImagesSettings inline_attachment_media
                         * @property {google.protobuf.IBoolValue|null} [inline_embed_media] TextAndImagesSettings inline_embed_media
                         * @property {google.protobuf.IBoolValue|null} [gif_auto_play] TextAndImagesSettings gif_auto_play
                         * @property {google.protobuf.IBoolValue|null} [render_embeds] TextAndImagesSettings render_embeds
                         * @property {google.protobuf.IBoolValue|null} [render_reactions] TextAndImagesSettings render_reactions
                         * @property {google.protobuf.IBoolValue|null} [animate_emoji] TextAndImagesSettings animate_emoji
                         * @property {google.protobuf.IUInt32Value|null} [animate_stickers] TextAndImagesSettings animate_stickers
                         * @property {google.protobuf.IBoolValue|null} [enable_tts_command] TextAndImagesSettings enable_tts_command
                         * @property {google.protobuf.IBoolValue|null} [message_display_compact] TextAndImagesSettings message_display_compact
                         * @property {google.protobuf.IUInt32Value|null} [explicit_content_filter] TextAndImagesSettings explicit_content_filter
                         * @property {google.protobuf.IBoolValue|null} [view_nsfw_guilds] TextAndImagesSettings view_nsfw_guilds
                         * @property {google.protobuf.IBoolValue|null} [convert_emoticons] TextAndImagesSettings convert_emoticons
                         * @property {google.protobuf.IBoolValue|null} [expression_suggestions_enabled] TextAndImagesSettings expression_suggestions_enabled
                         * @property {google.protobuf.IBoolValue|null} [view_nsfw_commands] TextAndImagesSettings view_nsfw_commands
                         * @property {google.protobuf.IBoolValue|null} [use_legacy_chat_input] TextAndImagesSettings use_legacy_chat_input
                         */

                        /**
                         * Constructs a new TextAndImagesSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a TextAndImagesSettings.
                         * @implements ITextAndImagesSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ITextAndImagesSettings=} [properties] Properties to set
                         */
                        function TextAndImagesSettings(properties) {
                            this.emoji_picker_collapsed_sections = [];
                            this.sticker_picker_collapsed_sections = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * TextAndImagesSettings diversity_surrogate.
                         * @member {google.protobuf.IStringValue|null|undefined} diversity_surrogate
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.diversity_surrogate = null;

                        /**
                         * TextAndImagesSettings use_rich_chat_input.
                         * @member {google.protobuf.IBoolValue|null|undefined} use_rich_chat_input
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.use_rich_chat_input = null;

                        /**
                         * TextAndImagesSettings use_thread_sidebar.
                         * @member {google.protobuf.IBoolValue|null|undefined} use_thread_sidebar
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.use_thread_sidebar = null;

                        /**
                         * TextAndImagesSettings render_spoilers.
                         * @member {google.protobuf.IStringValue|null|undefined} render_spoilers
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.render_spoilers = null;

                        /**
                         * TextAndImagesSettings emoji_picker_collapsed_sections.
                         * @member {Array.<string>} emoji_picker_collapsed_sections
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.emoji_picker_collapsed_sections = $util.emptyArray;

                        /**
                         * TextAndImagesSettings sticker_picker_collapsed_sections.
                         * @member {Array.<string>} sticker_picker_collapsed_sections
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.sticker_picker_collapsed_sections = $util.emptyArray;

                        /**
                         * TextAndImagesSettings view_image_descriptions.
                         * @member {google.protobuf.IBoolValue|null|undefined} view_image_descriptions
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.view_image_descriptions = null;

                        /**
                         * TextAndImagesSettings show_command_suggestions.
                         * @member {google.protobuf.IBoolValue|null|undefined} show_command_suggestions
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.show_command_suggestions = null;

                        /**
                         * TextAndImagesSettings inline_attachment_media.
                         * @member {google.protobuf.IBoolValue|null|undefined} inline_attachment_media
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.inline_attachment_media = null;

                        /**
                         * TextAndImagesSettings inline_embed_media.
                         * @member {google.protobuf.IBoolValue|null|undefined} inline_embed_media
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.inline_embed_media = null;

                        /**
                         * TextAndImagesSettings gif_auto_play.
                         * @member {google.protobuf.IBoolValue|null|undefined} gif_auto_play
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.gif_auto_play = null;

                        /**
                         * TextAndImagesSettings render_embeds.
                         * @member {google.protobuf.IBoolValue|null|undefined} render_embeds
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.render_embeds = null;

                        /**
                         * TextAndImagesSettings render_reactions.
                         * @member {google.protobuf.IBoolValue|null|undefined} render_reactions
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.render_reactions = null;

                        /**
                         * TextAndImagesSettings animate_emoji.
                         * @member {google.protobuf.IBoolValue|null|undefined} animate_emoji
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.animate_emoji = null;

                        /**
                         * TextAndImagesSettings animate_stickers.
                         * @member {google.protobuf.IUInt32Value|null|undefined} animate_stickers
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.animate_stickers = null;

                        /**
                         * TextAndImagesSettings enable_tts_command.
                         * @member {google.protobuf.IBoolValue|null|undefined} enable_tts_command
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.enable_tts_command = null;

                        /**
                         * TextAndImagesSettings message_display_compact.
                         * @member {google.protobuf.IBoolValue|null|undefined} message_display_compact
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.message_display_compact = null;

                        /**
                         * TextAndImagesSettings explicit_content_filter.
                         * @member {google.protobuf.IUInt32Value|null|undefined} explicit_content_filter
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.explicit_content_filter = null;

                        /**
                         * TextAndImagesSettings view_nsfw_guilds.
                         * @member {google.protobuf.IBoolValue|null|undefined} view_nsfw_guilds
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.view_nsfw_guilds = null;

                        /**
                         * TextAndImagesSettings convert_emoticons.
                         * @member {google.protobuf.IBoolValue|null|undefined} convert_emoticons
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.convert_emoticons = null;

                        /**
                         * TextAndImagesSettings expression_suggestions_enabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} expression_suggestions_enabled
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.expression_suggestions_enabled = null;

                        /**
                         * TextAndImagesSettings view_nsfw_commands.
                         * @member {google.protobuf.IBoolValue|null|undefined} view_nsfw_commands
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.view_nsfw_commands = null;

                        /**
                         * TextAndImagesSettings use_legacy_chat_input.
                         * @member {google.protobuf.IBoolValue|null|undefined} use_legacy_chat_input
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        TextAndImagesSettings.prototype.use_legacy_chat_input = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * TextAndImagesSettings _diversity_surrogate.
                         * @member {"diversity_surrogate"|undefined} _diversity_surrogate
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_diversity_surrogate", {
                            get: $util.oneOfGetter($oneOfFields = ["diversity_surrogate"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _use_rich_chat_input.
                         * @member {"use_rich_chat_input"|undefined} _use_rich_chat_input
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_use_rich_chat_input", {
                            get: $util.oneOfGetter($oneOfFields = ["use_rich_chat_input"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _use_thread_sidebar.
                         * @member {"use_thread_sidebar"|undefined} _use_thread_sidebar
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_use_thread_sidebar", {
                            get: $util.oneOfGetter($oneOfFields = ["use_thread_sidebar"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _render_spoilers.
                         * @member {"render_spoilers"|undefined} _render_spoilers
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_render_spoilers", {
                            get: $util.oneOfGetter($oneOfFields = ["render_spoilers"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _view_image_descriptions.
                         * @member {"view_image_descriptions"|undefined} _view_image_descriptions
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_view_image_descriptions", {
                            get: $util.oneOfGetter($oneOfFields = ["view_image_descriptions"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _show_command_suggestions.
                         * @member {"show_command_suggestions"|undefined} _show_command_suggestions
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_show_command_suggestions", {
                            get: $util.oneOfGetter($oneOfFields = ["show_command_suggestions"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _inline_attachment_media.
                         * @member {"inline_attachment_media"|undefined} _inline_attachment_media
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_inline_attachment_media", {
                            get: $util.oneOfGetter($oneOfFields = ["inline_attachment_media"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _inline_embed_media.
                         * @member {"inline_embed_media"|undefined} _inline_embed_media
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_inline_embed_media", {
                            get: $util.oneOfGetter($oneOfFields = ["inline_embed_media"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _gif_auto_play.
                         * @member {"gif_auto_play"|undefined} _gif_auto_play
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_gif_auto_play", {
                            get: $util.oneOfGetter($oneOfFields = ["gif_auto_play"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _render_embeds.
                         * @member {"render_embeds"|undefined} _render_embeds
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_render_embeds", {
                            get: $util.oneOfGetter($oneOfFields = ["render_embeds"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _render_reactions.
                         * @member {"render_reactions"|undefined} _render_reactions
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_render_reactions", {
                            get: $util.oneOfGetter($oneOfFields = ["render_reactions"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _animate_emoji.
                         * @member {"animate_emoji"|undefined} _animate_emoji
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_animate_emoji", {
                            get: $util.oneOfGetter($oneOfFields = ["animate_emoji"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _animate_stickers.
                         * @member {"animate_stickers"|undefined} _animate_stickers
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_animate_stickers", {
                            get: $util.oneOfGetter($oneOfFields = ["animate_stickers"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _enable_tts_command.
                         * @member {"enable_tts_command"|undefined} _enable_tts_command
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_enable_tts_command", {
                            get: $util.oneOfGetter($oneOfFields = ["enable_tts_command"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _message_display_compact.
                         * @member {"message_display_compact"|undefined} _message_display_compact
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_message_display_compact", {
                            get: $util.oneOfGetter($oneOfFields = ["message_display_compact"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _explicit_content_filter.
                         * @member {"explicit_content_filter"|undefined} _explicit_content_filter
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_explicit_content_filter", {
                            get: $util.oneOfGetter($oneOfFields = ["explicit_content_filter"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _view_nsfw_guilds.
                         * @member {"view_nsfw_guilds"|undefined} _view_nsfw_guilds
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_view_nsfw_guilds", {
                            get: $util.oneOfGetter($oneOfFields = ["view_nsfw_guilds"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _convert_emoticons.
                         * @member {"convert_emoticons"|undefined} _convert_emoticons
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_convert_emoticons", {
                            get: $util.oneOfGetter($oneOfFields = ["convert_emoticons"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _expression_suggestions_enabled.
                         * @member {"expression_suggestions_enabled"|undefined} _expression_suggestions_enabled
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_expression_suggestions_enabled", {
                            get: $util.oneOfGetter($oneOfFields = ["expression_suggestions_enabled"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _view_nsfw_commands.
                         * @member {"view_nsfw_commands"|undefined} _view_nsfw_commands
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_view_nsfw_commands", {
                            get: $util.oneOfGetter($oneOfFields = ["view_nsfw_commands"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * TextAndImagesSettings _use_legacy_chat_input.
                         * @member {"use_legacy_chat_input"|undefined} _use_legacy_chat_input
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         */
                        Object.defineProperty(TextAndImagesSettings.prototype, "_use_legacy_chat_input", {
                            get: $util.oneOfGetter($oneOfFields = ["use_legacy_chat_input"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new TextAndImagesSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ITextAndImagesSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings} TextAndImagesSettings instance
                         */
                        TextAndImagesSettings.create = function create(properties) {
                            return new TextAndImagesSettings(properties);
                        };

                        /**
                         * Encodes the specified TextAndImagesSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ITextAndImagesSettings} message TextAndImagesSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TextAndImagesSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.diversity_surrogate != null && Object.hasOwnProperty.call(message, "diversity_surrogate"))
                                $root.google.protobuf.StringValue.encode(message.diversity_surrogate, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.use_rich_chat_input != null && Object.hasOwnProperty.call(message, "use_rich_chat_input"))
                                $root.google.protobuf.BoolValue.encode(message.use_rich_chat_input, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.use_thread_sidebar != null && Object.hasOwnProperty.call(message, "use_thread_sidebar"))
                                $root.google.protobuf.BoolValue.encode(message.use_thread_sidebar, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.render_spoilers != null && Object.hasOwnProperty.call(message, "render_spoilers"))
                                $root.google.protobuf.StringValue.encode(message.render_spoilers, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            if (message.emoji_picker_collapsed_sections != null && message.emoji_picker_collapsed_sections.length)
                                for (var i = 0; i < message.emoji_picker_collapsed_sections.length; ++i)
                                    writer.uint32(/* id 5, wireType 2 =*/42).string(message.emoji_picker_collapsed_sections[i]);
                            if (message.sticker_picker_collapsed_sections != null && message.sticker_picker_collapsed_sections.length)
                                for (var i = 0; i < message.sticker_picker_collapsed_sections.length; ++i)
                                    writer.uint32(/* id 6, wireType 2 =*/50).string(message.sticker_picker_collapsed_sections[i]);
                            if (message.view_image_descriptions != null && Object.hasOwnProperty.call(message, "view_image_descriptions"))
                                $root.google.protobuf.BoolValue.encode(message.view_image_descriptions, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();
                            if (message.show_command_suggestions != null && Object.hasOwnProperty.call(message, "show_command_suggestions"))
                                $root.google.protobuf.BoolValue.encode(message.show_command_suggestions, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.inline_attachment_media != null && Object.hasOwnProperty.call(message, "inline_attachment_media"))
                                $root.google.protobuf.BoolValue.encode(message.inline_attachment_media, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.inline_embed_media != null && Object.hasOwnProperty.call(message, "inline_embed_media"))
                                $root.google.protobuf.BoolValue.encode(message.inline_embed_media, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.gif_auto_play != null && Object.hasOwnProperty.call(message, "gif_auto_play"))
                                $root.google.protobuf.BoolValue.encode(message.gif_auto_play, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.render_embeds != null && Object.hasOwnProperty.call(message, "render_embeds"))
                                $root.google.protobuf.BoolValue.encode(message.render_embeds, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.render_reactions != null && Object.hasOwnProperty.call(message, "render_reactions"))
                                $root.google.protobuf.BoolValue.encode(message.render_reactions, writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();
                            if (message.animate_emoji != null && Object.hasOwnProperty.call(message, "animate_emoji"))
                                $root.google.protobuf.BoolValue.encode(message.animate_emoji, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();
                            if (message.animate_stickers != null && Object.hasOwnProperty.call(message, "animate_stickers"))
                                $root.google.protobuf.UInt32Value.encode(message.animate_stickers, writer.uint32(/* id 15, wireType 2 =*/122).fork()).ldelim();
                            if (message.enable_tts_command != null && Object.hasOwnProperty.call(message, "enable_tts_command"))
                                $root.google.protobuf.BoolValue.encode(message.enable_tts_command, writer.uint32(/* id 16, wireType 2 =*/130).fork()).ldelim();
                            if (message.message_display_compact != null && Object.hasOwnProperty.call(message, "message_display_compact"))
                                $root.google.protobuf.BoolValue.encode(message.message_display_compact, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.explicit_content_filter != null && Object.hasOwnProperty.call(message, "explicit_content_filter"))
                                $root.google.protobuf.UInt32Value.encode(message.explicit_content_filter, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            if (message.view_nsfw_guilds != null && Object.hasOwnProperty.call(message, "view_nsfw_guilds"))
                                $root.google.protobuf.BoolValue.encode(message.view_nsfw_guilds, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();
                            if (message.convert_emoticons != null && Object.hasOwnProperty.call(message, "convert_emoticons"))
                                $root.google.protobuf.BoolValue.encode(message.convert_emoticons, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();
                            if (message.expression_suggestions_enabled != null && Object.hasOwnProperty.call(message, "expression_suggestions_enabled"))
                                $root.google.protobuf.BoolValue.encode(message.expression_suggestions_enabled, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();
                            if (message.view_nsfw_commands != null && Object.hasOwnProperty.call(message, "view_nsfw_commands"))
                                $root.google.protobuf.BoolValue.encode(message.view_nsfw_commands, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();
                            if (message.use_legacy_chat_input != null && Object.hasOwnProperty.call(message, "use_legacy_chat_input"))
                                $root.google.protobuf.BoolValue.encode(message.use_legacy_chat_input, writer.uint32(/* id 24, wireType 2 =*/194).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified TextAndImagesSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ITextAndImagesSettings} message TextAndImagesSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        TextAndImagesSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a TextAndImagesSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings} TextAndImagesSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TextAndImagesSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.diversity_surrogate = $root.google.protobuf.StringValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.use_rich_chat_input = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.use_thread_sidebar = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.render_spoilers = $root.google.protobuf.StringValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 5: {
                                        if (!(message.emoji_picker_collapsed_sections && message.emoji_picker_collapsed_sections.length))
                                            message.emoji_picker_collapsed_sections = [];
                                        message.emoji_picker_collapsed_sections.push(reader.string());
                                        break;
                                    }
                                case 6: {
                                        if (!(message.sticker_picker_collapsed_sections && message.sticker_picker_collapsed_sections.length))
                                            message.sticker_picker_collapsed_sections = [];
                                        message.sticker_picker_collapsed_sections.push(reader.string());
                                        break;
                                    }
                                case 7: {
                                        message.view_image_descriptions = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 8: {
                                        message.show_command_suggestions = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.inline_attachment_media = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.inline_embed_media = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.gif_auto_play = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.render_embeds = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        message.render_reactions = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 14: {
                                        message.animate_emoji = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 15: {
                                        message.animate_stickers = $root.google.protobuf.UInt32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 16: {
                                        message.enable_tts_command = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 17: {
                                        message.message_display_compact = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.explicit_content_filter = $root.google.protobuf.UInt32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 20: {
                                        message.view_nsfw_guilds = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 21: {
                                        message.convert_emoticons = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 22: {
                                        message.expression_suggestions_enabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 23: {
                                        message.view_nsfw_commands = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 24: {
                                        message.use_legacy_chat_input = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a TextAndImagesSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings} TextAndImagesSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        TextAndImagesSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a TextAndImagesSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        TextAndImagesSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.diversity_surrogate != null && message.hasOwnProperty("diversity_surrogate")) {
                                properties._diversity_surrogate = 1;
                                {
                                    var error = $root.google.protobuf.StringValue.verify(message.diversity_surrogate);
                                    if (error)
                                        return "diversity_surrogate." + error;
                                }
                            }
                            if (message.use_rich_chat_input != null && message.hasOwnProperty("use_rich_chat_input")) {
                                properties._use_rich_chat_input = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.use_rich_chat_input);
                                    if (error)
                                        return "use_rich_chat_input." + error;
                                }
                            }
                            if (message.use_thread_sidebar != null && message.hasOwnProperty("use_thread_sidebar")) {
                                properties._use_thread_sidebar = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.use_thread_sidebar);
                                    if (error)
                                        return "use_thread_sidebar." + error;
                                }
                            }
                            if (message.render_spoilers != null && message.hasOwnProperty("render_spoilers")) {
                                properties._render_spoilers = 1;
                                {
                                    var error = $root.google.protobuf.StringValue.verify(message.render_spoilers);
                                    if (error)
                                        return "render_spoilers." + error;
                                }
                            }
                            if (message.emoji_picker_collapsed_sections != null && message.hasOwnProperty("emoji_picker_collapsed_sections")) {
                                if (!Array.isArray(message.emoji_picker_collapsed_sections))
                                    return "emoji_picker_collapsed_sections: array expected";
                                for (var i = 0; i < message.emoji_picker_collapsed_sections.length; ++i)
                                    if (!$util.isString(message.emoji_picker_collapsed_sections[i]))
                                        return "emoji_picker_collapsed_sections: string[] expected";
                            }
                            if (message.sticker_picker_collapsed_sections != null && message.hasOwnProperty("sticker_picker_collapsed_sections")) {
                                if (!Array.isArray(message.sticker_picker_collapsed_sections))
                                    return "sticker_picker_collapsed_sections: array expected";
                                for (var i = 0; i < message.sticker_picker_collapsed_sections.length; ++i)
                                    if (!$util.isString(message.sticker_picker_collapsed_sections[i]))
                                        return "sticker_picker_collapsed_sections: string[] expected";
                            }
                            if (message.view_image_descriptions != null && message.hasOwnProperty("view_image_descriptions")) {
                                properties._view_image_descriptions = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.view_image_descriptions);
                                    if (error)
                                        return "view_image_descriptions." + error;
                                }
                            }
                            if (message.show_command_suggestions != null && message.hasOwnProperty("show_command_suggestions")) {
                                properties._show_command_suggestions = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.show_command_suggestions);
                                    if (error)
                                        return "show_command_suggestions." + error;
                                }
                            }
                            if (message.inline_attachment_media != null && message.hasOwnProperty("inline_attachment_media")) {
                                properties._inline_attachment_media = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.inline_attachment_media);
                                    if (error)
                                        return "inline_attachment_media." + error;
                                }
                            }
                            if (message.inline_embed_media != null && message.hasOwnProperty("inline_embed_media")) {
                                properties._inline_embed_media = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.inline_embed_media);
                                    if (error)
                                        return "inline_embed_media." + error;
                                }
                            }
                            if (message.gif_auto_play != null && message.hasOwnProperty("gif_auto_play")) {
                                properties._gif_auto_play = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.gif_auto_play);
                                    if (error)
                                        return "gif_auto_play." + error;
                                }
                            }
                            if (message.render_embeds != null && message.hasOwnProperty("render_embeds")) {
                                properties._render_embeds = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.render_embeds);
                                    if (error)
                                        return "render_embeds." + error;
                                }
                            }
                            if (message.render_reactions != null && message.hasOwnProperty("render_reactions")) {
                                properties._render_reactions = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.render_reactions);
                                    if (error)
                                        return "render_reactions." + error;
                                }
                            }
                            if (message.animate_emoji != null && message.hasOwnProperty("animate_emoji")) {
                                properties._animate_emoji = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.animate_emoji);
                                    if (error)
                                        return "animate_emoji." + error;
                                }
                            }
                            if (message.animate_stickers != null && message.hasOwnProperty("animate_stickers")) {
                                properties._animate_stickers = 1;
                                {
                                    var error = $root.google.protobuf.UInt32Value.verify(message.animate_stickers);
                                    if (error)
                                        return "animate_stickers." + error;
                                }
                            }
                            if (message.enable_tts_command != null && message.hasOwnProperty("enable_tts_command")) {
                                properties._enable_tts_command = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.enable_tts_command);
                                    if (error)
                                        return "enable_tts_command." + error;
                                }
                            }
                            if (message.message_display_compact != null && message.hasOwnProperty("message_display_compact")) {
                                properties._message_display_compact = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.message_display_compact);
                                    if (error)
                                        return "message_display_compact." + error;
                                }
                            }
                            if (message.explicit_content_filter != null && message.hasOwnProperty("explicit_content_filter")) {
                                properties._explicit_content_filter = 1;
                                {
                                    var error = $root.google.protobuf.UInt32Value.verify(message.explicit_content_filter);
                                    if (error)
                                        return "explicit_content_filter." + error;
                                }
                            }
                            if (message.view_nsfw_guilds != null && message.hasOwnProperty("view_nsfw_guilds")) {
                                properties._view_nsfw_guilds = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.view_nsfw_guilds);
                                    if (error)
                                        return "view_nsfw_guilds." + error;
                                }
                            }
                            if (message.convert_emoticons != null && message.hasOwnProperty("convert_emoticons")) {
                                properties._convert_emoticons = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.convert_emoticons);
                                    if (error)
                                        return "convert_emoticons." + error;
                                }
                            }
                            if (message.expression_suggestions_enabled != null && message.hasOwnProperty("expression_suggestions_enabled")) {
                                properties._expression_suggestions_enabled = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.expression_suggestions_enabled);
                                    if (error)
                                        return "expression_suggestions_enabled." + error;
                                }
                            }
                            if (message.view_nsfw_commands != null && message.hasOwnProperty("view_nsfw_commands")) {
                                properties._view_nsfw_commands = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.view_nsfw_commands);
                                    if (error)
                                        return "view_nsfw_commands." + error;
                                }
                            }
                            if (message.use_legacy_chat_input != null && message.hasOwnProperty("use_legacy_chat_input")) {
                                properties._use_legacy_chat_input = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.use_legacy_chat_input);
                                    if (error)
                                        return "use_legacy_chat_input." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a TextAndImagesSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings} TextAndImagesSettings
                         */
                        TextAndImagesSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings();
                            if (object.diversity_surrogate != null) {
                                if (typeof object.diversity_surrogate !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.diversity_surrogate: object expected");
                                message.diversity_surrogate = $root.google.protobuf.StringValue.fromObject(object.diversity_surrogate);
                            }
                            if (object.use_rich_chat_input != null) {
                                if (typeof object.use_rich_chat_input !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.use_rich_chat_input: object expected");
                                message.use_rich_chat_input = $root.google.protobuf.BoolValue.fromObject(object.use_rich_chat_input);
                            }
                            if (object.use_thread_sidebar != null) {
                                if (typeof object.use_thread_sidebar !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.use_thread_sidebar: object expected");
                                message.use_thread_sidebar = $root.google.protobuf.BoolValue.fromObject(object.use_thread_sidebar);
                            }
                            if (object.render_spoilers != null) {
                                if (typeof object.render_spoilers !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.render_spoilers: object expected");
                                message.render_spoilers = $root.google.protobuf.StringValue.fromObject(object.render_spoilers);
                            }
                            if (object.emoji_picker_collapsed_sections) {
                                if (!Array.isArray(object.emoji_picker_collapsed_sections))
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.emoji_picker_collapsed_sections: array expected");
                                message.emoji_picker_collapsed_sections = [];
                                for (var i = 0; i < object.emoji_picker_collapsed_sections.length; ++i)
                                    message.emoji_picker_collapsed_sections[i] = String(object.emoji_picker_collapsed_sections[i]);
                            }
                            if (object.sticker_picker_collapsed_sections) {
                                if (!Array.isArray(object.sticker_picker_collapsed_sections))
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.sticker_picker_collapsed_sections: array expected");
                                message.sticker_picker_collapsed_sections = [];
                                for (var i = 0; i < object.sticker_picker_collapsed_sections.length; ++i)
                                    message.sticker_picker_collapsed_sections[i] = String(object.sticker_picker_collapsed_sections[i]);
                            }
                            if (object.view_image_descriptions != null) {
                                if (typeof object.view_image_descriptions !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.view_image_descriptions: object expected");
                                message.view_image_descriptions = $root.google.protobuf.BoolValue.fromObject(object.view_image_descriptions);
                            }
                            if (object.show_command_suggestions != null) {
                                if (typeof object.show_command_suggestions !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.show_command_suggestions: object expected");
                                message.show_command_suggestions = $root.google.protobuf.BoolValue.fromObject(object.show_command_suggestions);
                            }
                            if (object.inline_attachment_media != null) {
                                if (typeof object.inline_attachment_media !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.inline_attachment_media: object expected");
                                message.inline_attachment_media = $root.google.protobuf.BoolValue.fromObject(object.inline_attachment_media);
                            }
                            if (object.inline_embed_media != null) {
                                if (typeof object.inline_embed_media !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.inline_embed_media: object expected");
                                message.inline_embed_media = $root.google.protobuf.BoolValue.fromObject(object.inline_embed_media);
                            }
                            if (object.gif_auto_play != null) {
                                if (typeof object.gif_auto_play !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.gif_auto_play: object expected");
                                message.gif_auto_play = $root.google.protobuf.BoolValue.fromObject(object.gif_auto_play);
                            }
                            if (object.render_embeds != null) {
                                if (typeof object.render_embeds !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.render_embeds: object expected");
                                message.render_embeds = $root.google.protobuf.BoolValue.fromObject(object.render_embeds);
                            }
                            if (object.render_reactions != null) {
                                if (typeof object.render_reactions !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.render_reactions: object expected");
                                message.render_reactions = $root.google.protobuf.BoolValue.fromObject(object.render_reactions);
                            }
                            if (object.animate_emoji != null) {
                                if (typeof object.animate_emoji !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.animate_emoji: object expected");
                                message.animate_emoji = $root.google.protobuf.BoolValue.fromObject(object.animate_emoji);
                            }
                            if (object.animate_stickers != null) {
                                if (typeof object.animate_stickers !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.animate_stickers: object expected");
                                message.animate_stickers = $root.google.protobuf.UInt32Value.fromObject(object.animate_stickers);
                            }
                            if (object.enable_tts_command != null) {
                                if (typeof object.enable_tts_command !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.enable_tts_command: object expected");
                                message.enable_tts_command = $root.google.protobuf.BoolValue.fromObject(object.enable_tts_command);
                            }
                            if (object.message_display_compact != null) {
                                if (typeof object.message_display_compact !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.message_display_compact: object expected");
                                message.message_display_compact = $root.google.protobuf.BoolValue.fromObject(object.message_display_compact);
                            }
                            if (object.explicit_content_filter != null) {
                                if (typeof object.explicit_content_filter !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.explicit_content_filter: object expected");
                                message.explicit_content_filter = $root.google.protobuf.UInt32Value.fromObject(object.explicit_content_filter);
                            }
                            if (object.view_nsfw_guilds != null) {
                                if (typeof object.view_nsfw_guilds !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.view_nsfw_guilds: object expected");
                                message.view_nsfw_guilds = $root.google.protobuf.BoolValue.fromObject(object.view_nsfw_guilds);
                            }
                            if (object.convert_emoticons != null) {
                                if (typeof object.convert_emoticons !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.convert_emoticons: object expected");
                                message.convert_emoticons = $root.google.protobuf.BoolValue.fromObject(object.convert_emoticons);
                            }
                            if (object.expression_suggestions_enabled != null) {
                                if (typeof object.expression_suggestions_enabled !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.expression_suggestions_enabled: object expected");
                                message.expression_suggestions_enabled = $root.google.protobuf.BoolValue.fromObject(object.expression_suggestions_enabled);
                            }
                            if (object.view_nsfw_commands != null) {
                                if (typeof object.view_nsfw_commands !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.view_nsfw_commands: object expected");
                                message.view_nsfw_commands = $root.google.protobuf.BoolValue.fromObject(object.view_nsfw_commands);
                            }
                            if (object.use_legacy_chat_input != null) {
                                if (typeof object.use_legacy_chat_input !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings.use_legacy_chat_input: object expected");
                                message.use_legacy_chat_input = $root.google.protobuf.BoolValue.fromObject(object.use_legacy_chat_input);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a TextAndImagesSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings} message TextAndImagesSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        TextAndImagesSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.emoji_picker_collapsed_sections = [];
                                object.sticker_picker_collapsed_sections = [];
                            }
                            if (message.diversity_surrogate != null && message.hasOwnProperty("diversity_surrogate")) {
                                object.diversity_surrogate = $root.google.protobuf.StringValue.toObject(message.diversity_surrogate, options);
                                if (options.oneofs)
                                    object._diversity_surrogate = "diversity_surrogate";
                            }
                            if (message.use_rich_chat_input != null && message.hasOwnProperty("use_rich_chat_input")) {
                                object.use_rich_chat_input = $root.google.protobuf.BoolValue.toObject(message.use_rich_chat_input, options);
                                if (options.oneofs)
                                    object._use_rich_chat_input = "use_rich_chat_input";
                            }
                            if (message.use_thread_sidebar != null && message.hasOwnProperty("use_thread_sidebar")) {
                                object.use_thread_sidebar = $root.google.protobuf.BoolValue.toObject(message.use_thread_sidebar, options);
                                if (options.oneofs)
                                    object._use_thread_sidebar = "use_thread_sidebar";
                            }
                            if (message.render_spoilers != null && message.hasOwnProperty("render_spoilers")) {
                                object.render_spoilers = $root.google.protobuf.StringValue.toObject(message.render_spoilers, options);
                                if (options.oneofs)
                                    object._render_spoilers = "render_spoilers";
                            }
                            if (message.emoji_picker_collapsed_sections && message.emoji_picker_collapsed_sections.length) {
                                object.emoji_picker_collapsed_sections = [];
                                for (var j = 0; j < message.emoji_picker_collapsed_sections.length; ++j)
                                    object.emoji_picker_collapsed_sections[j] = message.emoji_picker_collapsed_sections[j];
                            }
                            if (message.sticker_picker_collapsed_sections && message.sticker_picker_collapsed_sections.length) {
                                object.sticker_picker_collapsed_sections = [];
                                for (var j = 0; j < message.sticker_picker_collapsed_sections.length; ++j)
                                    object.sticker_picker_collapsed_sections[j] = message.sticker_picker_collapsed_sections[j];
                            }
                            if (message.view_image_descriptions != null && message.hasOwnProperty("view_image_descriptions")) {
                                object.view_image_descriptions = $root.google.protobuf.BoolValue.toObject(message.view_image_descriptions, options);
                                if (options.oneofs)
                                    object._view_image_descriptions = "view_image_descriptions";
                            }
                            if (message.show_command_suggestions != null && message.hasOwnProperty("show_command_suggestions")) {
                                object.show_command_suggestions = $root.google.protobuf.BoolValue.toObject(message.show_command_suggestions, options);
                                if (options.oneofs)
                                    object._show_command_suggestions = "show_command_suggestions";
                            }
                            if (message.inline_attachment_media != null && message.hasOwnProperty("inline_attachment_media")) {
                                object.inline_attachment_media = $root.google.protobuf.BoolValue.toObject(message.inline_attachment_media, options);
                                if (options.oneofs)
                                    object._inline_attachment_media = "inline_attachment_media";
                            }
                            if (message.inline_embed_media != null && message.hasOwnProperty("inline_embed_media")) {
                                object.inline_embed_media = $root.google.protobuf.BoolValue.toObject(message.inline_embed_media, options);
                                if (options.oneofs)
                                    object._inline_embed_media = "inline_embed_media";
                            }
                            if (message.gif_auto_play != null && message.hasOwnProperty("gif_auto_play")) {
                                object.gif_auto_play = $root.google.protobuf.BoolValue.toObject(message.gif_auto_play, options);
                                if (options.oneofs)
                                    object._gif_auto_play = "gif_auto_play";
                            }
                            if (message.render_embeds != null && message.hasOwnProperty("render_embeds")) {
                                object.render_embeds = $root.google.protobuf.BoolValue.toObject(message.render_embeds, options);
                                if (options.oneofs)
                                    object._render_embeds = "render_embeds";
                            }
                            if (message.render_reactions != null && message.hasOwnProperty("render_reactions")) {
                                object.render_reactions = $root.google.protobuf.BoolValue.toObject(message.render_reactions, options);
                                if (options.oneofs)
                                    object._render_reactions = "render_reactions";
                            }
                            if (message.animate_emoji != null && message.hasOwnProperty("animate_emoji")) {
                                object.animate_emoji = $root.google.protobuf.BoolValue.toObject(message.animate_emoji, options);
                                if (options.oneofs)
                                    object._animate_emoji = "animate_emoji";
                            }
                            if (message.animate_stickers != null && message.hasOwnProperty("animate_stickers")) {
                                object.animate_stickers = $root.google.protobuf.UInt32Value.toObject(message.animate_stickers, options);
                                if (options.oneofs)
                                    object._animate_stickers = "animate_stickers";
                            }
                            if (message.enable_tts_command != null && message.hasOwnProperty("enable_tts_command")) {
                                object.enable_tts_command = $root.google.protobuf.BoolValue.toObject(message.enable_tts_command, options);
                                if (options.oneofs)
                                    object._enable_tts_command = "enable_tts_command";
                            }
                            if (message.message_display_compact != null && message.hasOwnProperty("message_display_compact")) {
                                object.message_display_compact = $root.google.protobuf.BoolValue.toObject(message.message_display_compact, options);
                                if (options.oneofs)
                                    object._message_display_compact = "message_display_compact";
                            }
                            if (message.explicit_content_filter != null && message.hasOwnProperty("explicit_content_filter")) {
                                object.explicit_content_filter = $root.google.protobuf.UInt32Value.toObject(message.explicit_content_filter, options);
                                if (options.oneofs)
                                    object._explicit_content_filter = "explicit_content_filter";
                            }
                            if (message.view_nsfw_guilds != null && message.hasOwnProperty("view_nsfw_guilds")) {
                                object.view_nsfw_guilds = $root.google.protobuf.BoolValue.toObject(message.view_nsfw_guilds, options);
                                if (options.oneofs)
                                    object._view_nsfw_guilds = "view_nsfw_guilds";
                            }
                            if (message.convert_emoticons != null && message.hasOwnProperty("convert_emoticons")) {
                                object.convert_emoticons = $root.google.protobuf.BoolValue.toObject(message.convert_emoticons, options);
                                if (options.oneofs)
                                    object._convert_emoticons = "convert_emoticons";
                            }
                            if (message.expression_suggestions_enabled != null && message.hasOwnProperty("expression_suggestions_enabled")) {
                                object.expression_suggestions_enabled = $root.google.protobuf.BoolValue.toObject(message.expression_suggestions_enabled, options);
                                if (options.oneofs)
                                    object._expression_suggestions_enabled = "expression_suggestions_enabled";
                            }
                            if (message.view_nsfw_commands != null && message.hasOwnProperty("view_nsfw_commands")) {
                                object.view_nsfw_commands = $root.google.protobuf.BoolValue.toObject(message.view_nsfw_commands, options);
                                if (options.oneofs)
                                    object._view_nsfw_commands = "view_nsfw_commands";
                            }
                            if (message.use_legacy_chat_input != null && message.hasOwnProperty("use_legacy_chat_input")) {
                                object.use_legacy_chat_input = $root.google.protobuf.BoolValue.toObject(message.use_legacy_chat_input, options);
                                if (options.oneofs)
                                    object._use_legacy_chat_input = "use_legacy_chat_input";
                            }
                            return object;
                        };

                        /**
                         * Converts this TextAndImagesSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        TextAndImagesSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for TextAndImagesSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        TextAndImagesSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.TextAndImagesSettings";
                        };

                        return TextAndImagesSettings;
                    })();

                    PreloadedUserSettings.NotificationSettings = (function() {

                        /**
                         * Properties of a NotificationSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface INotificationSettings
                         * @property {google.protobuf.IBoolValue|null} [show_in_app_notifications] NotificationSettings show_in_app_notifications
                         * @property {google.protobuf.IBoolValue|null} [notify_friends_on_go_live] NotificationSettings notify_friends_on_go_live
                         * @property {number|Long|null} [notification_center_acked_before_id] NotificationSettings notification_center_acked_before_id
                         */

                        /**
                         * Constructs a new NotificationSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a NotificationSettings.
                         * @implements INotificationSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.INotificationSettings=} [properties] Properties to set
                         */
                        function NotificationSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * NotificationSettings show_in_app_notifications.
                         * @member {google.protobuf.IBoolValue|null|undefined} show_in_app_notifications
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @instance
                         */
                        NotificationSettings.prototype.show_in_app_notifications = null;

                        /**
                         * NotificationSettings notify_friends_on_go_live.
                         * @member {google.protobuf.IBoolValue|null|undefined} notify_friends_on_go_live
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @instance
                         */
                        NotificationSettings.prototype.notify_friends_on_go_live = null;

                        /**
                         * NotificationSettings notification_center_acked_before_id.
                         * @member {number|Long} notification_center_acked_before_id
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @instance
                         */
                        NotificationSettings.prototype.notification_center_acked_before_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * NotificationSettings _show_in_app_notifications.
                         * @member {"show_in_app_notifications"|undefined} _show_in_app_notifications
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @instance
                         */
                        Object.defineProperty(NotificationSettings.prototype, "_show_in_app_notifications", {
                            get: $util.oneOfGetter($oneOfFields = ["show_in_app_notifications"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * NotificationSettings _notify_friends_on_go_live.
                         * @member {"notify_friends_on_go_live"|undefined} _notify_friends_on_go_live
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @instance
                         */
                        Object.defineProperty(NotificationSettings.prototype, "_notify_friends_on_go_live", {
                            get: $util.oneOfGetter($oneOfFields = ["notify_friends_on_go_live"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new NotificationSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.INotificationSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings} NotificationSettings instance
                         */
                        NotificationSettings.create = function create(properties) {
                            return new NotificationSettings(properties);
                        };

                        /**
                         * Encodes the specified NotificationSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.INotificationSettings} message NotificationSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NotificationSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.show_in_app_notifications != null && Object.hasOwnProperty.call(message, "show_in_app_notifications"))
                                $root.google.protobuf.BoolValue.encode(message.show_in_app_notifications, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.notify_friends_on_go_live != null && Object.hasOwnProperty.call(message, "notify_friends_on_go_live"))
                                $root.google.protobuf.BoolValue.encode(message.notify_friends_on_go_live, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.notification_center_acked_before_id != null && Object.hasOwnProperty.call(message, "notification_center_acked_before_id"))
                                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.notification_center_acked_before_id);
                            return writer;
                        };

                        /**
                         * Encodes the specified NotificationSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.INotificationSettings} message NotificationSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        NotificationSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a NotificationSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings} NotificationSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NotificationSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.show_in_app_notifications = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.notify_friends_on_go_live = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.notification_center_acked_before_id = reader.fixed64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a NotificationSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings} NotificationSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        NotificationSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a NotificationSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        NotificationSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.show_in_app_notifications != null && message.hasOwnProperty("show_in_app_notifications")) {
                                properties._show_in_app_notifications = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.show_in_app_notifications);
                                    if (error)
                                        return "show_in_app_notifications." + error;
                                }
                            }
                            if (message.notify_friends_on_go_live != null && message.hasOwnProperty("notify_friends_on_go_live")) {
                                properties._notify_friends_on_go_live = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.notify_friends_on_go_live);
                                    if (error)
                                        return "notify_friends_on_go_live." + error;
                                }
                            }
                            if (message.notification_center_acked_before_id != null && message.hasOwnProperty("notification_center_acked_before_id"))
                                if (!$util.isInteger(message.notification_center_acked_before_id) && !(message.notification_center_acked_before_id && $util.isInteger(message.notification_center_acked_before_id.low) && $util.isInteger(message.notification_center_acked_before_id.high)))
                                    return "notification_center_acked_before_id: integer|Long expected";
                            return null;
                        };

                        /**
                         * Creates a NotificationSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings} NotificationSettings
                         */
                        NotificationSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings();
                            if (object.show_in_app_notifications != null) {
                                if (typeof object.show_in_app_notifications !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings.show_in_app_notifications: object expected");
                                message.show_in_app_notifications = $root.google.protobuf.BoolValue.fromObject(object.show_in_app_notifications);
                            }
                            if (object.notify_friends_on_go_live != null) {
                                if (typeof object.notify_friends_on_go_live !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings.notify_friends_on_go_live: object expected");
                                message.notify_friends_on_go_live = $root.google.protobuf.BoolValue.fromObject(object.notify_friends_on_go_live);
                            }
                            if (object.notification_center_acked_before_id != null)
                                if ($util.Long)
                                    (message.notification_center_acked_before_id = $util.Long.fromValue(object.notification_center_acked_before_id)).unsigned = false;
                                else if (typeof object.notification_center_acked_before_id === "string")
                                    message.notification_center_acked_before_id = parseInt(object.notification_center_acked_before_id, 10);
                                else if (typeof object.notification_center_acked_before_id === "number")
                                    message.notification_center_acked_before_id = object.notification_center_acked_before_id;
                                else if (typeof object.notification_center_acked_before_id === "object")
                                    message.notification_center_acked_before_id = new $util.LongBits(object.notification_center_acked_before_id.low >>> 0, object.notification_center_acked_before_id.high >>> 0).toNumber();
                            return message;
                        };

                        /**
                         * Creates a plain object from a NotificationSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings} message NotificationSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        NotificationSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults)
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.notification_center_acked_before_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.notification_center_acked_before_id = options.longs === String ? "0" : 0;
                            if (message.show_in_app_notifications != null && message.hasOwnProperty("show_in_app_notifications")) {
                                object.show_in_app_notifications = $root.google.protobuf.BoolValue.toObject(message.show_in_app_notifications, options);
                                if (options.oneofs)
                                    object._show_in_app_notifications = "show_in_app_notifications";
                            }
                            if (message.notify_friends_on_go_live != null && message.hasOwnProperty("notify_friends_on_go_live")) {
                                object.notify_friends_on_go_live = $root.google.protobuf.BoolValue.toObject(message.notify_friends_on_go_live, options);
                                if (options.oneofs)
                                    object._notify_friends_on_go_live = "notify_friends_on_go_live";
                            }
                            if (message.notification_center_acked_before_id != null && message.hasOwnProperty("notification_center_acked_before_id"))
                                if (typeof message.notification_center_acked_before_id === "number")
                                    object.notification_center_acked_before_id = options.longs === String ? String(message.notification_center_acked_before_id) : message.notification_center_acked_before_id;
                                else
                                    object.notification_center_acked_before_id = options.longs === String ? $util.Long.prototype.toString.call(message.notification_center_acked_before_id) : options.longs === Number ? new $util.LongBits(message.notification_center_acked_before_id.low >>> 0, message.notification_center_acked_before_id.high >>> 0).toNumber() : message.notification_center_acked_before_id;
                            return object;
                        };

                        /**
                         * Converts this NotificationSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        NotificationSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for NotificationSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        NotificationSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.NotificationSettings";
                        };

                        return NotificationSettings;
                    })();

                    /**
                     * GuildActivityStatusRestrictionDefault enum.
                     * @name discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildActivityStatusRestrictionDefault
                     * @enum {number}
                     * @property {number} OFF=0 OFF value
                     * @property {number} ON_FOR_LARGE_GUILDS=1 ON_FOR_LARGE_GUILDS value
                     */
                    PreloadedUserSettings.GuildActivityStatusRestrictionDefault = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "OFF"] = 0;
                        values[valuesById[1] = "ON_FOR_LARGE_GUILDS"] = 1;
                        return values;
                    })();

                    PreloadedUserSettings.PrivacySettings = (function() {

                        /**
                         * Properties of a PrivacySettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IPrivacySettings
                         * @property {google.protobuf.IBoolValue|null} [allow_activity_party_privacy_friends] PrivacySettings allow_activity_party_privacy_friends
                         * @property {google.protobuf.IBoolValue|null} [allow_activity_party_privacy_voice_channel] PrivacySettings allow_activity_party_privacy_voice_channel
                         * @property {Array.<number|Long>|null} [restricted_guild_ids] PrivacySettings restricted_guild_ids
                         * @property {boolean|null} [default_guilds_restricted] PrivacySettings default_guilds_restricted
                         * @property {boolean|null} [allow_accessibility_detection] PrivacySettings allow_accessibility_detection
                         * @property {google.protobuf.IBoolValue|null} [detect_platform_accounts] PrivacySettings detect_platform_accounts
                         * @property {google.protobuf.IBoolValue|null} [passwordless] PrivacySettings passwordless
                         * @property {google.protobuf.IBoolValue|null} [contact_sync_enabled] PrivacySettings contact_sync_enabled
                         * @property {google.protobuf.IUInt32Value|null} [friend_source_flags] PrivacySettings friend_source_flags
                         * @property {google.protobuf.IUInt32Value|null} [friend_discovery_flags] PrivacySettings friend_discovery_flags
                         * @property {Array.<number|Long>|null} [activity_restricted_guild_ids] PrivacySettings activity_restricted_guild_ids
                         * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildActivityStatusRestrictionDefault|null} [default_guilds_activity_restricted] PrivacySettings default_guilds_activity_restricted
                         * @property {Array.<number|Long>|null} [activity_joining_restricted_guild_ids] PrivacySettings activity_joining_restricted_guild_ids
                         * @property {Array.<number|Long>|null} [message_request_restricted_guild_ids] PrivacySettings message_request_restricted_guild_ids
                         * @property {google.protobuf.IBoolValue|null} [default_message_request_restricted] PrivacySettings default_message_request_restricted
                         * @property {google.protobuf.IBoolValue|null} [drops_opted_out] PrivacySettings drops_opted_out
                         * @property {google.protobuf.IBoolValue|null} [non_spam_retraining_opt_in] PrivacySettings non_spam_retraining_opt_in
                         */

                        /**
                         * Constructs a new PrivacySettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a PrivacySettings.
                         * @implements IPrivacySettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IPrivacySettings=} [properties] Properties to set
                         */
                        function PrivacySettings(properties) {
                            this.restricted_guild_ids = [];
                            this.activity_restricted_guild_ids = [];
                            this.activity_joining_restricted_guild_ids = [];
                            this.message_request_restricted_guild_ids = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * PrivacySettings allow_activity_party_privacy_friends.
                         * @member {google.protobuf.IBoolValue|null|undefined} allow_activity_party_privacy_friends
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.allow_activity_party_privacy_friends = null;

                        /**
                         * PrivacySettings allow_activity_party_privacy_voice_channel.
                         * @member {google.protobuf.IBoolValue|null|undefined} allow_activity_party_privacy_voice_channel
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.allow_activity_party_privacy_voice_channel = null;

                        /**
                         * PrivacySettings restricted_guild_ids.
                         * @member {Array.<number|Long>} restricted_guild_ids
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.restricted_guild_ids = $util.emptyArray;

                        /**
                         * PrivacySettings default_guilds_restricted.
                         * @member {boolean} default_guilds_restricted
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.default_guilds_restricted = false;

                        /**
                         * PrivacySettings allow_accessibility_detection.
                         * @member {boolean} allow_accessibility_detection
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.allow_accessibility_detection = false;

                        /**
                         * PrivacySettings detect_platform_accounts.
                         * @member {google.protobuf.IBoolValue|null|undefined} detect_platform_accounts
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.detect_platform_accounts = null;

                        /**
                         * PrivacySettings passwordless.
                         * @member {google.protobuf.IBoolValue|null|undefined} passwordless
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.passwordless = null;

                        /**
                         * PrivacySettings contact_sync_enabled.
                         * @member {google.protobuf.IBoolValue|null|undefined} contact_sync_enabled
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.contact_sync_enabled = null;

                        /**
                         * PrivacySettings friend_source_flags.
                         * @member {google.protobuf.IUInt32Value|null|undefined} friend_source_flags
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.friend_source_flags = null;

                        /**
                         * PrivacySettings friend_discovery_flags.
                         * @member {google.protobuf.IUInt32Value|null|undefined} friend_discovery_flags
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.friend_discovery_flags = null;

                        /**
                         * PrivacySettings activity_restricted_guild_ids.
                         * @member {Array.<number|Long>} activity_restricted_guild_ids
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.activity_restricted_guild_ids = $util.emptyArray;

                        /**
                         * PrivacySettings default_guilds_activity_restricted.
                         * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildActivityStatusRestrictionDefault} default_guilds_activity_restricted
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.default_guilds_activity_restricted = 0;

                        /**
                         * PrivacySettings activity_joining_restricted_guild_ids.
                         * @member {Array.<number|Long>} activity_joining_restricted_guild_ids
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.activity_joining_restricted_guild_ids = $util.emptyArray;

                        /**
                         * PrivacySettings message_request_restricted_guild_ids.
                         * @member {Array.<number|Long>} message_request_restricted_guild_ids
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.message_request_restricted_guild_ids = $util.emptyArray;

                        /**
                         * PrivacySettings default_message_request_restricted.
                         * @member {google.protobuf.IBoolValue|null|undefined} default_message_request_restricted
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.default_message_request_restricted = null;

                        /**
                         * PrivacySettings drops_opted_out.
                         * @member {google.protobuf.IBoolValue|null|undefined} drops_opted_out
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.drops_opted_out = null;

                        /**
                         * PrivacySettings non_spam_retraining_opt_in.
                         * @member {google.protobuf.IBoolValue|null|undefined} non_spam_retraining_opt_in
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        PrivacySettings.prototype.non_spam_retraining_opt_in = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * PrivacySettings _allow_activity_party_privacy_friends.
                         * @member {"allow_activity_party_privacy_friends"|undefined} _allow_activity_party_privacy_friends
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        Object.defineProperty(PrivacySettings.prototype, "_allow_activity_party_privacy_friends", {
                            get: $util.oneOfGetter($oneOfFields = ["allow_activity_party_privacy_friends"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * PrivacySettings _allow_activity_party_privacy_voice_channel.
                         * @member {"allow_activity_party_privacy_voice_channel"|undefined} _allow_activity_party_privacy_voice_channel
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        Object.defineProperty(PrivacySettings.prototype, "_allow_activity_party_privacy_voice_channel", {
                            get: $util.oneOfGetter($oneOfFields = ["allow_activity_party_privacy_voice_channel"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * PrivacySettings _detect_platform_accounts.
                         * @member {"detect_platform_accounts"|undefined} _detect_platform_accounts
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        Object.defineProperty(PrivacySettings.prototype, "_detect_platform_accounts", {
                            get: $util.oneOfGetter($oneOfFields = ["detect_platform_accounts"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * PrivacySettings _passwordless.
                         * @member {"passwordless"|undefined} _passwordless
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        Object.defineProperty(PrivacySettings.prototype, "_passwordless", {
                            get: $util.oneOfGetter($oneOfFields = ["passwordless"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * PrivacySettings _contact_sync_enabled.
                         * @member {"contact_sync_enabled"|undefined} _contact_sync_enabled
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        Object.defineProperty(PrivacySettings.prototype, "_contact_sync_enabled", {
                            get: $util.oneOfGetter($oneOfFields = ["contact_sync_enabled"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * PrivacySettings _friend_source_flags.
                         * @member {"friend_source_flags"|undefined} _friend_source_flags
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        Object.defineProperty(PrivacySettings.prototype, "_friend_source_flags", {
                            get: $util.oneOfGetter($oneOfFields = ["friend_source_flags"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * PrivacySettings _friend_discovery_flags.
                         * @member {"friend_discovery_flags"|undefined} _friend_discovery_flags
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        Object.defineProperty(PrivacySettings.prototype, "_friend_discovery_flags", {
                            get: $util.oneOfGetter($oneOfFields = ["friend_discovery_flags"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * PrivacySettings _default_message_request_restricted.
                         * @member {"default_message_request_restricted"|undefined} _default_message_request_restricted
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        Object.defineProperty(PrivacySettings.prototype, "_default_message_request_restricted", {
                            get: $util.oneOfGetter($oneOfFields = ["default_message_request_restricted"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * PrivacySettings _drops_opted_out.
                         * @member {"drops_opted_out"|undefined} _drops_opted_out
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        Object.defineProperty(PrivacySettings.prototype, "_drops_opted_out", {
                            get: $util.oneOfGetter($oneOfFields = ["drops_opted_out"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * PrivacySettings _non_spam_retraining_opt_in.
                         * @member {"non_spam_retraining_opt_in"|undefined} _non_spam_retraining_opt_in
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         */
                        Object.defineProperty(PrivacySettings.prototype, "_non_spam_retraining_opt_in", {
                            get: $util.oneOfGetter($oneOfFields = ["non_spam_retraining_opt_in"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new PrivacySettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IPrivacySettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings} PrivacySettings instance
                         */
                        PrivacySettings.create = function create(properties) {
                            return new PrivacySettings(properties);
                        };

                        /**
                         * Encodes the specified PrivacySettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IPrivacySettings} message PrivacySettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivacySettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.allow_activity_party_privacy_friends != null && Object.hasOwnProperty.call(message, "allow_activity_party_privacy_friends"))
                                $root.google.protobuf.BoolValue.encode(message.allow_activity_party_privacy_friends, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.allow_activity_party_privacy_voice_channel != null && Object.hasOwnProperty.call(message, "allow_activity_party_privacy_voice_channel"))
                                $root.google.protobuf.BoolValue.encode(message.allow_activity_party_privacy_voice_channel, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.restricted_guild_ids != null && message.restricted_guild_ids.length) {
                                writer.uint32(/* id 3, wireType 2 =*/26).fork();
                                for (var i = 0; i < message.restricted_guild_ids.length; ++i)
                                    writer.fixed64(message.restricted_guild_ids[i]);
                                writer.ldelim();
                            }
                            if (message.default_guilds_restricted != null && Object.hasOwnProperty.call(message, "default_guilds_restricted"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.default_guilds_restricted);
                            if (message.allow_accessibility_detection != null && Object.hasOwnProperty.call(message, "allow_accessibility_detection"))
                                writer.uint32(/* id 7, wireType 0 =*/56).bool(message.allow_accessibility_detection);
                            if (message.detect_platform_accounts != null && Object.hasOwnProperty.call(message, "detect_platform_accounts"))
                                $root.google.protobuf.BoolValue.encode(message.detect_platform_accounts, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();
                            if (message.passwordless != null && Object.hasOwnProperty.call(message, "passwordless"))
                                $root.google.protobuf.BoolValue.encode(message.passwordless, writer.uint32(/* id 9, wireType 2 =*/74).fork()).ldelim();
                            if (message.contact_sync_enabled != null && Object.hasOwnProperty.call(message, "contact_sync_enabled"))
                                $root.google.protobuf.BoolValue.encode(message.contact_sync_enabled, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();
                            if (message.friend_source_flags != null && Object.hasOwnProperty.call(message, "friend_source_flags"))
                                $root.google.protobuf.UInt32Value.encode(message.friend_source_flags, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();
                            if (message.friend_discovery_flags != null && Object.hasOwnProperty.call(message, "friend_discovery_flags"))
                                $root.google.protobuf.UInt32Value.encode(message.friend_discovery_flags, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();
                            if (message.activity_restricted_guild_ids != null && message.activity_restricted_guild_ids.length) {
                                writer.uint32(/* id 13, wireType 2 =*/106).fork();
                                for (var i = 0; i < message.activity_restricted_guild_ids.length; ++i)
                                    writer.fixed64(message.activity_restricted_guild_ids[i]);
                                writer.ldelim();
                            }
                            if (message.default_guilds_activity_restricted != null && Object.hasOwnProperty.call(message, "default_guilds_activity_restricted"))
                                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.default_guilds_activity_restricted);
                            if (message.activity_joining_restricted_guild_ids != null && message.activity_joining_restricted_guild_ids.length) {
                                writer.uint32(/* id 15, wireType 2 =*/122).fork();
                                for (var i = 0; i < message.activity_joining_restricted_guild_ids.length; ++i)
                                    writer.fixed64(message.activity_joining_restricted_guild_ids[i]);
                                writer.ldelim();
                            }
                            if (message.message_request_restricted_guild_ids != null && message.message_request_restricted_guild_ids.length) {
                                writer.uint32(/* id 16, wireType 2 =*/130).fork();
                                for (var i = 0; i < message.message_request_restricted_guild_ids.length; ++i)
                                    writer.fixed64(message.message_request_restricted_guild_ids[i]);
                                writer.ldelim();
                            }
                            if (message.default_message_request_restricted != null && Object.hasOwnProperty.call(message, "default_message_request_restricted"))
                                $root.google.protobuf.BoolValue.encode(message.default_message_request_restricted, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();
                            if (message.drops_opted_out != null && Object.hasOwnProperty.call(message, "drops_opted_out"))
                                $root.google.protobuf.BoolValue.encode(message.drops_opted_out, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();
                            if (message.non_spam_retraining_opt_in != null && Object.hasOwnProperty.call(message, "non_spam_retraining_opt_in"))
                                $root.google.protobuf.BoolValue.encode(message.non_spam_retraining_opt_in, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified PrivacySettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IPrivacySettings} message PrivacySettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        PrivacySettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a PrivacySettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings} PrivacySettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivacySettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.allow_activity_party_privacy_friends = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.allow_activity_party_privacy_voice_channel = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        if (!(message.restricted_guild_ids && message.restricted_guild_ids.length))
                                            message.restricted_guild_ids = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.restricted_guild_ids.push(reader.fixed64());
                                        } else
                                            message.restricted_guild_ids.push(reader.fixed64());
                                        break;
                                    }
                                case 4: {
                                        message.default_guilds_restricted = reader.bool();
                                        break;
                                    }
                                case 7: {
                                        message.allow_accessibility_detection = reader.bool();
                                        break;
                                    }
                                case 8: {
                                        message.detect_platform_accounts = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 9: {
                                        message.passwordless = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 10: {
                                        message.contact_sync_enabled = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 11: {
                                        message.friend_source_flags = $root.google.protobuf.UInt32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 12: {
                                        message.friend_discovery_flags = $root.google.protobuf.UInt32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 13: {
                                        if (!(message.activity_restricted_guild_ids && message.activity_restricted_guild_ids.length))
                                            message.activity_restricted_guild_ids = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.activity_restricted_guild_ids.push(reader.fixed64());
                                        } else
                                            message.activity_restricted_guild_ids.push(reader.fixed64());
                                        break;
                                    }
                                case 14: {
                                        message.default_guilds_activity_restricted = reader.int32();
                                        break;
                                    }
                                case 15: {
                                        if (!(message.activity_joining_restricted_guild_ids && message.activity_joining_restricted_guild_ids.length))
                                            message.activity_joining_restricted_guild_ids = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.activity_joining_restricted_guild_ids.push(reader.fixed64());
                                        } else
                                            message.activity_joining_restricted_guild_ids.push(reader.fixed64());
                                        break;
                                    }
                                case 16: {
                                        if (!(message.message_request_restricted_guild_ids && message.message_request_restricted_guild_ids.length))
                                            message.message_request_restricted_guild_ids = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.message_request_restricted_guild_ids.push(reader.fixed64());
                                        } else
                                            message.message_request_restricted_guild_ids.push(reader.fixed64());
                                        break;
                                    }
                                case 17: {
                                        message.default_message_request_restricted = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 18: {
                                        message.drops_opted_out = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 19: {
                                        message.non_spam_retraining_opt_in = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a PrivacySettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings} PrivacySettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        PrivacySettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a PrivacySettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        PrivacySettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.allow_activity_party_privacy_friends != null && message.hasOwnProperty("allow_activity_party_privacy_friends")) {
                                properties._allow_activity_party_privacy_friends = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.allow_activity_party_privacy_friends);
                                    if (error)
                                        return "allow_activity_party_privacy_friends." + error;
                                }
                            }
                            if (message.allow_activity_party_privacy_voice_channel != null && message.hasOwnProperty("allow_activity_party_privacy_voice_channel")) {
                                properties._allow_activity_party_privacy_voice_channel = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.allow_activity_party_privacy_voice_channel);
                                    if (error)
                                        return "allow_activity_party_privacy_voice_channel." + error;
                                }
                            }
                            if (message.restricted_guild_ids != null && message.hasOwnProperty("restricted_guild_ids")) {
                                if (!Array.isArray(message.restricted_guild_ids))
                                    return "restricted_guild_ids: array expected";
                                for (var i = 0; i < message.restricted_guild_ids.length; ++i)
                                    if (!$util.isInteger(message.restricted_guild_ids[i]) && !(message.restricted_guild_ids[i] && $util.isInteger(message.restricted_guild_ids[i].low) && $util.isInteger(message.restricted_guild_ids[i].high)))
                                        return "restricted_guild_ids: integer|Long[] expected";
                            }
                            if (message.default_guilds_restricted != null && message.hasOwnProperty("default_guilds_restricted"))
                                if (typeof message.default_guilds_restricted !== "boolean")
                                    return "default_guilds_restricted: boolean expected";
                            if (message.allow_accessibility_detection != null && message.hasOwnProperty("allow_accessibility_detection"))
                                if (typeof message.allow_accessibility_detection !== "boolean")
                                    return "allow_accessibility_detection: boolean expected";
                            if (message.detect_platform_accounts != null && message.hasOwnProperty("detect_platform_accounts")) {
                                properties._detect_platform_accounts = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.detect_platform_accounts);
                                    if (error)
                                        return "detect_platform_accounts." + error;
                                }
                            }
                            if (message.passwordless != null && message.hasOwnProperty("passwordless")) {
                                properties._passwordless = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.passwordless);
                                    if (error)
                                        return "passwordless." + error;
                                }
                            }
                            if (message.contact_sync_enabled != null && message.hasOwnProperty("contact_sync_enabled")) {
                                properties._contact_sync_enabled = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.contact_sync_enabled);
                                    if (error)
                                        return "contact_sync_enabled." + error;
                                }
                            }
                            if (message.friend_source_flags != null && message.hasOwnProperty("friend_source_flags")) {
                                properties._friend_source_flags = 1;
                                {
                                    var error = $root.google.protobuf.UInt32Value.verify(message.friend_source_flags);
                                    if (error)
                                        return "friend_source_flags." + error;
                                }
                            }
                            if (message.friend_discovery_flags != null && message.hasOwnProperty("friend_discovery_flags")) {
                                properties._friend_discovery_flags = 1;
                                {
                                    var error = $root.google.protobuf.UInt32Value.verify(message.friend_discovery_flags);
                                    if (error)
                                        return "friend_discovery_flags." + error;
                                }
                            }
                            if (message.activity_restricted_guild_ids != null && message.hasOwnProperty("activity_restricted_guild_ids")) {
                                if (!Array.isArray(message.activity_restricted_guild_ids))
                                    return "activity_restricted_guild_ids: array expected";
                                for (var i = 0; i < message.activity_restricted_guild_ids.length; ++i)
                                    if (!$util.isInteger(message.activity_restricted_guild_ids[i]) && !(message.activity_restricted_guild_ids[i] && $util.isInteger(message.activity_restricted_guild_ids[i].low) && $util.isInteger(message.activity_restricted_guild_ids[i].high)))
                                        return "activity_restricted_guild_ids: integer|Long[] expected";
                            }
                            if (message.default_guilds_activity_restricted != null && message.hasOwnProperty("default_guilds_activity_restricted"))
                                switch (message.default_guilds_activity_restricted) {
                                default:
                                    return "default_guilds_activity_restricted: enum value expected";
                                case 0:
                                case 1:
                                    break;
                                }
                            if (message.activity_joining_restricted_guild_ids != null && message.hasOwnProperty("activity_joining_restricted_guild_ids")) {
                                if (!Array.isArray(message.activity_joining_restricted_guild_ids))
                                    return "activity_joining_restricted_guild_ids: array expected";
                                for (var i = 0; i < message.activity_joining_restricted_guild_ids.length; ++i)
                                    if (!$util.isInteger(message.activity_joining_restricted_guild_ids[i]) && !(message.activity_joining_restricted_guild_ids[i] && $util.isInteger(message.activity_joining_restricted_guild_ids[i].low) && $util.isInteger(message.activity_joining_restricted_guild_ids[i].high)))
                                        return "activity_joining_restricted_guild_ids: integer|Long[] expected";
                            }
                            if (message.message_request_restricted_guild_ids != null && message.hasOwnProperty("message_request_restricted_guild_ids")) {
                                if (!Array.isArray(message.message_request_restricted_guild_ids))
                                    return "message_request_restricted_guild_ids: array expected";
                                for (var i = 0; i < message.message_request_restricted_guild_ids.length; ++i)
                                    if (!$util.isInteger(message.message_request_restricted_guild_ids[i]) && !(message.message_request_restricted_guild_ids[i] && $util.isInteger(message.message_request_restricted_guild_ids[i].low) && $util.isInteger(message.message_request_restricted_guild_ids[i].high)))
                                        return "message_request_restricted_guild_ids: integer|Long[] expected";
                            }
                            if (message.default_message_request_restricted != null && message.hasOwnProperty("default_message_request_restricted")) {
                                properties._default_message_request_restricted = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.default_message_request_restricted);
                                    if (error)
                                        return "default_message_request_restricted." + error;
                                }
                            }
                            if (message.drops_opted_out != null && message.hasOwnProperty("drops_opted_out")) {
                                properties._drops_opted_out = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.drops_opted_out);
                                    if (error)
                                        return "drops_opted_out." + error;
                                }
                            }
                            if (message.non_spam_retraining_opt_in != null && message.hasOwnProperty("non_spam_retraining_opt_in")) {
                                properties._non_spam_retraining_opt_in = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.non_spam_retraining_opt_in);
                                    if (error)
                                        return "non_spam_retraining_opt_in." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a PrivacySettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings} PrivacySettings
                         */
                        PrivacySettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings();
                            if (object.allow_activity_party_privacy_friends != null) {
                                if (typeof object.allow_activity_party_privacy_friends !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.allow_activity_party_privacy_friends: object expected");
                                message.allow_activity_party_privacy_friends = $root.google.protobuf.BoolValue.fromObject(object.allow_activity_party_privacy_friends);
                            }
                            if (object.allow_activity_party_privacy_voice_channel != null) {
                                if (typeof object.allow_activity_party_privacy_voice_channel !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.allow_activity_party_privacy_voice_channel: object expected");
                                message.allow_activity_party_privacy_voice_channel = $root.google.protobuf.BoolValue.fromObject(object.allow_activity_party_privacy_voice_channel);
                            }
                            if (object.restricted_guild_ids) {
                                if (!Array.isArray(object.restricted_guild_ids))
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.restricted_guild_ids: array expected");
                                message.restricted_guild_ids = [];
                                for (var i = 0; i < object.restricted_guild_ids.length; ++i)
                                    if ($util.Long)
                                        (message.restricted_guild_ids[i] = $util.Long.fromValue(object.restricted_guild_ids[i])).unsigned = false;
                                    else if (typeof object.restricted_guild_ids[i] === "string")
                                        message.restricted_guild_ids[i] = parseInt(object.restricted_guild_ids[i], 10);
                                    else if (typeof object.restricted_guild_ids[i] === "number")
                                        message.restricted_guild_ids[i] = object.restricted_guild_ids[i];
                                    else if (typeof object.restricted_guild_ids[i] === "object")
                                        message.restricted_guild_ids[i] = new $util.LongBits(object.restricted_guild_ids[i].low >>> 0, object.restricted_guild_ids[i].high >>> 0).toNumber();
                            }
                            if (object.default_guilds_restricted != null)
                                message.default_guilds_restricted = Boolean(object.default_guilds_restricted);
                            if (object.allow_accessibility_detection != null)
                                message.allow_accessibility_detection = Boolean(object.allow_accessibility_detection);
                            if (object.detect_platform_accounts != null) {
                                if (typeof object.detect_platform_accounts !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.detect_platform_accounts: object expected");
                                message.detect_platform_accounts = $root.google.protobuf.BoolValue.fromObject(object.detect_platform_accounts);
                            }
                            if (object.passwordless != null) {
                                if (typeof object.passwordless !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.passwordless: object expected");
                                message.passwordless = $root.google.protobuf.BoolValue.fromObject(object.passwordless);
                            }
                            if (object.contact_sync_enabled != null) {
                                if (typeof object.contact_sync_enabled !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.contact_sync_enabled: object expected");
                                message.contact_sync_enabled = $root.google.protobuf.BoolValue.fromObject(object.contact_sync_enabled);
                            }
                            if (object.friend_source_flags != null) {
                                if (typeof object.friend_source_flags !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.friend_source_flags: object expected");
                                message.friend_source_flags = $root.google.protobuf.UInt32Value.fromObject(object.friend_source_flags);
                            }
                            if (object.friend_discovery_flags != null) {
                                if (typeof object.friend_discovery_flags !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.friend_discovery_flags: object expected");
                                message.friend_discovery_flags = $root.google.protobuf.UInt32Value.fromObject(object.friend_discovery_flags);
                            }
                            if (object.activity_restricted_guild_ids) {
                                if (!Array.isArray(object.activity_restricted_guild_ids))
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.activity_restricted_guild_ids: array expected");
                                message.activity_restricted_guild_ids = [];
                                for (var i = 0; i < object.activity_restricted_guild_ids.length; ++i)
                                    if ($util.Long)
                                        (message.activity_restricted_guild_ids[i] = $util.Long.fromValue(object.activity_restricted_guild_ids[i])).unsigned = false;
                                    else if (typeof object.activity_restricted_guild_ids[i] === "string")
                                        message.activity_restricted_guild_ids[i] = parseInt(object.activity_restricted_guild_ids[i], 10);
                                    else if (typeof object.activity_restricted_guild_ids[i] === "number")
                                        message.activity_restricted_guild_ids[i] = object.activity_restricted_guild_ids[i];
                                    else if (typeof object.activity_restricted_guild_ids[i] === "object")
                                        message.activity_restricted_guild_ids[i] = new $util.LongBits(object.activity_restricted_guild_ids[i].low >>> 0, object.activity_restricted_guild_ids[i].high >>> 0).toNumber();
                            }
                            switch (object.default_guilds_activity_restricted) {
                            default:
                                if (typeof object.default_guilds_activity_restricted === "number") {
                                    message.default_guilds_activity_restricted = object.default_guilds_activity_restricted;
                                    break;
                                }
                                break;
                            case "OFF":
                            case 0:
                                message.default_guilds_activity_restricted = 0;
                                break;
                            case "ON_FOR_LARGE_GUILDS":
                            case 1:
                                message.default_guilds_activity_restricted = 1;
                                break;
                            }
                            if (object.activity_joining_restricted_guild_ids) {
                                if (!Array.isArray(object.activity_joining_restricted_guild_ids))
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.activity_joining_restricted_guild_ids: array expected");
                                message.activity_joining_restricted_guild_ids = [];
                                for (var i = 0; i < object.activity_joining_restricted_guild_ids.length; ++i)
                                    if ($util.Long)
                                        (message.activity_joining_restricted_guild_ids[i] = $util.Long.fromValue(object.activity_joining_restricted_guild_ids[i])).unsigned = false;
                                    else if (typeof object.activity_joining_restricted_guild_ids[i] === "string")
                                        message.activity_joining_restricted_guild_ids[i] = parseInt(object.activity_joining_restricted_guild_ids[i], 10);
                                    else if (typeof object.activity_joining_restricted_guild_ids[i] === "number")
                                        message.activity_joining_restricted_guild_ids[i] = object.activity_joining_restricted_guild_ids[i];
                                    else if (typeof object.activity_joining_restricted_guild_ids[i] === "object")
                                        message.activity_joining_restricted_guild_ids[i] = new $util.LongBits(object.activity_joining_restricted_guild_ids[i].low >>> 0, object.activity_joining_restricted_guild_ids[i].high >>> 0).toNumber();
                            }
                            if (object.message_request_restricted_guild_ids) {
                                if (!Array.isArray(object.message_request_restricted_guild_ids))
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.message_request_restricted_guild_ids: array expected");
                                message.message_request_restricted_guild_ids = [];
                                for (var i = 0; i < object.message_request_restricted_guild_ids.length; ++i)
                                    if ($util.Long)
                                        (message.message_request_restricted_guild_ids[i] = $util.Long.fromValue(object.message_request_restricted_guild_ids[i])).unsigned = false;
                                    else if (typeof object.message_request_restricted_guild_ids[i] === "string")
                                        message.message_request_restricted_guild_ids[i] = parseInt(object.message_request_restricted_guild_ids[i], 10);
                                    else if (typeof object.message_request_restricted_guild_ids[i] === "number")
                                        message.message_request_restricted_guild_ids[i] = object.message_request_restricted_guild_ids[i];
                                    else if (typeof object.message_request_restricted_guild_ids[i] === "object")
                                        message.message_request_restricted_guild_ids[i] = new $util.LongBits(object.message_request_restricted_guild_ids[i].low >>> 0, object.message_request_restricted_guild_ids[i].high >>> 0).toNumber();
                            }
                            if (object.default_message_request_restricted != null) {
                                if (typeof object.default_message_request_restricted !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.default_message_request_restricted: object expected");
                                message.default_message_request_restricted = $root.google.protobuf.BoolValue.fromObject(object.default_message_request_restricted);
                            }
                            if (object.drops_opted_out != null) {
                                if (typeof object.drops_opted_out !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.drops_opted_out: object expected");
                                message.drops_opted_out = $root.google.protobuf.BoolValue.fromObject(object.drops_opted_out);
                            }
                            if (object.non_spam_retraining_opt_in != null) {
                                if (typeof object.non_spam_retraining_opt_in !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings.non_spam_retraining_opt_in: object expected");
                                message.non_spam_retraining_opt_in = $root.google.protobuf.BoolValue.fromObject(object.non_spam_retraining_opt_in);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a PrivacySettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings} message PrivacySettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        PrivacySettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.restricted_guild_ids = [];
                                object.activity_restricted_guild_ids = [];
                                object.activity_joining_restricted_guild_ids = [];
                                object.message_request_restricted_guild_ids = [];
                            }
                            if (options.defaults) {
                                object.default_guilds_restricted = false;
                                object.allow_accessibility_detection = false;
                                object.default_guilds_activity_restricted = options.enums === String ? "OFF" : 0;
                            }
                            if (message.allow_activity_party_privacy_friends != null && message.hasOwnProperty("allow_activity_party_privacy_friends")) {
                                object.allow_activity_party_privacy_friends = $root.google.protobuf.BoolValue.toObject(message.allow_activity_party_privacy_friends, options);
                                if (options.oneofs)
                                    object._allow_activity_party_privacy_friends = "allow_activity_party_privacy_friends";
                            }
                            if (message.allow_activity_party_privacy_voice_channel != null && message.hasOwnProperty("allow_activity_party_privacy_voice_channel")) {
                                object.allow_activity_party_privacy_voice_channel = $root.google.protobuf.BoolValue.toObject(message.allow_activity_party_privacy_voice_channel, options);
                                if (options.oneofs)
                                    object._allow_activity_party_privacy_voice_channel = "allow_activity_party_privacy_voice_channel";
                            }
                            if (message.restricted_guild_ids && message.restricted_guild_ids.length) {
                                object.restricted_guild_ids = [];
                                for (var j = 0; j < message.restricted_guild_ids.length; ++j)
                                    if (typeof message.restricted_guild_ids[j] === "number")
                                        object.restricted_guild_ids[j] = options.longs === String ? String(message.restricted_guild_ids[j]) : message.restricted_guild_ids[j];
                                    else
                                        object.restricted_guild_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.restricted_guild_ids[j]) : options.longs === Number ? new $util.LongBits(message.restricted_guild_ids[j].low >>> 0, message.restricted_guild_ids[j].high >>> 0).toNumber() : message.restricted_guild_ids[j];
                            }
                            if (message.default_guilds_restricted != null && message.hasOwnProperty("default_guilds_restricted"))
                                object.default_guilds_restricted = message.default_guilds_restricted;
                            if (message.allow_accessibility_detection != null && message.hasOwnProperty("allow_accessibility_detection"))
                                object.allow_accessibility_detection = message.allow_accessibility_detection;
                            if (message.detect_platform_accounts != null && message.hasOwnProperty("detect_platform_accounts")) {
                                object.detect_platform_accounts = $root.google.protobuf.BoolValue.toObject(message.detect_platform_accounts, options);
                                if (options.oneofs)
                                    object._detect_platform_accounts = "detect_platform_accounts";
                            }
                            if (message.passwordless != null && message.hasOwnProperty("passwordless")) {
                                object.passwordless = $root.google.protobuf.BoolValue.toObject(message.passwordless, options);
                                if (options.oneofs)
                                    object._passwordless = "passwordless";
                            }
                            if (message.contact_sync_enabled != null && message.hasOwnProperty("contact_sync_enabled")) {
                                object.contact_sync_enabled = $root.google.protobuf.BoolValue.toObject(message.contact_sync_enabled, options);
                                if (options.oneofs)
                                    object._contact_sync_enabled = "contact_sync_enabled";
                            }
                            if (message.friend_source_flags != null && message.hasOwnProperty("friend_source_flags")) {
                                object.friend_source_flags = $root.google.protobuf.UInt32Value.toObject(message.friend_source_flags, options);
                                if (options.oneofs)
                                    object._friend_source_flags = "friend_source_flags";
                            }
                            if (message.friend_discovery_flags != null && message.hasOwnProperty("friend_discovery_flags")) {
                                object.friend_discovery_flags = $root.google.protobuf.UInt32Value.toObject(message.friend_discovery_flags, options);
                                if (options.oneofs)
                                    object._friend_discovery_flags = "friend_discovery_flags";
                            }
                            if (message.activity_restricted_guild_ids && message.activity_restricted_guild_ids.length) {
                                object.activity_restricted_guild_ids = [];
                                for (var j = 0; j < message.activity_restricted_guild_ids.length; ++j)
                                    if (typeof message.activity_restricted_guild_ids[j] === "number")
                                        object.activity_restricted_guild_ids[j] = options.longs === String ? String(message.activity_restricted_guild_ids[j]) : message.activity_restricted_guild_ids[j];
                                    else
                                        object.activity_restricted_guild_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.activity_restricted_guild_ids[j]) : options.longs === Number ? new $util.LongBits(message.activity_restricted_guild_ids[j].low >>> 0, message.activity_restricted_guild_ids[j].high >>> 0).toNumber() : message.activity_restricted_guild_ids[j];
                            }
                            if (message.default_guilds_activity_restricted != null && message.hasOwnProperty("default_guilds_activity_restricted"))
                                object.default_guilds_activity_restricted = options.enums === String ? $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildActivityStatusRestrictionDefault[message.default_guilds_activity_restricted] === undefined ? message.default_guilds_activity_restricted : $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildActivityStatusRestrictionDefault[message.default_guilds_activity_restricted] : message.default_guilds_activity_restricted;
                            if (message.activity_joining_restricted_guild_ids && message.activity_joining_restricted_guild_ids.length) {
                                object.activity_joining_restricted_guild_ids = [];
                                for (var j = 0; j < message.activity_joining_restricted_guild_ids.length; ++j)
                                    if (typeof message.activity_joining_restricted_guild_ids[j] === "number")
                                        object.activity_joining_restricted_guild_ids[j] = options.longs === String ? String(message.activity_joining_restricted_guild_ids[j]) : message.activity_joining_restricted_guild_ids[j];
                                    else
                                        object.activity_joining_restricted_guild_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.activity_joining_restricted_guild_ids[j]) : options.longs === Number ? new $util.LongBits(message.activity_joining_restricted_guild_ids[j].low >>> 0, message.activity_joining_restricted_guild_ids[j].high >>> 0).toNumber() : message.activity_joining_restricted_guild_ids[j];
                            }
                            if (message.message_request_restricted_guild_ids && message.message_request_restricted_guild_ids.length) {
                                object.message_request_restricted_guild_ids = [];
                                for (var j = 0; j < message.message_request_restricted_guild_ids.length; ++j)
                                    if (typeof message.message_request_restricted_guild_ids[j] === "number")
                                        object.message_request_restricted_guild_ids[j] = options.longs === String ? String(message.message_request_restricted_guild_ids[j]) : message.message_request_restricted_guild_ids[j];
                                    else
                                        object.message_request_restricted_guild_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.message_request_restricted_guild_ids[j]) : options.longs === Number ? new $util.LongBits(message.message_request_restricted_guild_ids[j].low >>> 0, message.message_request_restricted_guild_ids[j].high >>> 0).toNumber() : message.message_request_restricted_guild_ids[j];
                            }
                            if (message.default_message_request_restricted != null && message.hasOwnProperty("default_message_request_restricted")) {
                                object.default_message_request_restricted = $root.google.protobuf.BoolValue.toObject(message.default_message_request_restricted, options);
                                if (options.oneofs)
                                    object._default_message_request_restricted = "default_message_request_restricted";
                            }
                            if (message.drops_opted_out != null && message.hasOwnProperty("drops_opted_out")) {
                                object.drops_opted_out = $root.google.protobuf.BoolValue.toObject(message.drops_opted_out, options);
                                if (options.oneofs)
                                    object._drops_opted_out = "drops_opted_out";
                            }
                            if (message.non_spam_retraining_opt_in != null && message.hasOwnProperty("non_spam_retraining_opt_in")) {
                                object.non_spam_retraining_opt_in = $root.google.protobuf.BoolValue.toObject(message.non_spam_retraining_opt_in, options);
                                if (options.oneofs)
                                    object._non_spam_retraining_opt_in = "non_spam_retraining_opt_in";
                            }
                            return object;
                        };

                        /**
                         * Converts this PrivacySettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        PrivacySettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for PrivacySettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        PrivacySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.PrivacySettings";
                        };

                        return PrivacySettings;
                    })();

                    PreloadedUserSettings.DebugSettings = (function() {

                        /**
                         * Properties of a DebugSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IDebugSettings
                         * @property {google.protobuf.IBoolValue|null} [rtc_panel_show_voice_states] DebugSettings rtc_panel_show_voice_states
                         */

                        /**
                         * Constructs a new DebugSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a DebugSettings.
                         * @implements IDebugSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IDebugSettings=} [properties] Properties to set
                         */
                        function DebugSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * DebugSettings rtc_panel_show_voice_states.
                         * @member {google.protobuf.IBoolValue|null|undefined} rtc_panel_show_voice_states
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @instance
                         */
                        DebugSettings.prototype.rtc_panel_show_voice_states = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * DebugSettings _rtc_panel_show_voice_states.
                         * @member {"rtc_panel_show_voice_states"|undefined} _rtc_panel_show_voice_states
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @instance
                         */
                        Object.defineProperty(DebugSettings.prototype, "_rtc_panel_show_voice_states", {
                            get: $util.oneOfGetter($oneOfFields = ["rtc_panel_show_voice_states"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new DebugSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IDebugSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings} DebugSettings instance
                         */
                        DebugSettings.create = function create(properties) {
                            return new DebugSettings(properties);
                        };

                        /**
                         * Encodes the specified DebugSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IDebugSettings} message DebugSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DebugSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.rtc_panel_show_voice_states != null && Object.hasOwnProperty.call(message, "rtc_panel_show_voice_states"))
                                $root.google.protobuf.BoolValue.encode(message.rtc_panel_show_voice_states, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified DebugSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IDebugSettings} message DebugSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        DebugSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a DebugSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings} DebugSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DebugSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.rtc_panel_show_voice_states = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a DebugSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings} DebugSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        DebugSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a DebugSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        DebugSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.rtc_panel_show_voice_states != null && message.hasOwnProperty("rtc_panel_show_voice_states")) {
                                properties._rtc_panel_show_voice_states = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.rtc_panel_show_voice_states);
                                    if (error)
                                        return "rtc_panel_show_voice_states." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a DebugSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings} DebugSettings
                         */
                        DebugSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings();
                            if (object.rtc_panel_show_voice_states != null) {
                                if (typeof object.rtc_panel_show_voice_states !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings.rtc_panel_show_voice_states: object expected");
                                message.rtc_panel_show_voice_states = $root.google.protobuf.BoolValue.fromObject(object.rtc_panel_show_voice_states);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a DebugSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings} message DebugSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        DebugSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.rtc_panel_show_voice_states != null && message.hasOwnProperty("rtc_panel_show_voice_states")) {
                                object.rtc_panel_show_voice_states = $root.google.protobuf.BoolValue.toObject(message.rtc_panel_show_voice_states, options);
                                if (options.oneofs)
                                    object._rtc_panel_show_voice_states = "rtc_panel_show_voice_states";
                            }
                            return object;
                        };

                        /**
                         * Converts this DebugSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        DebugSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for DebugSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        DebugSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.DebugSettings";
                        };

                        return DebugSettings;
                    })();

                    PreloadedUserSettings.GameLibrarySettings = (function() {

                        /**
                         * Properties of a GameLibrarySettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IGameLibrarySettings
                         * @property {google.protobuf.IBoolValue|null} [install_shortcut_desktop] GameLibrarySettings install_shortcut_desktop
                         * @property {google.protobuf.IBoolValue|null} [install_shortcut_start_menu] GameLibrarySettings install_shortcut_start_menu
                         * @property {google.protobuf.IBoolValue|null} [disable_games_tab] GameLibrarySettings disable_games_tab
                         */

                        /**
                         * Constructs a new GameLibrarySettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a GameLibrarySettings.
                         * @implements IGameLibrarySettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGameLibrarySettings=} [properties] Properties to set
                         */
                        function GameLibrarySettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * GameLibrarySettings install_shortcut_desktop.
                         * @member {google.protobuf.IBoolValue|null|undefined} install_shortcut_desktop
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @instance
                         */
                        GameLibrarySettings.prototype.install_shortcut_desktop = null;

                        /**
                         * GameLibrarySettings install_shortcut_start_menu.
                         * @member {google.protobuf.IBoolValue|null|undefined} install_shortcut_start_menu
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @instance
                         */
                        GameLibrarySettings.prototype.install_shortcut_start_menu = null;

                        /**
                         * GameLibrarySettings disable_games_tab.
                         * @member {google.protobuf.IBoolValue|null|undefined} disable_games_tab
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @instance
                         */
                        GameLibrarySettings.prototype.disable_games_tab = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * GameLibrarySettings _install_shortcut_desktop.
                         * @member {"install_shortcut_desktop"|undefined} _install_shortcut_desktop
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @instance
                         */
                        Object.defineProperty(GameLibrarySettings.prototype, "_install_shortcut_desktop", {
                            get: $util.oneOfGetter($oneOfFields = ["install_shortcut_desktop"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * GameLibrarySettings _install_shortcut_start_menu.
                         * @member {"install_shortcut_start_menu"|undefined} _install_shortcut_start_menu
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @instance
                         */
                        Object.defineProperty(GameLibrarySettings.prototype, "_install_shortcut_start_menu", {
                            get: $util.oneOfGetter($oneOfFields = ["install_shortcut_start_menu"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * GameLibrarySettings _disable_games_tab.
                         * @member {"disable_games_tab"|undefined} _disable_games_tab
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @instance
                         */
                        Object.defineProperty(GameLibrarySettings.prototype, "_disable_games_tab", {
                            get: $util.oneOfGetter($oneOfFields = ["disable_games_tab"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new GameLibrarySettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGameLibrarySettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings} GameLibrarySettings instance
                         */
                        GameLibrarySettings.create = function create(properties) {
                            return new GameLibrarySettings(properties);
                        };

                        /**
                         * Encodes the specified GameLibrarySettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGameLibrarySettings} message GameLibrarySettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GameLibrarySettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.install_shortcut_desktop != null && Object.hasOwnProperty.call(message, "install_shortcut_desktop"))
                                $root.google.protobuf.BoolValue.encode(message.install_shortcut_desktop, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.install_shortcut_start_menu != null && Object.hasOwnProperty.call(message, "install_shortcut_start_menu"))
                                $root.google.protobuf.BoolValue.encode(message.install_shortcut_start_menu, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.disable_games_tab != null && Object.hasOwnProperty.call(message, "disable_games_tab"))
                                $root.google.protobuf.BoolValue.encode(message.disable_games_tab, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified GameLibrarySettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGameLibrarySettings} message GameLibrarySettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GameLibrarySettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a GameLibrarySettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings} GameLibrarySettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GameLibrarySettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.install_shortcut_desktop = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.install_shortcut_start_menu = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.disable_games_tab = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a GameLibrarySettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings} GameLibrarySettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GameLibrarySettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a GameLibrarySettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GameLibrarySettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.install_shortcut_desktop != null && message.hasOwnProperty("install_shortcut_desktop")) {
                                properties._install_shortcut_desktop = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.install_shortcut_desktop);
                                    if (error)
                                        return "install_shortcut_desktop." + error;
                                }
                            }
                            if (message.install_shortcut_start_menu != null && message.hasOwnProperty("install_shortcut_start_menu")) {
                                properties._install_shortcut_start_menu = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.install_shortcut_start_menu);
                                    if (error)
                                        return "install_shortcut_start_menu." + error;
                                }
                            }
                            if (message.disable_games_tab != null && message.hasOwnProperty("disable_games_tab")) {
                                properties._disable_games_tab = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.disable_games_tab);
                                    if (error)
                                        return "disable_games_tab." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a GameLibrarySettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings} GameLibrarySettings
                         */
                        GameLibrarySettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings();
                            if (object.install_shortcut_desktop != null) {
                                if (typeof object.install_shortcut_desktop !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings.install_shortcut_desktop: object expected");
                                message.install_shortcut_desktop = $root.google.protobuf.BoolValue.fromObject(object.install_shortcut_desktop);
                            }
                            if (object.install_shortcut_start_menu != null) {
                                if (typeof object.install_shortcut_start_menu !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings.install_shortcut_start_menu: object expected");
                                message.install_shortcut_start_menu = $root.google.protobuf.BoolValue.fromObject(object.install_shortcut_start_menu);
                            }
                            if (object.disable_games_tab != null) {
                                if (typeof object.disable_games_tab !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings.disable_games_tab: object expected");
                                message.disable_games_tab = $root.google.protobuf.BoolValue.fromObject(object.disable_games_tab);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a GameLibrarySettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings} message GameLibrarySettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GameLibrarySettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.install_shortcut_desktop != null && message.hasOwnProperty("install_shortcut_desktop")) {
                                object.install_shortcut_desktop = $root.google.protobuf.BoolValue.toObject(message.install_shortcut_desktop, options);
                                if (options.oneofs)
                                    object._install_shortcut_desktop = "install_shortcut_desktop";
                            }
                            if (message.install_shortcut_start_menu != null && message.hasOwnProperty("install_shortcut_start_menu")) {
                                object.install_shortcut_start_menu = $root.google.protobuf.BoolValue.toObject(message.install_shortcut_start_menu, options);
                                if (options.oneofs)
                                    object._install_shortcut_start_menu = "install_shortcut_start_menu";
                            }
                            if (message.disable_games_tab != null && message.hasOwnProperty("disable_games_tab")) {
                                object.disable_games_tab = $root.google.protobuf.BoolValue.toObject(message.disable_games_tab, options);
                                if (options.oneofs)
                                    object._disable_games_tab = "disable_games_tab";
                            }
                            return object;
                        };

                        /**
                         * Converts this GameLibrarySettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GameLibrarySettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for GameLibrarySettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GameLibrarySettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GameLibrarySettings";
                        };

                        return GameLibrarySettings;
                    })();

                    PreloadedUserSettings.CustomStatus = (function() {

                        /**
                         * Properties of a CustomStatus.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface ICustomStatus
                         * @property {string|null} [text] CustomStatus text
                         * @property {number|Long|null} [emoji_id] CustomStatus emoji_id
                         * @property {string|null} [emoji_name] CustomStatus emoji_name
                         * @property {number|Long|null} [expires_at_ms] CustomStatus expires_at_ms
                         */

                        /**
                         * Constructs a new CustomStatus.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a CustomStatus.
                         * @implements ICustomStatus
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICustomStatus=} [properties] Properties to set
                         */
                        function CustomStatus(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * CustomStatus text.
                         * @member {string} text
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @instance
                         */
                        CustomStatus.prototype.text = "";

                        /**
                         * CustomStatus emoji_id.
                         * @member {number|Long} emoji_id
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @instance
                         */
                        CustomStatus.prototype.emoji_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                        /**
                         * CustomStatus emoji_name.
                         * @member {string} emoji_name
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @instance
                         */
                        CustomStatus.prototype.emoji_name = "";

                        /**
                         * CustomStatus expires_at_ms.
                         * @member {number|Long} expires_at_ms
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @instance
                         */
                        CustomStatus.prototype.expires_at_ms = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                        /**
                         * Creates a new CustomStatus instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICustomStatus=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus} CustomStatus instance
                         */
                        CustomStatus.create = function create(properties) {
                            return new CustomStatus(properties);
                        };

                        /**
                         * Encodes the specified CustomStatus message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICustomStatus} message CustomStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomStatus.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.text != null && Object.hasOwnProperty.call(message, "text"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.text);
                            if (message.emoji_id != null && Object.hasOwnProperty.call(message, "emoji_id"))
                                writer.uint32(/* id 2, wireType 1 =*/17).fixed64(message.emoji_id);
                            if (message.emoji_name != null && Object.hasOwnProperty.call(message, "emoji_name"))
                                writer.uint32(/* id 3, wireType 2 =*/26).string(message.emoji_name);
                            if (message.expires_at_ms != null && Object.hasOwnProperty.call(message, "expires_at_ms"))
                                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.expires_at_ms);
                            return writer;
                        };

                        /**
                         * Encodes the specified CustomStatus message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICustomStatus} message CustomStatus message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CustomStatus.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a CustomStatus message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus} CustomStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomStatus.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.text = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.emoji_id = reader.fixed64();
                                        break;
                                    }
                                case 3: {
                                        message.emoji_name = reader.string();
                                        break;
                                    }
                                case 4: {
                                        message.expires_at_ms = reader.fixed64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a CustomStatus message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus} CustomStatus
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CustomStatus.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a CustomStatus message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CustomStatus.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.text != null && message.hasOwnProperty("text"))
                                if (!$util.isString(message.text))
                                    return "text: string expected";
                            if (message.emoji_id != null && message.hasOwnProperty("emoji_id"))
                                if (!$util.isInteger(message.emoji_id) && !(message.emoji_id && $util.isInteger(message.emoji_id.low) && $util.isInteger(message.emoji_id.high)))
                                    return "emoji_id: integer|Long expected";
                            if (message.emoji_name != null && message.hasOwnProperty("emoji_name"))
                                if (!$util.isString(message.emoji_name))
                                    return "emoji_name: string expected";
                            if (message.expires_at_ms != null && message.hasOwnProperty("expires_at_ms"))
                                if (!$util.isInteger(message.expires_at_ms) && !(message.expires_at_ms && $util.isInteger(message.expires_at_ms.low) && $util.isInteger(message.expires_at_ms.high)))
                                    return "expires_at_ms: integer|Long expected";
                            return null;
                        };

                        /**
                         * Creates a CustomStatus message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus} CustomStatus
                         */
                        CustomStatus.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus();
                            if (object.text != null)
                                message.text = String(object.text);
                            if (object.emoji_id != null)
                                if ($util.Long)
                                    (message.emoji_id = $util.Long.fromValue(object.emoji_id)).unsigned = false;
                                else if (typeof object.emoji_id === "string")
                                    message.emoji_id = parseInt(object.emoji_id, 10);
                                else if (typeof object.emoji_id === "number")
                                    message.emoji_id = object.emoji_id;
                                else if (typeof object.emoji_id === "object")
                                    message.emoji_id = new $util.LongBits(object.emoji_id.low >>> 0, object.emoji_id.high >>> 0).toNumber();
                            if (object.emoji_name != null)
                                message.emoji_name = String(object.emoji_name);
                            if (object.expires_at_ms != null)
                                if ($util.Long)
                                    (message.expires_at_ms = $util.Long.fromValue(object.expires_at_ms)).unsigned = false;
                                else if (typeof object.expires_at_ms === "string")
                                    message.expires_at_ms = parseInt(object.expires_at_ms, 10);
                                else if (typeof object.expires_at_ms === "number")
                                    message.expires_at_ms = object.expires_at_ms;
                                else if (typeof object.expires_at_ms === "object")
                                    message.expires_at_ms = new $util.LongBits(object.expires_at_ms.low >>> 0, object.expires_at_ms.high >>> 0).toNumber();
                            return message;
                        };

                        /**
                         * Creates a plain object from a CustomStatus message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus} message CustomStatus
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CustomStatus.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.text = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.emoji_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.emoji_id = options.longs === String ? "0" : 0;
                                object.emoji_name = "";
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.expires_at_ms = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.expires_at_ms = options.longs === String ? "0" : 0;
                            }
                            if (message.text != null && message.hasOwnProperty("text"))
                                object.text = message.text;
                            if (message.emoji_id != null && message.hasOwnProperty("emoji_id"))
                                if (typeof message.emoji_id === "number")
                                    object.emoji_id = options.longs === String ? String(message.emoji_id) : message.emoji_id;
                                else
                                    object.emoji_id = options.longs === String ? $util.Long.prototype.toString.call(message.emoji_id) : options.longs === Number ? new $util.LongBits(message.emoji_id.low >>> 0, message.emoji_id.high >>> 0).toNumber() : message.emoji_id;
                            if (message.emoji_name != null && message.hasOwnProperty("emoji_name"))
                                object.emoji_name = message.emoji_name;
                            if (message.expires_at_ms != null && message.hasOwnProperty("expires_at_ms"))
                                if (typeof message.expires_at_ms === "number")
                                    object.expires_at_ms = options.longs === String ? String(message.expires_at_ms) : message.expires_at_ms;
                                else
                                    object.expires_at_ms = options.longs === String ? $util.Long.prototype.toString.call(message.expires_at_ms) : options.longs === Number ? new $util.LongBits(message.expires_at_ms.low >>> 0, message.expires_at_ms.high >>> 0).toNumber() : message.expires_at_ms;
                            return object;
                        };

                        /**
                         * Converts this CustomStatus to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CustomStatus.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for CustomStatus
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CustomStatus.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus";
                        };

                        return CustomStatus;
                    })();

                    PreloadedUserSettings.StatusSettings = (function() {

                        /**
                         * Properties of a StatusSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IStatusSettings
                         * @property {google.protobuf.IStringValue|null} [status] StatusSettings status
                         * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICustomStatus|null} [custom_status] StatusSettings custom_status
                         * @property {google.protobuf.IBoolValue|null} [show_current_game] StatusSettings show_current_game
                         */

                        /**
                         * Constructs a new StatusSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a StatusSettings.
                         * @implements IStatusSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IStatusSettings=} [properties] Properties to set
                         */
                        function StatusSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * StatusSettings status.
                         * @member {google.protobuf.IStringValue|null|undefined} status
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @instance
                         */
                        StatusSettings.prototype.status = null;

                        /**
                         * StatusSettings custom_status.
                         * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICustomStatus|null|undefined} custom_status
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @instance
                         */
                        StatusSettings.prototype.custom_status = null;

                        /**
                         * StatusSettings show_current_game.
                         * @member {google.protobuf.IBoolValue|null|undefined} show_current_game
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @instance
                         */
                        StatusSettings.prototype.show_current_game = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * StatusSettings _status.
                         * @member {"status"|undefined} _status
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @instance
                         */
                        Object.defineProperty(StatusSettings.prototype, "_status", {
                            get: $util.oneOfGetter($oneOfFields = ["status"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * StatusSettings _custom_status.
                         * @member {"custom_status"|undefined} _custom_status
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @instance
                         */
                        Object.defineProperty(StatusSettings.prototype, "_custom_status", {
                            get: $util.oneOfGetter($oneOfFields = ["custom_status"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * StatusSettings _show_current_game.
                         * @member {"show_current_game"|undefined} _show_current_game
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @instance
                         */
                        Object.defineProperty(StatusSettings.prototype, "_show_current_game", {
                            get: $util.oneOfGetter($oneOfFields = ["show_current_game"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new StatusSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IStatusSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings} StatusSettings instance
                         */
                        StatusSettings.create = function create(properties) {
                            return new StatusSettings(properties);
                        };

                        /**
                         * Encodes the specified StatusSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IStatusSettings} message StatusSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StatusSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.status != null && Object.hasOwnProperty.call(message, "status"))
                                $root.google.protobuf.StringValue.encode(message.status, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.custom_status != null && Object.hasOwnProperty.call(message, "custom_status"))
                                $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus.encode(message.custom_status, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.show_current_game != null && Object.hasOwnProperty.call(message, "show_current_game"))
                                $root.google.protobuf.BoolValue.encode(message.show_current_game, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified StatusSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IStatusSettings} message StatusSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        StatusSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a StatusSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings} StatusSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StatusSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.status = $root.google.protobuf.StringValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.custom_status = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.show_current_game = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a StatusSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings} StatusSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        StatusSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a StatusSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        StatusSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.status != null && message.hasOwnProperty("status")) {
                                properties._status = 1;
                                {
                                    var error = $root.google.protobuf.StringValue.verify(message.status);
                                    if (error)
                                        return "status." + error;
                                }
                            }
                            if (message.custom_status != null && message.hasOwnProperty("custom_status")) {
                                properties._custom_status = 1;
                                {
                                    var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus.verify(message.custom_status);
                                    if (error)
                                        return "custom_status." + error;
                                }
                            }
                            if (message.show_current_game != null && message.hasOwnProperty("show_current_game")) {
                                properties._show_current_game = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.show_current_game);
                                    if (error)
                                        return "show_current_game." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a StatusSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings} StatusSettings
                         */
                        StatusSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings();
                            if (object.status != null) {
                                if (typeof object.status !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings.status: object expected");
                                message.status = $root.google.protobuf.StringValue.fromObject(object.status);
                            }
                            if (object.custom_status != null) {
                                if (typeof object.custom_status !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings.custom_status: object expected");
                                message.custom_status = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus.fromObject(object.custom_status);
                            }
                            if (object.show_current_game != null) {
                                if (typeof object.show_current_game !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings.show_current_game: object expected");
                                message.show_current_game = $root.google.protobuf.BoolValue.fromObject(object.show_current_game);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a StatusSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings} message StatusSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        StatusSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.status != null && message.hasOwnProperty("status")) {
                                object.status = $root.google.protobuf.StringValue.toObject(message.status, options);
                                if (options.oneofs)
                                    object._status = "status";
                            }
                            if (message.custom_status != null && message.hasOwnProperty("custom_status")) {
                                object.custom_status = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CustomStatus.toObject(message.custom_status, options);
                                if (options.oneofs)
                                    object._custom_status = "custom_status";
                            }
                            if (message.show_current_game != null && message.hasOwnProperty("show_current_game")) {
                                object.show_current_game = $root.google.protobuf.BoolValue.toObject(message.show_current_game, options);
                                if (options.oneofs)
                                    object._show_current_game = "show_current_game";
                            }
                            return object;
                        };

                        /**
                         * Converts this StatusSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        StatusSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for StatusSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        StatusSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.StatusSettings";
                        };

                        return StatusSettings;
                    })();

                    PreloadedUserSettings.LocalizationSettings = (function() {

                        /**
                         * Properties of a LocalizationSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface ILocalizationSettings
                         * @property {google.protobuf.IStringValue|null} [locale] LocalizationSettings locale
                         * @property {google.protobuf.IInt32Value|null} [timezone_offset] LocalizationSettings timezone_offset
                         */

                        /**
                         * Constructs a new LocalizationSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a LocalizationSettings.
                         * @implements ILocalizationSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ILocalizationSettings=} [properties] Properties to set
                         */
                        function LocalizationSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * LocalizationSettings locale.
                         * @member {google.protobuf.IStringValue|null|undefined} locale
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @instance
                         */
                        LocalizationSettings.prototype.locale = null;

                        /**
                         * LocalizationSettings timezone_offset.
                         * @member {google.protobuf.IInt32Value|null|undefined} timezone_offset
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @instance
                         */
                        LocalizationSettings.prototype.timezone_offset = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * LocalizationSettings _locale.
                         * @member {"locale"|undefined} _locale
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @instance
                         */
                        Object.defineProperty(LocalizationSettings.prototype, "_locale", {
                            get: $util.oneOfGetter($oneOfFields = ["locale"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * LocalizationSettings _timezone_offset.
                         * @member {"timezone_offset"|undefined} _timezone_offset
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @instance
                         */
                        Object.defineProperty(LocalizationSettings.prototype, "_timezone_offset", {
                            get: $util.oneOfGetter($oneOfFields = ["timezone_offset"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new LocalizationSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ILocalizationSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings} LocalizationSettings instance
                         */
                        LocalizationSettings.create = function create(properties) {
                            return new LocalizationSettings(properties);
                        };

                        /**
                         * Encodes the specified LocalizationSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ILocalizationSettings} message LocalizationSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocalizationSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.locale != null && Object.hasOwnProperty.call(message, "locale"))
                                $root.google.protobuf.StringValue.encode(message.locale, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.timezone_offset != null && Object.hasOwnProperty.call(message, "timezone_offset"))
                                $root.google.protobuf.Int32Value.encode(message.timezone_offset, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified LocalizationSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ILocalizationSettings} message LocalizationSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        LocalizationSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a LocalizationSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings} LocalizationSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocalizationSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.locale = $root.google.protobuf.StringValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.timezone_offset = $root.google.protobuf.Int32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a LocalizationSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings} LocalizationSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        LocalizationSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a LocalizationSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        LocalizationSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.locale != null && message.hasOwnProperty("locale")) {
                                properties._locale = 1;
                                {
                                    var error = $root.google.protobuf.StringValue.verify(message.locale);
                                    if (error)
                                        return "locale." + error;
                                }
                            }
                            if (message.timezone_offset != null && message.hasOwnProperty("timezone_offset")) {
                                properties._timezone_offset = 1;
                                {
                                    var error = $root.google.protobuf.Int32Value.verify(message.timezone_offset);
                                    if (error)
                                        return "timezone_offset." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a LocalizationSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings} LocalizationSettings
                         */
                        LocalizationSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings();
                            if (object.locale != null) {
                                if (typeof object.locale !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings.locale: object expected");
                                message.locale = $root.google.protobuf.StringValue.fromObject(object.locale);
                            }
                            if (object.timezone_offset != null) {
                                if (typeof object.timezone_offset !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings.timezone_offset: object expected");
                                message.timezone_offset = $root.google.protobuf.Int32Value.fromObject(object.timezone_offset);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a LocalizationSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings} message LocalizationSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        LocalizationSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.locale != null && message.hasOwnProperty("locale")) {
                                object.locale = $root.google.protobuf.StringValue.toObject(message.locale, options);
                                if (options.oneofs)
                                    object._locale = "locale";
                            }
                            if (message.timezone_offset != null && message.hasOwnProperty("timezone_offset")) {
                                object.timezone_offset = $root.google.protobuf.Int32Value.toObject(message.timezone_offset, options);
                                if (options.oneofs)
                                    object._timezone_offset = "timezone_offset";
                            }
                            return object;
                        };

                        /**
                         * Converts this LocalizationSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        LocalizationSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for LocalizationSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        LocalizationSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.LocalizationSettings";
                        };

                        return LocalizationSettings;
                    })();

                    /**
                     * Theme enum.
                     * @name discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Theme
                     * @enum {number}
                     * @property {number} UNSET=0 UNSET value
                     * @property {number} DARK=1 DARK value
                     * @property {number} LIGHT=2 LIGHT value
                     */
                    PreloadedUserSettings.Theme = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNSET"] = 0;
                        values[valuesById[1] = "DARK"] = 1;
                        values[valuesById[2] = "LIGHT"] = 2;
                        return values;
                    })();

                    PreloadedUserSettings.ClientThemeSettings = (function() {

                        /**
                         * Properties of a ClientThemeSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IClientThemeSettings
                         * @property {google.protobuf.IUInt64Value|null} [primary_color] ClientThemeSettings primary_color
                         * @property {google.protobuf.IUInt32Value|null} [background_gradient_preset_id] ClientThemeSettings background_gradient_preset_id
                         * @property {google.protobuf.IFloatValue|null} [background_gradient_angle] ClientThemeSettings background_gradient_angle
                         */

                        /**
                         * Constructs a new ClientThemeSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a ClientThemeSettings.
                         * @implements IClientThemeSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IClientThemeSettings=} [properties] Properties to set
                         */
                        function ClientThemeSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * ClientThemeSettings primary_color.
                         * @member {google.protobuf.IUInt64Value|null|undefined} primary_color
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @instance
                         */
                        ClientThemeSettings.prototype.primary_color = null;

                        /**
                         * ClientThemeSettings background_gradient_preset_id.
                         * @member {google.protobuf.IUInt32Value|null|undefined} background_gradient_preset_id
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @instance
                         */
                        ClientThemeSettings.prototype.background_gradient_preset_id = null;

                        /**
                         * ClientThemeSettings background_gradient_angle.
                         * @member {google.protobuf.IFloatValue|null|undefined} background_gradient_angle
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @instance
                         */
                        ClientThemeSettings.prototype.background_gradient_angle = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * ClientThemeSettings _primary_color.
                         * @member {"primary_color"|undefined} _primary_color
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @instance
                         */
                        Object.defineProperty(ClientThemeSettings.prototype, "_primary_color", {
                            get: $util.oneOfGetter($oneOfFields = ["primary_color"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * ClientThemeSettings _background_gradient_preset_id.
                         * @member {"background_gradient_preset_id"|undefined} _background_gradient_preset_id
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @instance
                         */
                        Object.defineProperty(ClientThemeSettings.prototype, "_background_gradient_preset_id", {
                            get: $util.oneOfGetter($oneOfFields = ["background_gradient_preset_id"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * ClientThemeSettings _background_gradient_angle.
                         * @member {"background_gradient_angle"|undefined} _background_gradient_angle
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @instance
                         */
                        Object.defineProperty(ClientThemeSettings.prototype, "_background_gradient_angle", {
                            get: $util.oneOfGetter($oneOfFields = ["background_gradient_angle"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new ClientThemeSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IClientThemeSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings} ClientThemeSettings instance
                         */
                        ClientThemeSettings.create = function create(properties) {
                            return new ClientThemeSettings(properties);
                        };

                        /**
                         * Encodes the specified ClientThemeSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IClientThemeSettings} message ClientThemeSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClientThemeSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.primary_color != null && Object.hasOwnProperty.call(message, "primary_color"))
                                $root.google.protobuf.UInt64Value.encode(message.primary_color, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.background_gradient_preset_id != null && Object.hasOwnProperty.call(message, "background_gradient_preset_id"))
                                $root.google.protobuf.UInt32Value.encode(message.background_gradient_preset_id, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.background_gradient_angle != null && Object.hasOwnProperty.call(message, "background_gradient_angle"))
                                $root.google.protobuf.FloatValue.encode(message.background_gradient_angle, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified ClientThemeSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IClientThemeSettings} message ClientThemeSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        ClientThemeSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a ClientThemeSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings} ClientThemeSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClientThemeSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.primary_color = $root.google.protobuf.UInt64Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 2: {
                                        message.background_gradient_preset_id = $root.google.protobuf.UInt32Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.background_gradient_angle = $root.google.protobuf.FloatValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a ClientThemeSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings} ClientThemeSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        ClientThemeSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a ClientThemeSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        ClientThemeSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.primary_color != null && message.hasOwnProperty("primary_color")) {
                                properties._primary_color = 1;
                                {
                                    var error = $root.google.protobuf.UInt64Value.verify(message.primary_color);
                                    if (error)
                                        return "primary_color." + error;
                                }
                            }
                            if (message.background_gradient_preset_id != null && message.hasOwnProperty("background_gradient_preset_id")) {
                                properties._background_gradient_preset_id = 1;
                                {
                                    var error = $root.google.protobuf.UInt32Value.verify(message.background_gradient_preset_id);
                                    if (error)
                                        return "background_gradient_preset_id." + error;
                                }
                            }
                            if (message.background_gradient_angle != null && message.hasOwnProperty("background_gradient_angle")) {
                                properties._background_gradient_angle = 1;
                                {
                                    var error = $root.google.protobuf.FloatValue.verify(message.background_gradient_angle);
                                    if (error)
                                        return "background_gradient_angle." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a ClientThemeSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings} ClientThemeSettings
                         */
                        ClientThemeSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings();
                            if (object.primary_color != null) {
                                if (typeof object.primary_color !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings.primary_color: object expected");
                                message.primary_color = $root.google.protobuf.UInt64Value.fromObject(object.primary_color);
                            }
                            if (object.background_gradient_preset_id != null) {
                                if (typeof object.background_gradient_preset_id !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings.background_gradient_preset_id: object expected");
                                message.background_gradient_preset_id = $root.google.protobuf.UInt32Value.fromObject(object.background_gradient_preset_id);
                            }
                            if (object.background_gradient_angle != null) {
                                if (typeof object.background_gradient_angle !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings.background_gradient_angle: object expected");
                                message.background_gradient_angle = $root.google.protobuf.FloatValue.fromObject(object.background_gradient_angle);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a ClientThemeSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings} message ClientThemeSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        ClientThemeSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.primary_color != null && message.hasOwnProperty("primary_color")) {
                                object.primary_color = $root.google.protobuf.UInt64Value.toObject(message.primary_color, options);
                                if (options.oneofs)
                                    object._primary_color = "primary_color";
                            }
                            if (message.background_gradient_preset_id != null && message.hasOwnProperty("background_gradient_preset_id")) {
                                object.background_gradient_preset_id = $root.google.protobuf.UInt32Value.toObject(message.background_gradient_preset_id, options);
                                if (options.oneofs)
                                    object._background_gradient_preset_id = "background_gradient_preset_id";
                            }
                            if (message.background_gradient_angle != null && message.hasOwnProperty("background_gradient_angle")) {
                                object.background_gradient_angle = $root.google.protobuf.FloatValue.toObject(message.background_gradient_angle, options);
                                if (options.oneofs)
                                    object._background_gradient_angle = "background_gradient_angle";
                            }
                            return object;
                        };

                        /**
                         * Converts this ClientThemeSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        ClientThemeSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for ClientThemeSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        ClientThemeSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings";
                        };

                        return ClientThemeSettings;
                    })();

                    PreloadedUserSettings.AppearanceSettings = (function() {

                        /**
                         * Properties of an AppearanceSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IAppearanceSettings
                         * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Theme|null} [theme] AppearanceSettings theme
                         * @property {boolean|null} [developer_mode] AppearanceSettings developer_mode
                         * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IClientThemeSettings|null} [client_theme_settings] AppearanceSettings client_theme_settings
                         * @property {boolean|null} [mobile_redesign_disabled] AppearanceSettings mobile_redesign_disabled
                         */

                        /**
                         * Constructs a new AppearanceSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents an AppearanceSettings.
                         * @implements IAppearanceSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAppearanceSettings=} [properties] Properties to set
                         */
                        function AppearanceSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * AppearanceSettings theme.
                         * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Theme} theme
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @instance
                         */
                        AppearanceSettings.prototype.theme = 0;

                        /**
                         * AppearanceSettings developer_mode.
                         * @member {boolean} developer_mode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @instance
                         */
                        AppearanceSettings.prototype.developer_mode = false;

                        /**
                         * AppearanceSettings client_theme_settings.
                         * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IClientThemeSettings|null|undefined} client_theme_settings
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @instance
                         */
                        AppearanceSettings.prototype.client_theme_settings = null;

                        /**
                         * AppearanceSettings mobile_redesign_disabled.
                         * @member {boolean} mobile_redesign_disabled
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @instance
                         */
                        AppearanceSettings.prototype.mobile_redesign_disabled = false;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * AppearanceSettings _client_theme_settings.
                         * @member {"client_theme_settings"|undefined} _client_theme_settings
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @instance
                         */
                        Object.defineProperty(AppearanceSettings.prototype, "_client_theme_settings", {
                            get: $util.oneOfGetter($oneOfFields = ["client_theme_settings"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new AppearanceSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAppearanceSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings} AppearanceSettings instance
                         */
                        AppearanceSettings.create = function create(properties) {
                            return new AppearanceSettings(properties);
                        };

                        /**
                         * Encodes the specified AppearanceSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAppearanceSettings} message AppearanceSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppearanceSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.theme != null && Object.hasOwnProperty.call(message, "theme"))
                                writer.uint32(/* id 1, wireType 0 =*/8).int32(message.theme);
                            if (message.developer_mode != null && Object.hasOwnProperty.call(message, "developer_mode"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.developer_mode);
                            if (message.client_theme_settings != null && Object.hasOwnProperty.call(message, "client_theme_settings"))
                                $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings.encode(message.client_theme_settings, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.mobile_redesign_disabled != null && Object.hasOwnProperty.call(message, "mobile_redesign_disabled"))
                                writer.uint32(/* id 4, wireType 0 =*/32).bool(message.mobile_redesign_disabled);
                            return writer;
                        };

                        /**
                         * Encodes the specified AppearanceSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAppearanceSettings} message AppearanceSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AppearanceSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes an AppearanceSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings} AppearanceSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppearanceSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.theme = reader.int32();
                                        break;
                                    }
                                case 2: {
                                        message.developer_mode = reader.bool();
                                        break;
                                    }
                                case 3: {
                                        message.client_theme_settings = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.mobile_redesign_disabled = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes an AppearanceSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings} AppearanceSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AppearanceSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies an AppearanceSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AppearanceSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.theme != null && message.hasOwnProperty("theme"))
                                switch (message.theme) {
                                default:
                                    return "theme: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.developer_mode != null && message.hasOwnProperty("developer_mode"))
                                if (typeof message.developer_mode !== "boolean")
                                    return "developer_mode: boolean expected";
                            if (message.client_theme_settings != null && message.hasOwnProperty("client_theme_settings")) {
                                properties._client_theme_settings = 1;
                                {
                                    var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings.verify(message.client_theme_settings);
                                    if (error)
                                        return "client_theme_settings." + error;
                                }
                            }
                            if (message.mobile_redesign_disabled != null && message.hasOwnProperty("mobile_redesign_disabled"))
                                if (typeof message.mobile_redesign_disabled !== "boolean")
                                    return "mobile_redesign_disabled: boolean expected";
                            return null;
                        };

                        /**
                         * Creates an AppearanceSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings} AppearanceSettings
                         */
                        AppearanceSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings();
                            switch (object.theme) {
                            default:
                                if (typeof object.theme === "number") {
                                    message.theme = object.theme;
                                    break;
                                }
                                break;
                            case "UNSET":
                            case 0:
                                message.theme = 0;
                                break;
                            case "DARK":
                            case 1:
                                message.theme = 1;
                                break;
                            case "LIGHT":
                            case 2:
                                message.theme = 2;
                                break;
                            }
                            if (object.developer_mode != null)
                                message.developer_mode = Boolean(object.developer_mode);
                            if (object.client_theme_settings != null) {
                                if (typeof object.client_theme_settings !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings.client_theme_settings: object expected");
                                message.client_theme_settings = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings.fromObject(object.client_theme_settings);
                            }
                            if (object.mobile_redesign_disabled != null)
                                message.mobile_redesign_disabled = Boolean(object.mobile_redesign_disabled);
                            return message;
                        };

                        /**
                         * Creates a plain object from an AppearanceSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings} message AppearanceSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AppearanceSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.theme = options.enums === String ? "UNSET" : 0;
                                object.developer_mode = false;
                                object.mobile_redesign_disabled = false;
                            }
                            if (message.theme != null && message.hasOwnProperty("theme"))
                                object.theme = options.enums === String ? $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Theme[message.theme] === undefined ? message.theme : $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Theme[message.theme] : message.theme;
                            if (message.developer_mode != null && message.hasOwnProperty("developer_mode"))
                                object.developer_mode = message.developer_mode;
                            if (message.client_theme_settings != null && message.hasOwnProperty("client_theme_settings")) {
                                object.client_theme_settings = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ClientThemeSettings.toObject(message.client_theme_settings, options);
                                if (options.oneofs)
                                    object._client_theme_settings = "client_theme_settings";
                            }
                            if (message.mobile_redesign_disabled != null && message.hasOwnProperty("mobile_redesign_disabled"))
                                object.mobile_redesign_disabled = message.mobile_redesign_disabled;
                            return object;
                        };

                        /**
                         * Converts this AppearanceSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AppearanceSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for AppearanceSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AppearanceSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AppearanceSettings";
                        };

                        return AppearanceSettings;
                    })();

                    PreloadedUserSettings.GuildFolder = (function() {

                        /**
                         * Properties of a GuildFolder.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IGuildFolder
                         * @property {Array.<number|Long>|null} [guild_ids] GuildFolder guild_ids
                         * @property {google.protobuf.IInt64Value|null} [id] GuildFolder id
                         * @property {google.protobuf.IStringValue|null} [name] GuildFolder name
                         * @property {google.protobuf.IUInt64Value|null} [color] GuildFolder color
                         */

                        /**
                         * Constructs a new GuildFolder.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a GuildFolder.
                         * @implements IGuildFolder
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolder=} [properties] Properties to set
                         */
                        function GuildFolder(properties) {
                            this.guild_ids = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * GuildFolder guild_ids.
                         * @member {Array.<number|Long>} guild_ids
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @instance
                         */
                        GuildFolder.prototype.guild_ids = $util.emptyArray;

                        /**
                         * GuildFolder id.
                         * @member {google.protobuf.IInt64Value|null|undefined} id
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @instance
                         */
                        GuildFolder.prototype.id = null;

                        /**
                         * GuildFolder name.
                         * @member {google.protobuf.IStringValue|null|undefined} name
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @instance
                         */
                        GuildFolder.prototype.name = null;

                        /**
                         * GuildFolder color.
                         * @member {google.protobuf.IUInt64Value|null|undefined} color
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @instance
                         */
                        GuildFolder.prototype.color = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * GuildFolder _id.
                         * @member {"id"|undefined} _id
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @instance
                         */
                        Object.defineProperty(GuildFolder.prototype, "_id", {
                            get: $util.oneOfGetter($oneOfFields = ["id"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * GuildFolder _name.
                         * @member {"name"|undefined} _name
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @instance
                         */
                        Object.defineProperty(GuildFolder.prototype, "_name", {
                            get: $util.oneOfGetter($oneOfFields = ["name"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * GuildFolder _color.
                         * @member {"color"|undefined} _color
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @instance
                         */
                        Object.defineProperty(GuildFolder.prototype, "_color", {
                            get: $util.oneOfGetter($oneOfFields = ["color"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new GuildFolder instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolder=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder} GuildFolder instance
                         */
                        GuildFolder.create = function create(properties) {
                            return new GuildFolder(properties);
                        };

                        /**
                         * Encodes the specified GuildFolder message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolder} message GuildFolder message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GuildFolder.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.guild_ids != null && message.guild_ids.length) {
                                writer.uint32(/* id 1, wireType 2 =*/10).fork();
                                for (var i = 0; i < message.guild_ids.length; ++i)
                                    writer.fixed64(message.guild_ids[i]);
                                writer.ldelim();
                            }
                            if (message.id != null && Object.hasOwnProperty.call(message, "id"))
                                $root.google.protobuf.Int64Value.encode(message.id, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();
                            if (message.name != null && Object.hasOwnProperty.call(message, "name"))
                                $root.google.protobuf.StringValue.encode(message.name, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();
                            if (message.color != null && Object.hasOwnProperty.call(message, "color"))
                                $root.google.protobuf.UInt64Value.encode(message.color, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified GuildFolder message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolder} message GuildFolder message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GuildFolder.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a GuildFolder message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder} GuildFolder
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GuildFolder.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.guild_ids && message.guild_ids.length))
                                            message.guild_ids = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.guild_ids.push(reader.fixed64());
                                        } else
                                            message.guild_ids.push(reader.fixed64());
                                        break;
                                    }
                                case 2: {
                                        message.id = $root.google.protobuf.Int64Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 3: {
                                        message.name = $root.google.protobuf.StringValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                case 4: {
                                        message.color = $root.google.protobuf.UInt64Value.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a GuildFolder message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder} GuildFolder
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GuildFolder.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a GuildFolder message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GuildFolder.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.guild_ids != null && message.hasOwnProperty("guild_ids")) {
                                if (!Array.isArray(message.guild_ids))
                                    return "guild_ids: array expected";
                                for (var i = 0; i < message.guild_ids.length; ++i)
                                    if (!$util.isInteger(message.guild_ids[i]) && !(message.guild_ids[i] && $util.isInteger(message.guild_ids[i].low) && $util.isInteger(message.guild_ids[i].high)))
                                        return "guild_ids: integer|Long[] expected";
                            }
                            if (message.id != null && message.hasOwnProperty("id")) {
                                properties._id = 1;
                                {
                                    var error = $root.google.protobuf.Int64Value.verify(message.id);
                                    if (error)
                                        return "id." + error;
                                }
                            }
                            if (message.name != null && message.hasOwnProperty("name")) {
                                properties._name = 1;
                                {
                                    var error = $root.google.protobuf.StringValue.verify(message.name);
                                    if (error)
                                        return "name." + error;
                                }
                            }
                            if (message.color != null && message.hasOwnProperty("color")) {
                                properties._color = 1;
                                {
                                    var error = $root.google.protobuf.UInt64Value.verify(message.color);
                                    if (error)
                                        return "color." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a GuildFolder message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder} GuildFolder
                         */
                        GuildFolder.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder();
                            if (object.guild_ids) {
                                if (!Array.isArray(object.guild_ids))
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.guild_ids: array expected");
                                message.guild_ids = [];
                                for (var i = 0; i < object.guild_ids.length; ++i)
                                    if ($util.Long)
                                        (message.guild_ids[i] = $util.Long.fromValue(object.guild_ids[i])).unsigned = false;
                                    else if (typeof object.guild_ids[i] === "string")
                                        message.guild_ids[i] = parseInt(object.guild_ids[i], 10);
                                    else if (typeof object.guild_ids[i] === "number")
                                        message.guild_ids[i] = object.guild_ids[i];
                                    else if (typeof object.guild_ids[i] === "object")
                                        message.guild_ids[i] = new $util.LongBits(object.guild_ids[i].low >>> 0, object.guild_ids[i].high >>> 0).toNumber();
                            }
                            if (object.id != null) {
                                if (typeof object.id !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.id: object expected");
                                message.id = $root.google.protobuf.Int64Value.fromObject(object.id);
                            }
                            if (object.name != null) {
                                if (typeof object.name !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.name: object expected");
                                message.name = $root.google.protobuf.StringValue.fromObject(object.name);
                            }
                            if (object.color != null) {
                                if (typeof object.color !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.color: object expected");
                                message.color = $root.google.protobuf.UInt64Value.fromObject(object.color);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a GuildFolder message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder} message GuildFolder
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GuildFolder.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults)
                                object.guild_ids = [];
                            if (message.guild_ids && message.guild_ids.length) {
                                object.guild_ids = [];
                                for (var j = 0; j < message.guild_ids.length; ++j)
                                    if (typeof message.guild_ids[j] === "number")
                                        object.guild_ids[j] = options.longs === String ? String(message.guild_ids[j]) : message.guild_ids[j];
                                    else
                                        object.guild_ids[j] = options.longs === String ? $util.Long.prototype.toString.call(message.guild_ids[j]) : options.longs === Number ? new $util.LongBits(message.guild_ids[j].low >>> 0, message.guild_ids[j].high >>> 0).toNumber() : message.guild_ids[j];
                            }
                            if (message.id != null && message.hasOwnProperty("id")) {
                                object.id = $root.google.protobuf.Int64Value.toObject(message.id, options);
                                if (options.oneofs)
                                    object._id = "id";
                            }
                            if (message.name != null && message.hasOwnProperty("name")) {
                                object.name = $root.google.protobuf.StringValue.toObject(message.name, options);
                                if (options.oneofs)
                                    object._name = "name";
                            }
                            if (message.color != null && message.hasOwnProperty("color")) {
                                object.color = $root.google.protobuf.UInt64Value.toObject(message.color, options);
                                if (options.oneofs)
                                    object._color = "color";
                            }
                            return object;
                        };

                        /**
                         * Converts this GuildFolder to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GuildFolder.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for GuildFolder
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GuildFolder.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder";
                        };

                        return GuildFolder;
                    })();

                    PreloadedUserSettings.GuildFolders = (function() {

                        /**
                         * Properties of a GuildFolders.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IGuildFolders
                         * @property {Array.<discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolder>|null} [folders] GuildFolders folders
                         * @property {Array.<number|Long>|null} [guild_positions] GuildFolders guild_positions
                         */

                        /**
                         * Constructs a new GuildFolders.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a GuildFolders.
                         * @implements IGuildFolders
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolders=} [properties] Properties to set
                         */
                        function GuildFolders(properties) {
                            this.folders = [];
                            this.guild_positions = [];
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * GuildFolders folders.
                         * @member {Array.<discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolder>} folders
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @instance
                         */
                        GuildFolders.prototype.folders = $util.emptyArray;

                        /**
                         * GuildFolders guild_positions.
                         * @member {Array.<number|Long>} guild_positions
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @instance
                         */
                        GuildFolders.prototype.guild_positions = $util.emptyArray;

                        /**
                         * Creates a new GuildFolders instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolders=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders} GuildFolders instance
                         */
                        GuildFolders.create = function create(properties) {
                            return new GuildFolders(properties);
                        };

                        /**
                         * Encodes the specified GuildFolders message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolders} message GuildFolders message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GuildFolders.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.folders != null && message.folders.length)
                                for (var i = 0; i < message.folders.length; ++i)
                                    $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.encode(message.folders[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            if (message.guild_positions != null && message.guild_positions.length) {
                                writer.uint32(/* id 2, wireType 2 =*/18).fork();
                                for (var i = 0; i < message.guild_positions.length; ++i)
                                    writer.fixed64(message.guild_positions[i]);
                                writer.ldelim();
                            }
                            return writer;
                        };

                        /**
                         * Encodes the specified GuildFolders message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IGuildFolders} message GuildFolders message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        GuildFolders.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a GuildFolders message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders} GuildFolders
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GuildFolders.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (!(message.folders && message.folders.length))
                                            message.folders = [];
                                        message.folders.push($root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.decode(reader, reader.uint32()));
                                        break;
                                    }
                                case 2: {
                                        if (!(message.guild_positions && message.guild_positions.length))
                                            message.guild_positions = [];
                                        if ((tag & 7) === 2) {
                                            var end2 = reader.uint32() + reader.pos;
                                            while (reader.pos < end2)
                                                message.guild_positions.push(reader.fixed64());
                                        } else
                                            message.guild_positions.push(reader.fixed64());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a GuildFolders message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders} GuildFolders
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        GuildFolders.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a GuildFolders message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        GuildFolders.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.folders != null && message.hasOwnProperty("folders")) {
                                if (!Array.isArray(message.folders))
                                    return "folders: array expected";
                                for (var i = 0; i < message.folders.length; ++i) {
                                    var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.verify(message.folders[i]);
                                    if (error)
                                        return "folders." + error;
                                }
                            }
                            if (message.guild_positions != null && message.hasOwnProperty("guild_positions")) {
                                if (!Array.isArray(message.guild_positions))
                                    return "guild_positions: array expected";
                                for (var i = 0; i < message.guild_positions.length; ++i)
                                    if (!$util.isInteger(message.guild_positions[i]) && !(message.guild_positions[i] && $util.isInteger(message.guild_positions[i].low) && $util.isInteger(message.guild_positions[i].high)))
                                        return "guild_positions: integer|Long[] expected";
                            }
                            return null;
                        };

                        /**
                         * Creates a GuildFolders message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders} GuildFolders
                         */
                        GuildFolders.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders();
                            if (object.folders) {
                                if (!Array.isArray(object.folders))
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders.folders: array expected");
                                message.folders = [];
                                for (var i = 0; i < object.folders.length; ++i) {
                                    if (typeof object.folders[i] !== "object")
                                        throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders.folders: object expected");
                                    message.folders[i] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.fromObject(object.folders[i]);
                                }
                            }
                            if (object.guild_positions) {
                                if (!Array.isArray(object.guild_positions))
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders.guild_positions: array expected");
                                message.guild_positions = [];
                                for (var i = 0; i < object.guild_positions.length; ++i)
                                    if ($util.Long)
                                        (message.guild_positions[i] = $util.Long.fromValue(object.guild_positions[i])).unsigned = false;
                                    else if (typeof object.guild_positions[i] === "string")
                                        message.guild_positions[i] = parseInt(object.guild_positions[i], 10);
                                    else if (typeof object.guild_positions[i] === "number")
                                        message.guild_positions[i] = object.guild_positions[i];
                                    else if (typeof object.guild_positions[i] === "object")
                                        message.guild_positions[i] = new $util.LongBits(object.guild_positions[i].low >>> 0, object.guild_positions[i].high >>> 0).toNumber();
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a GuildFolders message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders} message GuildFolders
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        GuildFolders.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.arrays || options.defaults) {
                                object.folders = [];
                                object.guild_positions = [];
                            }
                            if (message.folders && message.folders.length) {
                                object.folders = [];
                                for (var j = 0; j < message.folders.length; ++j)
                                    object.folders[j] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolder.toObject(message.folders[j], options);
                            }
                            if (message.guild_positions && message.guild_positions.length) {
                                object.guild_positions = [];
                                for (var j = 0; j < message.guild_positions.length; ++j)
                                    if (typeof message.guild_positions[j] === "number")
                                        object.guild_positions[j] = options.longs === String ? String(message.guild_positions[j]) : message.guild_positions[j];
                                    else
                                        object.guild_positions[j] = options.longs === String ? $util.Long.prototype.toString.call(message.guild_positions[j]) : options.longs === Number ? new $util.LongBits(message.guild_positions[j].low >>> 0, message.guild_positions[j].high >>> 0).toNumber() : message.guild_positions[j];
                            }
                            return object;
                        };

                        /**
                         * Converts this GuildFolders to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        GuildFolders.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for GuildFolders
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        GuildFolders.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.GuildFolders";
                        };

                        return GuildFolders;
                    })();

                    /**
                     * FavoriteChannelType enum.
                     * @name discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannelType
                     * @enum {number}
                     * @property {number} UNSET_FAVORITE_CHANNEL_TYPE=0 UNSET_FAVORITE_CHANNEL_TYPE value
                     * @property {number} REFERENCE_ORIGINAL=1 REFERENCE_ORIGINAL value
                     * @property {number} CATEGORY=2 CATEGORY value
                     */
                    PreloadedUserSettings.FavoriteChannelType = (function() {
                        var valuesById = {}, values = Object.create(valuesById);
                        values[valuesById[0] = "UNSET_FAVORITE_CHANNEL_TYPE"] = 0;
                        values[valuesById[1] = "REFERENCE_ORIGINAL"] = 1;
                        values[valuesById[2] = "CATEGORY"] = 2;
                        return values;
                    })();

                    PreloadedUserSettings.FavoriteChannel = (function() {

                        /**
                         * Properties of a FavoriteChannel.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IFavoriteChannel
                         * @property {string|null} [nickname] FavoriteChannel nickname
                         * @property {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannelType|null} [type] FavoriteChannel type
                         * @property {number|null} [position] FavoriteChannel position
                         * @property {number|Long|null} [parent_id] FavoriteChannel parent_id
                         */

                        /**
                         * Constructs a new FavoriteChannel.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a FavoriteChannel.
                         * @implements IFavoriteChannel
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavoriteChannel=} [properties] Properties to set
                         */
                        function FavoriteChannel(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * FavoriteChannel nickname.
                         * @member {string} nickname
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @instance
                         */
                        FavoriteChannel.prototype.nickname = "";

                        /**
                         * FavoriteChannel type.
                         * @member {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannelType} type
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @instance
                         */
                        FavoriteChannel.prototype.type = 0;

                        /**
                         * FavoriteChannel position.
                         * @member {number} position
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @instance
                         */
                        FavoriteChannel.prototype.position = 0;

                        /**
                         * FavoriteChannel parent_id.
                         * @member {number|Long} parent_id
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @instance
                         */
                        FavoriteChannel.prototype.parent_id = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                        /**
                         * Creates a new FavoriteChannel instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavoriteChannel=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel} FavoriteChannel instance
                         */
                        FavoriteChannel.create = function create(properties) {
                            return new FavoriteChannel(properties);
                        };

                        /**
                         * Encodes the specified FavoriteChannel message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavoriteChannel} message FavoriteChannel message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FavoriteChannel.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.nickname != null && Object.hasOwnProperty.call(message, "nickname"))
                                writer.uint32(/* id 1, wireType 2 =*/10).string(message.nickname);
                            if (message.type != null && Object.hasOwnProperty.call(message, "type"))
                                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);
                            if (message.position != null && Object.hasOwnProperty.call(message, "position"))
                                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.position);
                            if (message.parent_id != null && Object.hasOwnProperty.call(message, "parent_id"))
                                writer.uint32(/* id 4, wireType 1 =*/33).fixed64(message.parent_id);
                            return writer;
                        };

                        /**
                         * Encodes the specified FavoriteChannel message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavoriteChannel} message FavoriteChannel message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        FavoriteChannel.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a FavoriteChannel message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel} FavoriteChannel
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FavoriteChannel.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.nickname = reader.string();
                                        break;
                                    }
                                case 2: {
                                        message.type = reader.int32();
                                        break;
                                    }
                                case 3: {
                                        message.position = reader.uint32();
                                        break;
                                    }
                                case 4: {
                                        message.parent_id = reader.fixed64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a FavoriteChannel message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel} FavoriteChannel
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        FavoriteChannel.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a FavoriteChannel message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        FavoriteChannel.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.nickname != null && message.hasOwnProperty("nickname"))
                                if (!$util.isString(message.nickname))
                                    return "nickname: string expected";
                            if (message.type != null && message.hasOwnProperty("type"))
                                switch (message.type) {
                                default:
                                    return "type: enum value expected";
                                case 0:
                                case 1:
                                case 2:
                                    break;
                                }
                            if (message.position != null && message.hasOwnProperty("position"))
                                if (!$util.isInteger(message.position))
                                    return "position: integer expected";
                            if (message.parent_id != null && message.hasOwnProperty("parent_id"))
                                if (!$util.isInteger(message.parent_id) && !(message.parent_id && $util.isInteger(message.parent_id.low) && $util.isInteger(message.parent_id.high)))
                                    return "parent_id: integer|Long expected";
                            return null;
                        };

                        /**
                         * Creates a FavoriteChannel message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel} FavoriteChannel
                         */
                        FavoriteChannel.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel();
                            if (object.nickname != null)
                                message.nickname = String(object.nickname);
                            switch (object.type) {
                            default:
                                if (typeof object.type === "number") {
                                    message.type = object.type;
                                    break;
                                }
                                break;
                            case "UNSET_FAVORITE_CHANNEL_TYPE":
                            case 0:
                                message.type = 0;
                                break;
                            case "REFERENCE_ORIGINAL":
                            case 1:
                                message.type = 1;
                                break;
                            case "CATEGORY":
                            case 2:
                                message.type = 2;
                                break;
                            }
                            if (object.position != null)
                                message.position = object.position >>> 0;
                            if (object.parent_id != null)
                                if ($util.Long)
                                    (message.parent_id = $util.Long.fromValue(object.parent_id)).unsigned = false;
                                else if (typeof object.parent_id === "string")
                                    message.parent_id = parseInt(object.parent_id, 10);
                                else if (typeof object.parent_id === "number")
                                    message.parent_id = object.parent_id;
                                else if (typeof object.parent_id === "object")
                                    message.parent_id = new $util.LongBits(object.parent_id.low >>> 0, object.parent_id.high >>> 0).toNumber();
                            return message;
                        };

                        /**
                         * Creates a plain object from a FavoriteChannel message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel} message FavoriteChannel
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        FavoriteChannel.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.nickname = "";
                                object.type = options.enums === String ? "UNSET_FAVORITE_CHANNEL_TYPE" : 0;
                                object.position = 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.parent_id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.parent_id = options.longs === String ? "0" : 0;
                            }
                            if (message.nickname != null && message.hasOwnProperty("nickname"))
                                object.nickname = message.nickname;
                            if (message.type != null && message.hasOwnProperty("type"))
                                object.type = options.enums === String ? $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannelType[message.type] === undefined ? message.type : $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannelType[message.type] : message.type;
                            if (message.position != null && message.hasOwnProperty("position"))
                                object.position = message.position;
                            if (message.parent_id != null && message.hasOwnProperty("parent_id"))
                                if (typeof message.parent_id === "number")
                                    object.parent_id = options.longs === String ? String(message.parent_id) : message.parent_id;
                                else
                                    object.parent_id = options.longs === String ? $util.Long.prototype.toString.call(message.parent_id) : options.longs === Number ? new $util.LongBits(message.parent_id.low >>> 0, message.parent_id.high >>> 0).toNumber() : message.parent_id;
                            return object;
                        };

                        /**
                         * Converts this FavoriteChannel to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        FavoriteChannel.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for FavoriteChannel
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        FavoriteChannel.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel";
                        };

                        return FavoriteChannel;
                    })();

                    PreloadedUserSettings.Favorites = (function() {

                        /**
                         * Properties of a Favorites.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IFavorites
                         * @property {Object.<string,discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavoriteChannel>|null} [favorite_channels] Favorites favorite_channels
                         * @property {boolean|null} [muted] Favorites muted
                         */

                        /**
                         * Constructs a new Favorites.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a Favorites.
                         * @implements IFavorites
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavorites=} [properties] Properties to set
                         */
                        function Favorites(properties) {
                            this.favorite_channels = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * Favorites favorite_channels.
                         * @member {Object.<string,discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavoriteChannel>} favorite_channels
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @instance
                         */
                        Favorites.prototype.favorite_channels = $util.emptyObject;

                        /**
                         * Favorites muted.
                         * @member {boolean} muted
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @instance
                         */
                        Favorites.prototype.muted = false;

                        /**
                         * Creates a new Favorites instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavorites=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites} Favorites instance
                         */
                        Favorites.create = function create(properties) {
                            return new Favorites(properties);
                        };

                        /**
                         * Encodes the specified Favorites message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavorites} message Favorites message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Favorites.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.favorite_channels != null && Object.hasOwnProperty.call(message, "favorite_channels"))
                                for (var keys = Object.keys(message.favorite_channels), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 1 =*/9).fixed64(keys[i]);
                                    $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel.encode(message.favorite_channels[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.muted != null && Object.hasOwnProperty.call(message, "muted"))
                                writer.uint32(/* id 2, wireType 0 =*/16).bool(message.muted);
                            return writer;
                        };

                        /**
                         * Encodes the specified Favorites message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IFavorites} message Favorites message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        Favorites.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a Favorites message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites} Favorites
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Favorites.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.favorite_channels === $util.emptyObject)
                                            message.favorite_channels = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = 0;
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.fixed64();
                                                break;
                                            case 2:
                                                value = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.favorite_channels[typeof key === "object" ? $util.longToHash(key) : key] = value;
                                        break;
                                    }
                                case 2: {
                                        message.muted = reader.bool();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a Favorites message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites} Favorites
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        Favorites.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a Favorites message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        Favorites.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.favorite_channels != null && message.hasOwnProperty("favorite_channels")) {
                                if (!$util.isObject(message.favorite_channels))
                                    return "favorite_channels: object expected";
                                var key = Object.keys(message.favorite_channels);
                                for (var i = 0; i < key.length; ++i) {
                                    if (!$util.key64Re.test(key[i]))
                                        return "favorite_channels: integer|Long key{k:fixed64} expected";
                                    {
                                        var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel.verify(message.favorite_channels[key[i]]);
                                        if (error)
                                            return "favorite_channels." + error;
                                    }
                                }
                            }
                            if (message.muted != null && message.hasOwnProperty("muted"))
                                if (typeof message.muted !== "boolean")
                                    return "muted: boolean expected";
                            return null;
                        };

                        /**
                         * Creates a Favorites message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites} Favorites
                         */
                        Favorites.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites();
                            if (object.favorite_channels) {
                                if (typeof object.favorite_channels !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites.favorite_channels: object expected");
                                message.favorite_channels = {};
                                for (var keys = Object.keys(object.favorite_channels), i = 0; i < keys.length; ++i) {
                                    if (typeof object.favorite_channels[keys[i]] !== "object")
                                        throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites.favorite_channels: object expected");
                                    message.favorite_channels[keys[i]] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel.fromObject(object.favorite_channels[keys[i]]);
                                }
                            }
                            if (object.muted != null)
                                message.muted = Boolean(object.muted);
                            return message;
                        };

                        /**
                         * Creates a plain object from a Favorites message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites} message Favorites
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        Favorites.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults)
                                object.favorite_channels = {};
                            if (options.defaults)
                                object.muted = false;
                            var keys2;
                            if (message.favorite_channels && (keys2 = Object.keys(message.favorite_channels)).length) {
                                object.favorite_channels = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.favorite_channels[keys2[j]] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.FavoriteChannel.toObject(message.favorite_channels[keys2[j]], options);
                            }
                            if (message.muted != null && message.hasOwnProperty("muted"))
                                object.muted = message.muted;
                            return object;
                        };

                        /**
                         * Converts this Favorites to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        Favorites.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for Favorites
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        Favorites.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.Favorites";
                        };

                        return Favorites;
                    })();

                    PreloadedUserSettings.AudioContextSetting = (function() {

                        /**
                         * Properties of an AudioContextSetting.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IAudioContextSetting
                         * @property {boolean|null} [muted] AudioContextSetting muted
                         * @property {number|null} [volume] AudioContextSetting volume
                         * @property {number|Long|null} [modified_at] AudioContextSetting modified_at
                         */

                        /**
                         * Constructs a new AudioContextSetting.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents an AudioContextSetting.
                         * @implements IAudioContextSetting
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioContextSetting=} [properties] Properties to set
                         */
                        function AudioContextSetting(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * AudioContextSetting muted.
                         * @member {boolean} muted
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @instance
                         */
                        AudioContextSetting.prototype.muted = false;

                        /**
                         * AudioContextSetting volume.
                         * @member {number} volume
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @instance
                         */
                        AudioContextSetting.prototype.volume = 0;

                        /**
                         * AudioContextSetting modified_at.
                         * @member {number|Long} modified_at
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @instance
                         */
                        AudioContextSetting.prototype.modified_at = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

                        /**
                         * Creates a new AudioContextSetting instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioContextSetting=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting} AudioContextSetting instance
                         */
                        AudioContextSetting.create = function create(properties) {
                            return new AudioContextSetting(properties);
                        };

                        /**
                         * Encodes the specified AudioContextSetting message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioContextSetting} message AudioContextSetting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AudioContextSetting.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.muted != null && Object.hasOwnProperty.call(message, "muted"))
                                writer.uint32(/* id 1, wireType 0 =*/8).bool(message.muted);
                            if (message.volume != null && Object.hasOwnProperty.call(message, "volume"))
                                writer.uint32(/* id 2, wireType 5 =*/21).float(message.volume);
                            if (message.modified_at != null && Object.hasOwnProperty.call(message, "modified_at"))
                                writer.uint32(/* id 3, wireType 1 =*/25).fixed64(message.modified_at);
                            return writer;
                        };

                        /**
                         * Encodes the specified AudioContextSetting message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioContextSetting} message AudioContextSetting message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AudioContextSetting.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes an AudioContextSetting message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting} AudioContextSetting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AudioContextSetting.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.muted = reader.bool();
                                        break;
                                    }
                                case 2: {
                                        message.volume = reader.float();
                                        break;
                                    }
                                case 3: {
                                        message.modified_at = reader.fixed64();
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes an AudioContextSetting message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting} AudioContextSetting
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AudioContextSetting.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies an AudioContextSetting message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AudioContextSetting.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.muted != null && message.hasOwnProperty("muted"))
                                if (typeof message.muted !== "boolean")
                                    return "muted: boolean expected";
                            if (message.volume != null && message.hasOwnProperty("volume"))
                                if (typeof message.volume !== "number")
                                    return "volume: number expected";
                            if (message.modified_at != null && message.hasOwnProperty("modified_at"))
                                if (!$util.isInteger(message.modified_at) && !(message.modified_at && $util.isInteger(message.modified_at.low) && $util.isInteger(message.modified_at.high)))
                                    return "modified_at: integer|Long expected";
                            return null;
                        };

                        /**
                         * Creates an AudioContextSetting message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting} AudioContextSetting
                         */
                        AudioContextSetting.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting();
                            if (object.muted != null)
                                message.muted = Boolean(object.muted);
                            if (object.volume != null)
                                message.volume = Number(object.volume);
                            if (object.modified_at != null)
                                if ($util.Long)
                                    (message.modified_at = $util.Long.fromValue(object.modified_at)).unsigned = false;
                                else if (typeof object.modified_at === "string")
                                    message.modified_at = parseInt(object.modified_at, 10);
                                else if (typeof object.modified_at === "number")
                                    message.modified_at = object.modified_at;
                                else if (typeof object.modified_at === "object")
                                    message.modified_at = new $util.LongBits(object.modified_at.low >>> 0, object.modified_at.high >>> 0).toNumber();
                            return message;
                        };

                        /**
                         * Creates a plain object from an AudioContextSetting message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting} message AudioContextSetting
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AudioContextSetting.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.defaults) {
                                object.muted = false;
                                object.volume = 0;
                                if ($util.Long) {
                                    var long = new $util.Long(0, 0, false);
                                    object.modified_at = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                                } else
                                    object.modified_at = options.longs === String ? "0" : 0;
                            }
                            if (message.muted != null && message.hasOwnProperty("muted"))
                                object.muted = message.muted;
                            if (message.volume != null && message.hasOwnProperty("volume"))
                                object.volume = options.json && !isFinite(message.volume) ? String(message.volume) : message.volume;
                            if (message.modified_at != null && message.hasOwnProperty("modified_at"))
                                if (typeof message.modified_at === "number")
                                    object.modified_at = options.longs === String ? String(message.modified_at) : message.modified_at;
                                else
                                    object.modified_at = options.longs === String ? $util.Long.prototype.toString.call(message.modified_at) : options.longs === Number ? new $util.LongBits(message.modified_at.low >>> 0, message.modified_at.high >>> 0).toNumber() : message.modified_at;
                            return object;
                        };

                        /**
                         * Converts this AudioContextSetting to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AudioContextSetting.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for AudioContextSetting
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AudioContextSetting.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting";
                        };

                        return AudioContextSetting;
                    })();

                    PreloadedUserSettings.AudioSettings = (function() {

                        /**
                         * Properties of an AudioSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface IAudioSettings
                         * @property {Object.<string,discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioContextSetting>|null} [user] AudioSettings user
                         * @property {Object.<string,discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioContextSetting>|null} [stream] AudioSettings stream
                         */

                        /**
                         * Constructs a new AudioSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents an AudioSettings.
                         * @implements IAudioSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioSettings=} [properties] Properties to set
                         */
                        function AudioSettings(properties) {
                            this.user = {};
                            this.stream = {};
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * AudioSettings user.
                         * @member {Object.<string,discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioContextSetting>} user
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @instance
                         */
                        AudioSettings.prototype.user = $util.emptyObject;

                        /**
                         * AudioSettings stream.
                         * @member {Object.<string,discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioContextSetting>} stream
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @instance
                         */
                        AudioSettings.prototype.stream = $util.emptyObject;

                        /**
                         * Creates a new AudioSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings} AudioSettings instance
                         */
                        AudioSettings.create = function create(properties) {
                            return new AudioSettings(properties);
                        };

                        /**
                         * Encodes the specified AudioSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioSettings} message AudioSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AudioSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.user != null && Object.hasOwnProperty.call(message, "user"))
                                for (var keys = Object.keys(message.user), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 1, wireType 2 =*/10).fork().uint32(/* id 1, wireType 1 =*/9).fixed64(keys[i]);
                                    $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.encode(message.user[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            if (message.stream != null && Object.hasOwnProperty.call(message, "stream"))
                                for (var keys = Object.keys(message.stream), i = 0; i < keys.length; ++i) {
                                    writer.uint32(/* id 2, wireType 2 =*/18).fork().uint32(/* id 1, wireType 1 =*/9).fixed64(keys[i]);
                                    $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.encode(message.stream[keys[i]], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim().ldelim();
                                }
                            return writer;
                        };

                        /**
                         * Encodes the specified AudioSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.IAudioSettings} message AudioSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        AudioSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes an AudioSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings} AudioSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AudioSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings(), key, value;
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        if (message.user === $util.emptyObject)
                                            message.user = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = 0;
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.fixed64();
                                                break;
                                            case 2:
                                                value = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.user[typeof key === "object" ? $util.longToHash(key) : key] = value;
                                        break;
                                    }
                                case 2: {
                                        if (message.stream === $util.emptyObject)
                                            message.stream = {};
                                        var end2 = reader.uint32() + reader.pos;
                                        key = 0;
                                        value = null;
                                        while (reader.pos < end2) {
                                            var tag2 = reader.uint32();
                                            switch (tag2 >>> 3) {
                                            case 1:
                                                key = reader.fixed64();
                                                break;
                                            case 2:
                                                value = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.decode(reader, reader.uint32());
                                                break;
                                            default:
                                                reader.skipType(tag2 & 7);
                                                break;
                                            }
                                        }
                                        message.stream[typeof key === "object" ? $util.longToHash(key) : key] = value;
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes an AudioSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings} AudioSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        AudioSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies an AudioSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        AudioSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            if (message.user != null && message.hasOwnProperty("user")) {
                                if (!$util.isObject(message.user))
                                    return "user: object expected";
                                var key = Object.keys(message.user);
                                for (var i = 0; i < key.length; ++i) {
                                    if (!$util.key64Re.test(key[i]))
                                        return "user: integer|Long key{k:fixed64} expected";
                                    {
                                        var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.verify(message.user[key[i]]);
                                        if (error)
                                            return "user." + error;
                                    }
                                }
                            }
                            if (message.stream != null && message.hasOwnProperty("stream")) {
                                if (!$util.isObject(message.stream))
                                    return "stream: object expected";
                                var key = Object.keys(message.stream);
                                for (var i = 0; i < key.length; ++i) {
                                    if (!$util.key64Re.test(key[i]))
                                        return "stream: integer|Long key{k:fixed64} expected";
                                    {
                                        var error = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.verify(message.stream[key[i]]);
                                        if (error)
                                            return "stream." + error;
                                    }
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates an AudioSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings} AudioSettings
                         */
                        AudioSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings();
                            if (object.user) {
                                if (typeof object.user !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.user: object expected");
                                message.user = {};
                                for (var keys = Object.keys(object.user), i = 0; i < keys.length; ++i) {
                                    if (typeof object.user[keys[i]] !== "object")
                                        throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.user: object expected");
                                    message.user[keys[i]] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.fromObject(object.user[keys[i]]);
                                }
                            }
                            if (object.stream) {
                                if (typeof object.stream !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.stream: object expected");
                                message.stream = {};
                                for (var keys = Object.keys(object.stream), i = 0; i < keys.length; ++i) {
                                    if (typeof object.stream[keys[i]] !== "object")
                                        throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings.stream: object expected");
                                    message.stream[keys[i]] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.fromObject(object.stream[keys[i]]);
                                }
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from an AudioSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings} message AudioSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        AudioSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (options.objects || options.defaults) {
                                object.user = {};
                                object.stream = {};
                            }
                            var keys2;
                            if (message.user && (keys2 = Object.keys(message.user)).length) {
                                object.user = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.user[keys2[j]] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.toObject(message.user[keys2[j]], options);
                            }
                            if (message.stream && (keys2 = Object.keys(message.stream)).length) {
                                object.stream = {};
                                for (var j = 0; j < keys2.length; ++j)
                                    object.stream[keys2[j]] = $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioContextSetting.toObject(message.stream[keys2[j]], options);
                            }
                            return object;
                        };

                        /**
                         * Converts this AudioSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        AudioSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for AudioSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        AudioSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.AudioSettings";
                        };

                        return AudioSettings;
                    })();

                    PreloadedUserSettings.CommunitiesSettings = (function() {

                        /**
                         * Properties of a CommunitiesSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @interface ICommunitiesSettings
                         * @property {google.protobuf.IBoolValue|null} [disable_home_auto_nav] CommunitiesSettings disable_home_auto_nav
                         */

                        /**
                         * Constructs a new CommunitiesSettings.
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings
                         * @classdesc Represents a CommunitiesSettings.
                         * @implements ICommunitiesSettings
                         * @constructor
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICommunitiesSettings=} [properties] Properties to set
                         */
                        function CommunitiesSettings(properties) {
                            if (properties)
                                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                                    if (properties[keys[i]] != null)
                                        this[keys[i]] = properties[keys[i]];
                        }

                        /**
                         * CommunitiesSettings disable_home_auto_nav.
                         * @member {google.protobuf.IBoolValue|null|undefined} disable_home_auto_nav
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @instance
                         */
                        CommunitiesSettings.prototype.disable_home_auto_nav = null;

                        // OneOf field names bound to virtual getters and setters
                        var $oneOfFields;

                        /**
                         * CommunitiesSettings _disable_home_auto_nav.
                         * @member {"disable_home_auto_nav"|undefined} _disable_home_auto_nav
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @instance
                         */
                        Object.defineProperty(CommunitiesSettings.prototype, "_disable_home_auto_nav", {
                            get: $util.oneOfGetter($oneOfFields = ["disable_home_auto_nav"]),
                            set: $util.oneOfSetter($oneOfFields)
                        });

                        /**
                         * Creates a new CommunitiesSettings instance using the specified properties.
                         * @function create
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICommunitiesSettings=} [properties] Properties to set
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings} CommunitiesSettings instance
                         */
                        CommunitiesSettings.create = function create(properties) {
                            return new CommunitiesSettings(properties);
                        };

                        /**
                         * Encodes the specified CommunitiesSettings message. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings.verify|verify} messages.
                         * @function encode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICommunitiesSettings} message CommunitiesSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommunitiesSettings.encode = function encode(message, writer) {
                            if (!writer)
                                writer = $Writer.create();
                            if (message.disable_home_auto_nav != null && Object.hasOwnProperty.call(message, "disable_home_auto_nav"))
                                $root.google.protobuf.BoolValue.encode(message.disable_home_auto_nav, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();
                            return writer;
                        };

                        /**
                         * Encodes the specified CommunitiesSettings message, length delimited. Does not implicitly {@link discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings.verify|verify} messages.
                         * @function encodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.ICommunitiesSettings} message CommunitiesSettings message or plain object to encode
                         * @param {$protobuf.Writer} [writer] Writer to encode to
                         * @returns {$protobuf.Writer} Writer
                         */
                        CommunitiesSettings.encodeDelimited = function encodeDelimited(message, writer) {
                            return this.encode(message, writer).ldelim();
                        };

                        /**
                         * Decodes a CommunitiesSettings message from the specified reader or buffer.
                         * @function decode
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @param {number} [length] Message length if known beforehand
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings} CommunitiesSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommunitiesSettings.decode = function decode(reader, length) {
                            if (!(reader instanceof $Reader))
                                reader = $Reader.create(reader);
                            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings();
                            while (reader.pos < end) {
                                var tag = reader.uint32();
                                switch (tag >>> 3) {
                                case 1: {
                                        message.disable_home_auto_nav = $root.google.protobuf.BoolValue.decode(reader, reader.uint32());
                                        break;
                                    }
                                default:
                                    reader.skipType(tag & 7);
                                    break;
                                }
                            }
                            return message;
                        };

                        /**
                         * Decodes a CommunitiesSettings message from the specified reader or buffer, length delimited.
                         * @function decodeDelimited
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @static
                         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings} CommunitiesSettings
                         * @throws {Error} If the payload is not a reader or valid buffer
                         * @throws {$protobuf.util.ProtocolError} If required fields are missing
                         */
                        CommunitiesSettings.decodeDelimited = function decodeDelimited(reader) {
                            if (!(reader instanceof $Reader))
                                reader = new $Reader(reader);
                            return this.decode(reader, reader.uint32());
                        };

                        /**
                         * Verifies a CommunitiesSettings message.
                         * @function verify
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @static
                         * @param {Object.<string,*>} message Plain object to verify
                         * @returns {string|null} `null` if valid, otherwise the reason why it is not
                         */
                        CommunitiesSettings.verify = function verify(message) {
                            if (typeof message !== "object" || message === null)
                                return "object expected";
                            var properties = {};
                            if (message.disable_home_auto_nav != null && message.hasOwnProperty("disable_home_auto_nav")) {
                                properties._disable_home_auto_nav = 1;
                                {
                                    var error = $root.google.protobuf.BoolValue.verify(message.disable_home_auto_nav);
                                    if (error)
                                        return "disable_home_auto_nav." + error;
                                }
                            }
                            return null;
                        };

                        /**
                         * Creates a CommunitiesSettings message from a plain object. Also converts values to their respective internal types.
                         * @function fromObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @static
                         * @param {Object.<string,*>} object Plain object
                         * @returns {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings} CommunitiesSettings
                         */
                        CommunitiesSettings.fromObject = function fromObject(object) {
                            if (object instanceof $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings)
                                return object;
                            var message = new $root.discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings();
                            if (object.disable_home_auto_nav != null) {
                                if (typeof object.disable_home_auto_nav !== "object")
                                    throw TypeError(".discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings.disable_home_auto_nav: object expected");
                                message.disable_home_auto_nav = $root.google.protobuf.BoolValue.fromObject(object.disable_home_auto_nav);
                            }
                            return message;
                        };

                        /**
                         * Creates a plain object from a CommunitiesSettings message. Also converts values to other types if specified.
                         * @function toObject
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @static
                         * @param {discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings} message CommunitiesSettings
                         * @param {$protobuf.IConversionOptions} [options] Conversion options
                         * @returns {Object.<string,*>} Plain object
                         */
                        CommunitiesSettings.toObject = function toObject(message, options) {
                            if (!options)
                                options = {};
                            var object = {};
                            if (message.disable_home_auto_nav != null && message.hasOwnProperty("disable_home_auto_nav")) {
                                object.disable_home_auto_nav = $root.google.protobuf.BoolValue.toObject(message.disable_home_auto_nav, options);
                                if (options.oneofs)
                                    object._disable_home_auto_nav = "disable_home_auto_nav";
                            }
                            return object;
                        };

                        /**
                         * Converts this CommunitiesSettings to JSON.
                         * @function toJSON
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @instance
                         * @returns {Object.<string,*>} JSON object
                         */
                        CommunitiesSettings.prototype.toJSON = function toJSON() {
                            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
                        };

                        /**
                         * Gets the default type url for CommunitiesSettings
                         * @function getTypeUrl
                         * @memberof discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings
                         * @static
                         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
                         * @returns {string} The default type url
                         */
                        CommunitiesSettings.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                            if (typeUrlPrefix === undefined) {
                                typeUrlPrefix = "type.googleapis.com";
                            }
                            return typeUrlPrefix + "/discord_protos.discord_users.v1.PreloadedUserSettings.PreloadedUserSettings.CommunitiesSettings";
                        };

                        return CommunitiesSettings;
                    })();

                    return PreloadedUserSettings;
                })();

                return PreloadedUserSettings;
            })();

            return v1;
        })();

        return discord_users;
    })();

    return discord_protos;
})();

$root.google = (function() {

    /**
     * Namespace google.
     * @exports google
     * @namespace
     */
    var google = {};

    google.protobuf = (function() {

        /**
         * Namespace protobuf.
         * @memberof google
         * @namespace
         */
        var protobuf = {};

        protobuf.DoubleValue = (function() {

            /**
             * Properties of a DoubleValue.
             * @memberof google.protobuf
             * @interface IDoubleValue
             * @property {number|null} [value] DoubleValue value
             */

            /**
             * Constructs a new DoubleValue.
             * @memberof google.protobuf
             * @classdesc Represents a DoubleValue.
             * @implements IDoubleValue
             * @constructor
             * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
             */
            function DoubleValue(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * DoubleValue value.
             * @member {number} value
             * @memberof google.protobuf.DoubleValue
             * @instance
             */
            DoubleValue.prototype.value = 0;

            /**
             * Creates a new DoubleValue instance using the specified properties.
             * @function create
             * @memberof google.protobuf.DoubleValue
             * @static
             * @param {google.protobuf.IDoubleValue=} [properties] Properties to set
             * @returns {google.protobuf.DoubleValue} DoubleValue instance
             */
            DoubleValue.create = function create(properties) {
                return new DoubleValue(properties);
            };

            /**
             * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.DoubleValue
             * @static
             * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DoubleValue.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 1, wireType 1 =*/9).double(message.value);
                return writer;
            };

            /**
             * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.DoubleValue
             * @static
             * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a DoubleValue message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.DoubleValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.DoubleValue} DoubleValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DoubleValue.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.DoubleValue();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.value = reader.double();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a DoubleValue message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.DoubleValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.DoubleValue} DoubleValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            DoubleValue.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a DoubleValue message.
             * @function verify
             * @memberof google.protobuf.DoubleValue
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            DoubleValue.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (typeof message.value !== "number")
                        return "value: number expected";
                return null;
            };

            /**
             * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.DoubleValue
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.DoubleValue} DoubleValue
             */
            DoubleValue.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.DoubleValue)
                    return object;
                var message = new $root.google.protobuf.DoubleValue();
                if (object.value != null)
                    message.value = Number(object.value);
                return message;
            };

            /**
             * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.DoubleValue
             * @static
             * @param {google.protobuf.DoubleValue} message DoubleValue
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            DoubleValue.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.value = 0;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                return object;
            };

            /**
             * Converts this DoubleValue to JSON.
             * @function toJSON
             * @memberof google.protobuf.DoubleValue
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            DoubleValue.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for DoubleValue
             * @function getTypeUrl
             * @memberof google.protobuf.DoubleValue
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            DoubleValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.DoubleValue";
            };

            return DoubleValue;
        })();

        protobuf.FloatValue = (function() {

            /**
             * Properties of a FloatValue.
             * @memberof google.protobuf
             * @interface IFloatValue
             * @property {number|null} [value] FloatValue value
             */

            /**
             * Constructs a new FloatValue.
             * @memberof google.protobuf
             * @classdesc Represents a FloatValue.
             * @implements IFloatValue
             * @constructor
             * @param {google.protobuf.IFloatValue=} [properties] Properties to set
             */
            function FloatValue(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * FloatValue value.
             * @member {number} value
             * @memberof google.protobuf.FloatValue
             * @instance
             */
            FloatValue.prototype.value = 0;

            /**
             * Creates a new FloatValue instance using the specified properties.
             * @function create
             * @memberof google.protobuf.FloatValue
             * @static
             * @param {google.protobuf.IFloatValue=} [properties] Properties to set
             * @returns {google.protobuf.FloatValue} FloatValue instance
             */
            FloatValue.create = function create(properties) {
                return new FloatValue(properties);
            };

            /**
             * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.FloatValue
             * @static
             * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FloatValue.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 1, wireType 5 =*/13).float(message.value);
                return writer;
            };

            /**
             * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.FloatValue
             * @static
             * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            FloatValue.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a FloatValue message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.FloatValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.FloatValue} FloatValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FloatValue.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.FloatValue();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.value = reader.float();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a FloatValue message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.FloatValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.FloatValue} FloatValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            FloatValue.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a FloatValue message.
             * @function verify
             * @memberof google.protobuf.FloatValue
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            FloatValue.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (typeof message.value !== "number")
                        return "value: number expected";
                return null;
            };

            /**
             * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.FloatValue
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.FloatValue} FloatValue
             */
            FloatValue.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.FloatValue)
                    return object;
                var message = new $root.google.protobuf.FloatValue();
                if (object.value != null)
                    message.value = Number(object.value);
                return message;
            };

            /**
             * Creates a plain object from a FloatValue message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.FloatValue
             * @static
             * @param {google.protobuf.FloatValue} message FloatValue
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            FloatValue.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.value = 0;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;
                return object;
            };

            /**
             * Converts this FloatValue to JSON.
             * @function toJSON
             * @memberof google.protobuf.FloatValue
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            FloatValue.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for FloatValue
             * @function getTypeUrl
             * @memberof google.protobuf.FloatValue
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            FloatValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.FloatValue";
            };

            return FloatValue;
        })();

        protobuf.Int64Value = (function() {

            /**
             * Properties of an Int64Value.
             * @memberof google.protobuf
             * @interface IInt64Value
             * @property {number|Long|null} [value] Int64Value value
             */

            /**
             * Constructs a new Int64Value.
             * @memberof google.protobuf
             * @classdesc Represents an Int64Value.
             * @implements IInt64Value
             * @constructor
             * @param {google.protobuf.IInt64Value=} [properties] Properties to set
             */
            function Int64Value(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Int64Value value.
             * @member {number|Long} value
             * @memberof google.protobuf.Int64Value
             * @instance
             */
            Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Creates a new Int64Value instance using the specified properties.
             * @function create
             * @memberof google.protobuf.Int64Value
             * @static
             * @param {google.protobuf.IInt64Value=} [properties] Properties to set
             * @returns {google.protobuf.Int64Value} Int64Value instance
             */
            Int64Value.create = function create(properties) {
                return new Int64Value(properties);
            };

            /**
             * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Int64Value
             * @static
             * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Int64Value.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.value);
                return writer;
            };

            /**
             * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Int64Value
             * @static
             * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Int64Value.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an Int64Value message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Int64Value
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Int64Value} Int64Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Int64Value.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int64Value();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.value = reader.int64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an Int64Value message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Int64Value
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Int64Value} Int64Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Int64Value.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an Int64Value message.
             * @function verify
             * @memberof google.protobuf.Int64Value
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Int64Value.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                        return "value: integer|Long expected";
                return null;
            };

            /**
             * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Int64Value
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Int64Value} Int64Value
             */
            Int64Value.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Int64Value)
                    return object;
                var message = new $root.google.protobuf.Int64Value();
                if (object.value != null)
                    if ($util.Long)
                        (message.value = $util.Long.fromValue(object.value)).unsigned = false;
                    else if (typeof object.value === "string")
                        message.value = parseInt(object.value, 10);
                    else if (typeof object.value === "number")
                        message.value = object.value;
                    else if (typeof object.value === "object")
                        message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();
                return message;
            };

            /**
             * Creates a plain object from an Int64Value message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Int64Value
             * @static
             * @param {google.protobuf.Int64Value} message Int64Value
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Int64Value.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.value = options.longs === String ? "0" : 0;
                if (message.value != null && message.hasOwnProperty("value"))
                    if (typeof message.value === "number")
                        object.value = options.longs === String ? String(message.value) : message.value;
                    else
                        object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;
                return object;
            };

            /**
             * Converts this Int64Value to JSON.
             * @function toJSON
             * @memberof google.protobuf.Int64Value
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Int64Value.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Int64Value
             * @function getTypeUrl
             * @memberof google.protobuf.Int64Value
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Int64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.Int64Value";
            };

            return Int64Value;
        })();

        protobuf.UInt64Value = (function() {

            /**
             * Properties of a UInt64Value.
             * @memberof google.protobuf
             * @interface IUInt64Value
             * @property {number|Long|null} [value] UInt64Value value
             */

            /**
             * Constructs a new UInt64Value.
             * @memberof google.protobuf
             * @classdesc Represents a UInt64Value.
             * @implements IUInt64Value
             * @constructor
             * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
             */
            function UInt64Value(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UInt64Value value.
             * @member {number|Long} value
             * @memberof google.protobuf.UInt64Value
             * @instance
             */
            UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0,0,true) : 0;

            /**
             * Creates a new UInt64Value instance using the specified properties.
             * @function create
             * @memberof google.protobuf.UInt64Value
             * @static
             * @param {google.protobuf.IUInt64Value=} [properties] Properties to set
             * @returns {google.protobuf.UInt64Value} UInt64Value instance
             */
            UInt64Value.create = function create(properties) {
                return new UInt64Value(properties);
            };

            /**
             * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.UInt64Value
             * @static
             * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UInt64Value.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.value);
                return writer;
            };

            /**
             * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.UInt64Value
             * @static
             * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a UInt64Value message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.UInt64Value
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.UInt64Value} UInt64Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UInt64Value.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt64Value();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.value = reader.uint64();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a UInt64Value message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.UInt64Value
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.UInt64Value} UInt64Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UInt64Value.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a UInt64Value message.
             * @function verify
             * @memberof google.protobuf.UInt64Value
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UInt64Value.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high)))
                        return "value: integer|Long expected";
                return null;
            };

            /**
             * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.UInt64Value
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.UInt64Value} UInt64Value
             */
            UInt64Value.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.UInt64Value)
                    return object;
                var message = new $root.google.protobuf.UInt64Value();
                if (object.value != null)
                    if ($util.Long)
                        (message.value = $util.Long.fromValue(object.value)).unsigned = true;
                    else if (typeof object.value === "string")
                        message.value = parseInt(object.value, 10);
                    else if (typeof object.value === "number")
                        message.value = object.value;
                    else if (typeof object.value === "object")
                        message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);
                return message;
            };

            /**
             * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.UInt64Value
             * @static
             * @param {google.protobuf.UInt64Value} message UInt64Value
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UInt64Value.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, true);
                        object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.value = options.longs === String ? "0" : 0;
                if (message.value != null && message.hasOwnProperty("value"))
                    if (typeof message.value === "number")
                        object.value = options.longs === String ? String(message.value) : message.value;
                    else
                        object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;
                return object;
            };

            /**
             * Converts this UInt64Value to JSON.
             * @function toJSON
             * @memberof google.protobuf.UInt64Value
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UInt64Value.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UInt64Value
             * @function getTypeUrl
             * @memberof google.protobuf.UInt64Value
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UInt64Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.UInt64Value";
            };

            return UInt64Value;
        })();

        protobuf.Int32Value = (function() {

            /**
             * Properties of an Int32Value.
             * @memberof google.protobuf
             * @interface IInt32Value
             * @property {number|null} [value] Int32Value value
             */

            /**
             * Constructs a new Int32Value.
             * @memberof google.protobuf
             * @classdesc Represents an Int32Value.
             * @implements IInt32Value
             * @constructor
             * @param {google.protobuf.IInt32Value=} [properties] Properties to set
             */
            function Int32Value(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Int32Value value.
             * @member {number} value
             * @memberof google.protobuf.Int32Value
             * @instance
             */
            Int32Value.prototype.value = 0;

            /**
             * Creates a new Int32Value instance using the specified properties.
             * @function create
             * @memberof google.protobuf.Int32Value
             * @static
             * @param {google.protobuf.IInt32Value=} [properties] Properties to set
             * @returns {google.protobuf.Int32Value} Int32Value instance
             */
            Int32Value.create = function create(properties) {
                return new Int32Value(properties);
            };

            /**
             * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Int32Value
             * @static
             * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Int32Value.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.value);
                return writer;
            };

            /**
             * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Int32Value
             * @static
             * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Int32Value.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes an Int32Value message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Int32Value
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Int32Value} Int32Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Int32Value.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Int32Value();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.value = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes an Int32Value message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Int32Value
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Int32Value} Int32Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Int32Value.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies an Int32Value message.
             * @function verify
             * @memberof google.protobuf.Int32Value
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Int32Value.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isInteger(message.value))
                        return "value: integer expected";
                return null;
            };

            /**
             * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Int32Value
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Int32Value} Int32Value
             */
            Int32Value.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Int32Value)
                    return object;
                var message = new $root.google.protobuf.Int32Value();
                if (object.value != null)
                    message.value = object.value | 0;
                return message;
            };

            /**
             * Creates a plain object from an Int32Value message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Int32Value
             * @static
             * @param {google.protobuf.Int32Value} message Int32Value
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Int32Value.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.value = 0;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };

            /**
             * Converts this Int32Value to JSON.
             * @function toJSON
             * @memberof google.protobuf.Int32Value
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Int32Value.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Int32Value
             * @function getTypeUrl
             * @memberof google.protobuf.Int32Value
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Int32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.Int32Value";
            };

            return Int32Value;
        })();

        protobuf.UInt32Value = (function() {

            /**
             * Properties of a UInt32Value.
             * @memberof google.protobuf
             * @interface IUInt32Value
             * @property {number|null} [value] UInt32Value value
             */

            /**
             * Constructs a new UInt32Value.
             * @memberof google.protobuf
             * @classdesc Represents a UInt32Value.
             * @implements IUInt32Value
             * @constructor
             * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
             */
            function UInt32Value(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * UInt32Value value.
             * @member {number} value
             * @memberof google.protobuf.UInt32Value
             * @instance
             */
            UInt32Value.prototype.value = 0;

            /**
             * Creates a new UInt32Value instance using the specified properties.
             * @function create
             * @memberof google.protobuf.UInt32Value
             * @static
             * @param {google.protobuf.IUInt32Value=} [properties] Properties to set
             * @returns {google.protobuf.UInt32Value} UInt32Value instance
             */
            UInt32Value.create = function create(properties) {
                return new UInt32Value(properties);
            };

            /**
             * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.UInt32Value
             * @static
             * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UInt32Value.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.value);
                return writer;
            };

            /**
             * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.UInt32Value
             * @static
             * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a UInt32Value message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.UInt32Value
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.UInt32Value} UInt32Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UInt32Value.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.UInt32Value();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.value = reader.uint32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a UInt32Value message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.UInt32Value
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.UInt32Value} UInt32Value
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            UInt32Value.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a UInt32Value message.
             * @function verify
             * @memberof google.protobuf.UInt32Value
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            UInt32Value.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isInteger(message.value))
                        return "value: integer expected";
                return null;
            };

            /**
             * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.UInt32Value
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.UInt32Value} UInt32Value
             */
            UInt32Value.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.UInt32Value)
                    return object;
                var message = new $root.google.protobuf.UInt32Value();
                if (object.value != null)
                    message.value = object.value >>> 0;
                return message;
            };

            /**
             * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.UInt32Value
             * @static
             * @param {google.protobuf.UInt32Value} message UInt32Value
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            UInt32Value.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.value = 0;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };

            /**
             * Converts this UInt32Value to JSON.
             * @function toJSON
             * @memberof google.protobuf.UInt32Value
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            UInt32Value.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for UInt32Value
             * @function getTypeUrl
             * @memberof google.protobuf.UInt32Value
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            UInt32Value.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.UInt32Value";
            };

            return UInt32Value;
        })();

        protobuf.BoolValue = (function() {

            /**
             * Properties of a BoolValue.
             * @memberof google.protobuf
             * @interface IBoolValue
             * @property {boolean|null} [value] BoolValue value
             */

            /**
             * Constructs a new BoolValue.
             * @memberof google.protobuf
             * @classdesc Represents a BoolValue.
             * @implements IBoolValue
             * @constructor
             * @param {google.protobuf.IBoolValue=} [properties] Properties to set
             */
            function BoolValue(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * BoolValue value.
             * @member {boolean} value
             * @memberof google.protobuf.BoolValue
             * @instance
             */
            BoolValue.prototype.value = false;

            /**
             * Creates a new BoolValue instance using the specified properties.
             * @function create
             * @memberof google.protobuf.BoolValue
             * @static
             * @param {google.protobuf.IBoolValue=} [properties] Properties to set
             * @returns {google.protobuf.BoolValue} BoolValue instance
             */
            BoolValue.create = function create(properties) {
                return new BoolValue(properties);
            };

            /**
             * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.BoolValue
             * @static
             * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BoolValue.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 1, wireType 0 =*/8).bool(message.value);
                return writer;
            };

            /**
             * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.BoolValue
             * @static
             * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BoolValue.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a BoolValue message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.BoolValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.BoolValue} BoolValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BoolValue.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BoolValue();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.value = reader.bool();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a BoolValue message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.BoolValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.BoolValue} BoolValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BoolValue.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a BoolValue message.
             * @function verify
             * @memberof google.protobuf.BoolValue
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            BoolValue.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (typeof message.value !== "boolean")
                        return "value: boolean expected";
                return null;
            };

            /**
             * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.BoolValue
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.BoolValue} BoolValue
             */
            BoolValue.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.BoolValue)
                    return object;
                var message = new $root.google.protobuf.BoolValue();
                if (object.value != null)
                    message.value = Boolean(object.value);
                return message;
            };

            /**
             * Creates a plain object from a BoolValue message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.BoolValue
             * @static
             * @param {google.protobuf.BoolValue} message BoolValue
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            BoolValue.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.value = false;
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };

            /**
             * Converts this BoolValue to JSON.
             * @function toJSON
             * @memberof google.protobuf.BoolValue
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            BoolValue.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for BoolValue
             * @function getTypeUrl
             * @memberof google.protobuf.BoolValue
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            BoolValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.BoolValue";
            };

            return BoolValue;
        })();

        protobuf.StringValue = (function() {

            /**
             * Properties of a StringValue.
             * @memberof google.protobuf
             * @interface IStringValue
             * @property {string|null} [value] StringValue value
             */

            /**
             * Constructs a new StringValue.
             * @memberof google.protobuf
             * @classdesc Represents a StringValue.
             * @implements IStringValue
             * @constructor
             * @param {google.protobuf.IStringValue=} [properties] Properties to set
             */
            function StringValue(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * StringValue value.
             * @member {string} value
             * @memberof google.protobuf.StringValue
             * @instance
             */
            StringValue.prototype.value = "";

            /**
             * Creates a new StringValue instance using the specified properties.
             * @function create
             * @memberof google.protobuf.StringValue
             * @static
             * @param {google.protobuf.IStringValue=} [properties] Properties to set
             * @returns {google.protobuf.StringValue} StringValue instance
             */
            StringValue.create = function create(properties) {
                return new StringValue(properties);
            };

            /**
             * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.StringValue
             * @static
             * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StringValue.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.value);
                return writer;
            };

            /**
             * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.StringValue
             * @static
             * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            StringValue.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a StringValue message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.StringValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.StringValue} StringValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StringValue.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.StringValue();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.value = reader.string();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a StringValue message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.StringValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.StringValue} StringValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            StringValue.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a StringValue message.
             * @function verify
             * @memberof google.protobuf.StringValue
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            StringValue.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!$util.isString(message.value))
                        return "value: string expected";
                return null;
            };

            /**
             * Creates a StringValue message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.StringValue
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.StringValue} StringValue
             */
            StringValue.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.StringValue)
                    return object;
                var message = new $root.google.protobuf.StringValue();
                if (object.value != null)
                    message.value = String(object.value);
                return message;
            };

            /**
             * Creates a plain object from a StringValue message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.StringValue
             * @static
             * @param {google.protobuf.StringValue} message StringValue
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            StringValue.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    object.value = "";
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = message.value;
                return object;
            };

            /**
             * Converts this StringValue to JSON.
             * @function toJSON
             * @memberof google.protobuf.StringValue
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            StringValue.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for StringValue
             * @function getTypeUrl
             * @memberof google.protobuf.StringValue
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            StringValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.StringValue";
            };

            return StringValue;
        })();

        protobuf.BytesValue = (function() {

            /**
             * Properties of a BytesValue.
             * @memberof google.protobuf
             * @interface IBytesValue
             * @property {Uint8Array|null} [value] BytesValue value
             */

            /**
             * Constructs a new BytesValue.
             * @memberof google.protobuf
             * @classdesc Represents a BytesValue.
             * @implements IBytesValue
             * @constructor
             * @param {google.protobuf.IBytesValue=} [properties] Properties to set
             */
            function BytesValue(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * BytesValue value.
             * @member {Uint8Array} value
             * @memberof google.protobuf.BytesValue
             * @instance
             */
            BytesValue.prototype.value = $util.newBuffer([]);

            /**
             * Creates a new BytesValue instance using the specified properties.
             * @function create
             * @memberof google.protobuf.BytesValue
             * @static
             * @param {google.protobuf.IBytesValue=} [properties] Properties to set
             * @returns {google.protobuf.BytesValue} BytesValue instance
             */
            BytesValue.create = function create(properties) {
                return new BytesValue(properties);
            };

            /**
             * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.BytesValue
             * @static
             * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BytesValue.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.value != null && Object.hasOwnProperty.call(message, "value"))
                    writer.uint32(/* id 1, wireType 2 =*/10).bytes(message.value);
                return writer;
            };

            /**
             * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.BytesValue
             * @static
             * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            BytesValue.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a BytesValue message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.BytesValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.BytesValue} BytesValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BytesValue.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.BytesValue();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.value = reader.bytes();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a BytesValue message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.BytesValue
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.BytesValue} BytesValue
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            BytesValue.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a BytesValue message.
             * @function verify
             * @memberof google.protobuf.BytesValue
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            BytesValue.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.value != null && message.hasOwnProperty("value"))
                    if (!(message.value && typeof message.value.length === "number" || $util.isString(message.value)))
                        return "value: buffer expected";
                return null;
            };

            /**
             * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.BytesValue
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.BytesValue} BytesValue
             */
            BytesValue.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.BytesValue)
                    return object;
                var message = new $root.google.protobuf.BytesValue();
                if (object.value != null)
                    if (typeof object.value === "string")
                        $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);
                    else if (object.value.length >= 0)
                        message.value = object.value;
                return message;
            };

            /**
             * Creates a plain object from a BytesValue message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.BytesValue
             * @static
             * @param {google.protobuf.BytesValue} message BytesValue
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            BytesValue.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults)
                    if (options.bytes === String)
                        object.value = "";
                    else {
                        object.value = [];
                        if (options.bytes !== Array)
                            object.value = $util.newBuffer(object.value);
                    }
                if (message.value != null && message.hasOwnProperty("value"))
                    object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;
                return object;
            };

            /**
             * Converts this BytesValue to JSON.
             * @function toJSON
             * @memberof google.protobuf.BytesValue
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            BytesValue.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for BytesValue
             * @function getTypeUrl
             * @memberof google.protobuf.BytesValue
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            BytesValue.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.BytesValue";
            };

            return BytesValue;
        })();

        protobuf.Timestamp = (function() {

            /**
             * Properties of a Timestamp.
             * @memberof google.protobuf
             * @interface ITimestamp
             * @property {number|Long|null} [seconds] Timestamp seconds
             * @property {number|null} [nanos] Timestamp nanos
             */

            /**
             * Constructs a new Timestamp.
             * @memberof google.protobuf
             * @classdesc Represents a Timestamp.
             * @implements ITimestamp
             * @constructor
             * @param {google.protobuf.ITimestamp=} [properties] Properties to set
             */
            function Timestamp(properties) {
                if (properties)
                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)
                        if (properties[keys[i]] != null)
                            this[keys[i]] = properties[keys[i]];
            }

            /**
             * Timestamp seconds.
             * @member {number|Long} seconds
             * @memberof google.protobuf.Timestamp
             * @instance
             */
            Timestamp.prototype.seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;

            /**
             * Timestamp nanos.
             * @member {number} nanos
             * @memberof google.protobuf.Timestamp
             * @instance
             */
            Timestamp.prototype.nanos = 0;

            /**
             * Creates a new Timestamp instance using the specified properties.
             * @function create
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp=} [properties] Properties to set
             * @returns {google.protobuf.Timestamp} Timestamp instance
             */
            Timestamp.create = function create(properties) {
                return new Timestamp(properties);
            };

            /**
             * Encodes the specified Timestamp message. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @function encode
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Timestamp.encode = function encode(message, writer) {
                if (!writer)
                    writer = $Writer.create();
                if (message.seconds != null && Object.hasOwnProperty.call(message, "seconds"))
                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.seconds);
                if (message.nanos != null && Object.hasOwnProperty.call(message, "nanos"))
                    writer.uint32(/* id 2, wireType 0 =*/16).int32(message.nanos);
                return writer;
            };

            /**
             * Encodes the specified Timestamp message, length delimited. Does not implicitly {@link google.protobuf.Timestamp.verify|verify} messages.
             * @function encodeDelimited
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.ITimestamp} message Timestamp message or plain object to encode
             * @param {$protobuf.Writer} [writer] Writer to encode to
             * @returns {$protobuf.Writer} Writer
             */
            Timestamp.encodeDelimited = function encodeDelimited(message, writer) {
                return this.encode(message, writer).ldelim();
            };

            /**
             * Decodes a Timestamp message from the specified reader or buffer.
             * @function decode
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @param {number} [length] Message length if known beforehand
             * @returns {google.protobuf.Timestamp} Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Timestamp.decode = function decode(reader, length) {
                if (!(reader instanceof $Reader))
                    reader = $Reader.create(reader);
                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.google.protobuf.Timestamp();
                while (reader.pos < end) {
                    var tag = reader.uint32();
                    switch (tag >>> 3) {
                    case 1: {
                            message.seconds = reader.int64();
                            break;
                        }
                    case 2: {
                            message.nanos = reader.int32();
                            break;
                        }
                    default:
                        reader.skipType(tag & 7);
                        break;
                    }
                }
                return message;
            };

            /**
             * Decodes a Timestamp message from the specified reader or buffer, length delimited.
             * @function decodeDelimited
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from
             * @returns {google.protobuf.Timestamp} Timestamp
             * @throws {Error} If the payload is not a reader or valid buffer
             * @throws {$protobuf.util.ProtocolError} If required fields are missing
             */
            Timestamp.decodeDelimited = function decodeDelimited(reader) {
                if (!(reader instanceof $Reader))
                    reader = new $Reader(reader);
                return this.decode(reader, reader.uint32());
            };

            /**
             * Verifies a Timestamp message.
             * @function verify
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {Object.<string,*>} message Plain object to verify
             * @returns {string|null} `null` if valid, otherwise the reason why it is not
             */
            Timestamp.verify = function verify(message) {
                if (typeof message !== "object" || message === null)
                    return "object expected";
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (!$util.isInteger(message.seconds) && !(message.seconds && $util.isInteger(message.seconds.low) && $util.isInteger(message.seconds.high)))
                        return "seconds: integer|Long expected";
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    if (!$util.isInteger(message.nanos))
                        return "nanos: integer expected";
                return null;
            };

            /**
             * Creates a Timestamp message from a plain object. Also converts values to their respective internal types.
             * @function fromObject
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {Object.<string,*>} object Plain object
             * @returns {google.protobuf.Timestamp} Timestamp
             */
            Timestamp.fromObject = function fromObject(object) {
                if (object instanceof $root.google.protobuf.Timestamp)
                    return object;
                var message = new $root.google.protobuf.Timestamp();
                if (object.seconds != null)
                    if ($util.Long)
                        (message.seconds = $util.Long.fromValue(object.seconds)).unsigned = false;
                    else if (typeof object.seconds === "string")
                        message.seconds = parseInt(object.seconds, 10);
                    else if (typeof object.seconds === "number")
                        message.seconds = object.seconds;
                    else if (typeof object.seconds === "object")
                        message.seconds = new $util.LongBits(object.seconds.low >>> 0, object.seconds.high >>> 0).toNumber();
                if (object.nanos != null)
                    message.nanos = object.nanos | 0;
                return message;
            };

            /**
             * Creates a plain object from a Timestamp message. Also converts values to other types if specified.
             * @function toObject
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {google.protobuf.Timestamp} message Timestamp
             * @param {$protobuf.IConversionOptions} [options] Conversion options
             * @returns {Object.<string,*>} Plain object
             */
            Timestamp.toObject = function toObject(message, options) {
                if (!options)
                    options = {};
                var object = {};
                if (options.defaults) {
                    if ($util.Long) {
                        var long = new $util.Long(0, 0, false);
                        object.seconds = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;
                    } else
                        object.seconds = options.longs === String ? "0" : 0;
                    object.nanos = 0;
                }
                if (message.seconds != null && message.hasOwnProperty("seconds"))
                    if (typeof message.seconds === "number")
                        object.seconds = options.longs === String ? String(message.seconds) : message.seconds;
                    else
                        object.seconds = options.longs === String ? $util.Long.prototype.toString.call(message.seconds) : options.longs === Number ? new $util.LongBits(message.seconds.low >>> 0, message.seconds.high >>> 0).toNumber() : message.seconds;
                if (message.nanos != null && message.hasOwnProperty("nanos"))
                    object.nanos = message.nanos;
                return object;
            };

            /**
             * Converts this Timestamp to JSON.
             * @function toJSON
             * @memberof google.protobuf.Timestamp
             * @instance
             * @returns {Object.<string,*>} JSON object
             */
            Timestamp.prototype.toJSON = function toJSON() {
                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);
            };

            /**
             * Gets the default type url for Timestamp
             * @function getTypeUrl
             * @memberof google.protobuf.Timestamp
             * @static
             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
             * @returns {string} The default type url
             */
            Timestamp.getTypeUrl = function getTypeUrl(typeUrlPrefix) {
                if (typeUrlPrefix === undefined) {
                    typeUrlPrefix = "type.googleapis.com";
                }
                return typeUrlPrefix + "/google.protobuf.Timestamp";
            };

            return Timestamp;
        })();

        return protobuf;
    })();

    return google;
})();

module.exports = $root;
